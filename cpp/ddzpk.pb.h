// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ddzpk.proto

#ifndef PROTOBUF_ddzpk_2eproto__INCLUDED
#define PROTOBUF_ddzpk_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "base.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ddzpk_2eproto();
void protobuf_AssignDesc_ddzpk_2eproto();
void protobuf_ShutdownFile_ddzpk_2eproto();

class ProDDZGameStatusResponse;
class ProDDZGameDeskInfoResponse;
class ProDDZGameReadyNotify;
class ProDDZGameReadyRequest;
class ProDDZGameReadyResponse;
class ProDDZGameStart;
class ProDDZGameDiceNotify;
class ProDDZGameDiceRequest;
class ProDDZGameDiceResult;
class ProDDZGameSendMahs;
class ProDDZGameKingData;
class ProDDZGameOutMahsResponse;
class ProDDZGameTimerPower;
class ProDDZGameOperateNotify;
class ProDDZGameOperateResult;
class ProDDZGameOperateRequest;
class ProDDZGameTrust;
class ProDDZGameOutMahRequest;
class ProDDZGameCatchCard;
class DDZMahList;
class DDZScoreList;
class DDZAwardList;
class ProDDZGameEnd;
class ProDDZGameQuickSoundRequest;
class ProDDZGameQuickSoundResponse;
class ProDDZGameSendDiscardMahs;
class DDZWeaveItem;
class DDZWeaveItems;
class ProDDZGameSendActionMahs;
class ProDDZGameBrokenRequest;
class ProDDZGameBrokenOperate;
class ProDDZGameBrokenNotify;
class ProDDZGameRuleConfig;
class ProDDZGameBrokenStatus;
class ProDDZGameDataResp;
class ProDDZGameRecordRequest;
class ProDDZGameRecordResponse;
class ProDDZGameUserLocationRequest;
class ProDDZGameSyncCardResponse;
class ProDDZGameUserPhoneStatusRequest;
class ProDDZGameUserGiveUpRequest;
class ProDDZGameUserHintRequest;
class ProDDZGameUserHintResponse;
class ProDDZGameUserCallScoreResponse;
class ProDDZGameUserCallScoreRequest;
class ProDDZGameCallNotify;
class ProDDZGameQiangNotify;
class ProDDZGameUserCallLandlordResponse;
class ProDDZGameUserCallLandlordRequest;
class ProDDZGameUserQinagLandlordResponse;
class ProDDZGameUserQiangLandlordRequest;
class ProDDZGameSendLastCard;
class ProDDZGameUserMingPaiRequest;
class ProDDZGameUserMingPaiResponse;
class ProDDZGameMingNotify;
class ProDDZGameStartAgain;

enum ProDDZGameStatusResponse_MSGID {
  ProDDZGameStatusResponse_MSGID_ID = 2200
};
bool ProDDZGameStatusResponse_MSGID_IsValid(int value);
const ProDDZGameStatusResponse_MSGID ProDDZGameStatusResponse_MSGID_MSGID_MIN = ProDDZGameStatusResponse_MSGID_ID;
const ProDDZGameStatusResponse_MSGID ProDDZGameStatusResponse_MSGID_MSGID_MAX = ProDDZGameStatusResponse_MSGID_ID;
const int ProDDZGameStatusResponse_MSGID_MSGID_ARRAYSIZE = ProDDZGameStatusResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameStatusResponse_MSGID_descriptor();
inline const ::std::string& ProDDZGameStatusResponse_MSGID_Name(ProDDZGameStatusResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameStatusResponse_MSGID_descriptor(), value);
}
inline bool ProDDZGameStatusResponse_MSGID_Parse(
    const ::std::string& name, ProDDZGameStatusResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameStatusResponse_MSGID>(
    ProDDZGameStatusResponse_MSGID_descriptor(), name, value);
}
enum ProDDZGameDeskInfoResponse_MSGID {
  ProDDZGameDeskInfoResponse_MSGID_ID = 2201
};
bool ProDDZGameDeskInfoResponse_MSGID_IsValid(int value);
const ProDDZGameDeskInfoResponse_MSGID ProDDZGameDeskInfoResponse_MSGID_MSGID_MIN = ProDDZGameDeskInfoResponse_MSGID_ID;
const ProDDZGameDeskInfoResponse_MSGID ProDDZGameDeskInfoResponse_MSGID_MSGID_MAX = ProDDZGameDeskInfoResponse_MSGID_ID;
const int ProDDZGameDeskInfoResponse_MSGID_MSGID_ARRAYSIZE = ProDDZGameDeskInfoResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameDeskInfoResponse_MSGID_descriptor();
inline const ::std::string& ProDDZGameDeskInfoResponse_MSGID_Name(ProDDZGameDeskInfoResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameDeskInfoResponse_MSGID_descriptor(), value);
}
inline bool ProDDZGameDeskInfoResponse_MSGID_Parse(
    const ::std::string& name, ProDDZGameDeskInfoResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameDeskInfoResponse_MSGID>(
    ProDDZGameDeskInfoResponse_MSGID_descriptor(), name, value);
}
enum ProDDZGameReadyNotify_MSGID {
  ProDDZGameReadyNotify_MSGID_ID = 2202
};
bool ProDDZGameReadyNotify_MSGID_IsValid(int value);
const ProDDZGameReadyNotify_MSGID ProDDZGameReadyNotify_MSGID_MSGID_MIN = ProDDZGameReadyNotify_MSGID_ID;
const ProDDZGameReadyNotify_MSGID ProDDZGameReadyNotify_MSGID_MSGID_MAX = ProDDZGameReadyNotify_MSGID_ID;
const int ProDDZGameReadyNotify_MSGID_MSGID_ARRAYSIZE = ProDDZGameReadyNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameReadyNotify_MSGID_descriptor();
inline const ::std::string& ProDDZGameReadyNotify_MSGID_Name(ProDDZGameReadyNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameReadyNotify_MSGID_descriptor(), value);
}
inline bool ProDDZGameReadyNotify_MSGID_Parse(
    const ::std::string& name, ProDDZGameReadyNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameReadyNotify_MSGID>(
    ProDDZGameReadyNotify_MSGID_descriptor(), name, value);
}
enum ProDDZGameReadyRequest_MSGID {
  ProDDZGameReadyRequest_MSGID_ID = 2203
};
bool ProDDZGameReadyRequest_MSGID_IsValid(int value);
const ProDDZGameReadyRequest_MSGID ProDDZGameReadyRequest_MSGID_MSGID_MIN = ProDDZGameReadyRequest_MSGID_ID;
const ProDDZGameReadyRequest_MSGID ProDDZGameReadyRequest_MSGID_MSGID_MAX = ProDDZGameReadyRequest_MSGID_ID;
const int ProDDZGameReadyRequest_MSGID_MSGID_ARRAYSIZE = ProDDZGameReadyRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameReadyRequest_MSGID_descriptor();
inline const ::std::string& ProDDZGameReadyRequest_MSGID_Name(ProDDZGameReadyRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameReadyRequest_MSGID_descriptor(), value);
}
inline bool ProDDZGameReadyRequest_MSGID_Parse(
    const ::std::string& name, ProDDZGameReadyRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameReadyRequest_MSGID>(
    ProDDZGameReadyRequest_MSGID_descriptor(), name, value);
}
enum ProDDZGameReadyResponse_MSGID {
  ProDDZGameReadyResponse_MSGID_ID = 2204
};
bool ProDDZGameReadyResponse_MSGID_IsValid(int value);
const ProDDZGameReadyResponse_MSGID ProDDZGameReadyResponse_MSGID_MSGID_MIN = ProDDZGameReadyResponse_MSGID_ID;
const ProDDZGameReadyResponse_MSGID ProDDZGameReadyResponse_MSGID_MSGID_MAX = ProDDZGameReadyResponse_MSGID_ID;
const int ProDDZGameReadyResponse_MSGID_MSGID_ARRAYSIZE = ProDDZGameReadyResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameReadyResponse_MSGID_descriptor();
inline const ::std::string& ProDDZGameReadyResponse_MSGID_Name(ProDDZGameReadyResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameReadyResponse_MSGID_descriptor(), value);
}
inline bool ProDDZGameReadyResponse_MSGID_Parse(
    const ::std::string& name, ProDDZGameReadyResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameReadyResponse_MSGID>(
    ProDDZGameReadyResponse_MSGID_descriptor(), name, value);
}
enum ProDDZGameStart_MSGID {
  ProDDZGameStart_MSGID_ID = 2205
};
bool ProDDZGameStart_MSGID_IsValid(int value);
const ProDDZGameStart_MSGID ProDDZGameStart_MSGID_MSGID_MIN = ProDDZGameStart_MSGID_ID;
const ProDDZGameStart_MSGID ProDDZGameStart_MSGID_MSGID_MAX = ProDDZGameStart_MSGID_ID;
const int ProDDZGameStart_MSGID_MSGID_ARRAYSIZE = ProDDZGameStart_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameStart_MSGID_descriptor();
inline const ::std::string& ProDDZGameStart_MSGID_Name(ProDDZGameStart_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameStart_MSGID_descriptor(), value);
}
inline bool ProDDZGameStart_MSGID_Parse(
    const ::std::string& name, ProDDZGameStart_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameStart_MSGID>(
    ProDDZGameStart_MSGID_descriptor(), name, value);
}
enum ProDDZGameDiceNotify_MSGID {
  ProDDZGameDiceNotify_MSGID_ID = 2206
};
bool ProDDZGameDiceNotify_MSGID_IsValid(int value);
const ProDDZGameDiceNotify_MSGID ProDDZGameDiceNotify_MSGID_MSGID_MIN = ProDDZGameDiceNotify_MSGID_ID;
const ProDDZGameDiceNotify_MSGID ProDDZGameDiceNotify_MSGID_MSGID_MAX = ProDDZGameDiceNotify_MSGID_ID;
const int ProDDZGameDiceNotify_MSGID_MSGID_ARRAYSIZE = ProDDZGameDiceNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameDiceNotify_MSGID_descriptor();
inline const ::std::string& ProDDZGameDiceNotify_MSGID_Name(ProDDZGameDiceNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameDiceNotify_MSGID_descriptor(), value);
}
inline bool ProDDZGameDiceNotify_MSGID_Parse(
    const ::std::string& name, ProDDZGameDiceNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameDiceNotify_MSGID>(
    ProDDZGameDiceNotify_MSGID_descriptor(), name, value);
}
enum ProDDZGameDiceRequest_MSGID {
  ProDDZGameDiceRequest_MSGID_ID = 2207
};
bool ProDDZGameDiceRequest_MSGID_IsValid(int value);
const ProDDZGameDiceRequest_MSGID ProDDZGameDiceRequest_MSGID_MSGID_MIN = ProDDZGameDiceRequest_MSGID_ID;
const ProDDZGameDiceRequest_MSGID ProDDZGameDiceRequest_MSGID_MSGID_MAX = ProDDZGameDiceRequest_MSGID_ID;
const int ProDDZGameDiceRequest_MSGID_MSGID_ARRAYSIZE = ProDDZGameDiceRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameDiceRequest_MSGID_descriptor();
inline const ::std::string& ProDDZGameDiceRequest_MSGID_Name(ProDDZGameDiceRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameDiceRequest_MSGID_descriptor(), value);
}
inline bool ProDDZGameDiceRequest_MSGID_Parse(
    const ::std::string& name, ProDDZGameDiceRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameDiceRequest_MSGID>(
    ProDDZGameDiceRequest_MSGID_descriptor(), name, value);
}
enum ProDDZGameDiceResult_MSGID {
  ProDDZGameDiceResult_MSGID_ID = 2208
};
bool ProDDZGameDiceResult_MSGID_IsValid(int value);
const ProDDZGameDiceResult_MSGID ProDDZGameDiceResult_MSGID_MSGID_MIN = ProDDZGameDiceResult_MSGID_ID;
const ProDDZGameDiceResult_MSGID ProDDZGameDiceResult_MSGID_MSGID_MAX = ProDDZGameDiceResult_MSGID_ID;
const int ProDDZGameDiceResult_MSGID_MSGID_ARRAYSIZE = ProDDZGameDiceResult_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameDiceResult_MSGID_descriptor();
inline const ::std::string& ProDDZGameDiceResult_MSGID_Name(ProDDZGameDiceResult_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameDiceResult_MSGID_descriptor(), value);
}
inline bool ProDDZGameDiceResult_MSGID_Parse(
    const ::std::string& name, ProDDZGameDiceResult_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameDiceResult_MSGID>(
    ProDDZGameDiceResult_MSGID_descriptor(), name, value);
}
enum ProDDZGameSendMahs_MSGID {
  ProDDZGameSendMahs_MSGID_ID = 2209
};
bool ProDDZGameSendMahs_MSGID_IsValid(int value);
const ProDDZGameSendMahs_MSGID ProDDZGameSendMahs_MSGID_MSGID_MIN = ProDDZGameSendMahs_MSGID_ID;
const ProDDZGameSendMahs_MSGID ProDDZGameSendMahs_MSGID_MSGID_MAX = ProDDZGameSendMahs_MSGID_ID;
const int ProDDZGameSendMahs_MSGID_MSGID_ARRAYSIZE = ProDDZGameSendMahs_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameSendMahs_MSGID_descriptor();
inline const ::std::string& ProDDZGameSendMahs_MSGID_Name(ProDDZGameSendMahs_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameSendMahs_MSGID_descriptor(), value);
}
inline bool ProDDZGameSendMahs_MSGID_Parse(
    const ::std::string& name, ProDDZGameSendMahs_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameSendMahs_MSGID>(
    ProDDZGameSendMahs_MSGID_descriptor(), name, value);
}
enum ProDDZGameKingData_MSGID {
  ProDDZGameKingData_MSGID_ID = 2210
};
bool ProDDZGameKingData_MSGID_IsValid(int value);
const ProDDZGameKingData_MSGID ProDDZGameKingData_MSGID_MSGID_MIN = ProDDZGameKingData_MSGID_ID;
const ProDDZGameKingData_MSGID ProDDZGameKingData_MSGID_MSGID_MAX = ProDDZGameKingData_MSGID_ID;
const int ProDDZGameKingData_MSGID_MSGID_ARRAYSIZE = ProDDZGameKingData_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameKingData_MSGID_descriptor();
inline const ::std::string& ProDDZGameKingData_MSGID_Name(ProDDZGameKingData_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameKingData_MSGID_descriptor(), value);
}
inline bool ProDDZGameKingData_MSGID_Parse(
    const ::std::string& name, ProDDZGameKingData_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameKingData_MSGID>(
    ProDDZGameKingData_MSGID_descriptor(), name, value);
}
enum ProDDZGameOutMahsResponse_MSGID {
  ProDDZGameOutMahsResponse_MSGID_ID = 2211
};
bool ProDDZGameOutMahsResponse_MSGID_IsValid(int value);
const ProDDZGameOutMahsResponse_MSGID ProDDZGameOutMahsResponse_MSGID_MSGID_MIN = ProDDZGameOutMahsResponse_MSGID_ID;
const ProDDZGameOutMahsResponse_MSGID ProDDZGameOutMahsResponse_MSGID_MSGID_MAX = ProDDZGameOutMahsResponse_MSGID_ID;
const int ProDDZGameOutMahsResponse_MSGID_MSGID_ARRAYSIZE = ProDDZGameOutMahsResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameOutMahsResponse_MSGID_descriptor();
inline const ::std::string& ProDDZGameOutMahsResponse_MSGID_Name(ProDDZGameOutMahsResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameOutMahsResponse_MSGID_descriptor(), value);
}
inline bool ProDDZGameOutMahsResponse_MSGID_Parse(
    const ::std::string& name, ProDDZGameOutMahsResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameOutMahsResponse_MSGID>(
    ProDDZGameOutMahsResponse_MSGID_descriptor(), name, value);
}
enum ProDDZGameTimerPower_MSGID {
  ProDDZGameTimerPower_MSGID_ID = 2212
};
bool ProDDZGameTimerPower_MSGID_IsValid(int value);
const ProDDZGameTimerPower_MSGID ProDDZGameTimerPower_MSGID_MSGID_MIN = ProDDZGameTimerPower_MSGID_ID;
const ProDDZGameTimerPower_MSGID ProDDZGameTimerPower_MSGID_MSGID_MAX = ProDDZGameTimerPower_MSGID_ID;
const int ProDDZGameTimerPower_MSGID_MSGID_ARRAYSIZE = ProDDZGameTimerPower_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameTimerPower_MSGID_descriptor();
inline const ::std::string& ProDDZGameTimerPower_MSGID_Name(ProDDZGameTimerPower_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameTimerPower_MSGID_descriptor(), value);
}
inline bool ProDDZGameTimerPower_MSGID_Parse(
    const ::std::string& name, ProDDZGameTimerPower_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameTimerPower_MSGID>(
    ProDDZGameTimerPower_MSGID_descriptor(), name, value);
}
enum ProDDZGameOperateNotify_MSGID {
  ProDDZGameOperateNotify_MSGID_ID = 2213
};
bool ProDDZGameOperateNotify_MSGID_IsValid(int value);
const ProDDZGameOperateNotify_MSGID ProDDZGameOperateNotify_MSGID_MSGID_MIN = ProDDZGameOperateNotify_MSGID_ID;
const ProDDZGameOperateNotify_MSGID ProDDZGameOperateNotify_MSGID_MSGID_MAX = ProDDZGameOperateNotify_MSGID_ID;
const int ProDDZGameOperateNotify_MSGID_MSGID_ARRAYSIZE = ProDDZGameOperateNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameOperateNotify_MSGID_descriptor();
inline const ::std::string& ProDDZGameOperateNotify_MSGID_Name(ProDDZGameOperateNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameOperateNotify_MSGID_descriptor(), value);
}
inline bool ProDDZGameOperateNotify_MSGID_Parse(
    const ::std::string& name, ProDDZGameOperateNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameOperateNotify_MSGID>(
    ProDDZGameOperateNotify_MSGID_descriptor(), name, value);
}
enum ProDDZGameOperateResult_MSGID {
  ProDDZGameOperateResult_MSGID_ID = 2214
};
bool ProDDZGameOperateResult_MSGID_IsValid(int value);
const ProDDZGameOperateResult_MSGID ProDDZGameOperateResult_MSGID_MSGID_MIN = ProDDZGameOperateResult_MSGID_ID;
const ProDDZGameOperateResult_MSGID ProDDZGameOperateResult_MSGID_MSGID_MAX = ProDDZGameOperateResult_MSGID_ID;
const int ProDDZGameOperateResult_MSGID_MSGID_ARRAYSIZE = ProDDZGameOperateResult_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameOperateResult_MSGID_descriptor();
inline const ::std::string& ProDDZGameOperateResult_MSGID_Name(ProDDZGameOperateResult_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameOperateResult_MSGID_descriptor(), value);
}
inline bool ProDDZGameOperateResult_MSGID_Parse(
    const ::std::string& name, ProDDZGameOperateResult_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameOperateResult_MSGID>(
    ProDDZGameOperateResult_MSGID_descriptor(), name, value);
}
enum ProDDZGameOperateRequest_MSGID {
  ProDDZGameOperateRequest_MSGID_ID = 2215
};
bool ProDDZGameOperateRequest_MSGID_IsValid(int value);
const ProDDZGameOperateRequest_MSGID ProDDZGameOperateRequest_MSGID_MSGID_MIN = ProDDZGameOperateRequest_MSGID_ID;
const ProDDZGameOperateRequest_MSGID ProDDZGameOperateRequest_MSGID_MSGID_MAX = ProDDZGameOperateRequest_MSGID_ID;
const int ProDDZGameOperateRequest_MSGID_MSGID_ARRAYSIZE = ProDDZGameOperateRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameOperateRequest_MSGID_descriptor();
inline const ::std::string& ProDDZGameOperateRequest_MSGID_Name(ProDDZGameOperateRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameOperateRequest_MSGID_descriptor(), value);
}
inline bool ProDDZGameOperateRequest_MSGID_Parse(
    const ::std::string& name, ProDDZGameOperateRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameOperateRequest_MSGID>(
    ProDDZGameOperateRequest_MSGID_descriptor(), name, value);
}
enum ProDDZGameTrust_MSGID {
  ProDDZGameTrust_MSGID_ID = 2216
};
bool ProDDZGameTrust_MSGID_IsValid(int value);
const ProDDZGameTrust_MSGID ProDDZGameTrust_MSGID_MSGID_MIN = ProDDZGameTrust_MSGID_ID;
const ProDDZGameTrust_MSGID ProDDZGameTrust_MSGID_MSGID_MAX = ProDDZGameTrust_MSGID_ID;
const int ProDDZGameTrust_MSGID_MSGID_ARRAYSIZE = ProDDZGameTrust_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameTrust_MSGID_descriptor();
inline const ::std::string& ProDDZGameTrust_MSGID_Name(ProDDZGameTrust_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameTrust_MSGID_descriptor(), value);
}
inline bool ProDDZGameTrust_MSGID_Parse(
    const ::std::string& name, ProDDZGameTrust_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameTrust_MSGID>(
    ProDDZGameTrust_MSGID_descriptor(), name, value);
}
enum ProDDZGameOutMahRequest_MSGID {
  ProDDZGameOutMahRequest_MSGID_ID = 2217
};
bool ProDDZGameOutMahRequest_MSGID_IsValid(int value);
const ProDDZGameOutMahRequest_MSGID ProDDZGameOutMahRequest_MSGID_MSGID_MIN = ProDDZGameOutMahRequest_MSGID_ID;
const ProDDZGameOutMahRequest_MSGID ProDDZGameOutMahRequest_MSGID_MSGID_MAX = ProDDZGameOutMahRequest_MSGID_ID;
const int ProDDZGameOutMahRequest_MSGID_MSGID_ARRAYSIZE = ProDDZGameOutMahRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameOutMahRequest_MSGID_descriptor();
inline const ::std::string& ProDDZGameOutMahRequest_MSGID_Name(ProDDZGameOutMahRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameOutMahRequest_MSGID_descriptor(), value);
}
inline bool ProDDZGameOutMahRequest_MSGID_Parse(
    const ::std::string& name, ProDDZGameOutMahRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameOutMahRequest_MSGID>(
    ProDDZGameOutMahRequest_MSGID_descriptor(), name, value);
}
enum ProDDZGameCatchCard_MSGID {
  ProDDZGameCatchCard_MSGID_ID = 2218
};
bool ProDDZGameCatchCard_MSGID_IsValid(int value);
const ProDDZGameCatchCard_MSGID ProDDZGameCatchCard_MSGID_MSGID_MIN = ProDDZGameCatchCard_MSGID_ID;
const ProDDZGameCatchCard_MSGID ProDDZGameCatchCard_MSGID_MSGID_MAX = ProDDZGameCatchCard_MSGID_ID;
const int ProDDZGameCatchCard_MSGID_MSGID_ARRAYSIZE = ProDDZGameCatchCard_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameCatchCard_MSGID_descriptor();
inline const ::std::string& ProDDZGameCatchCard_MSGID_Name(ProDDZGameCatchCard_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameCatchCard_MSGID_descriptor(), value);
}
inline bool ProDDZGameCatchCard_MSGID_Parse(
    const ::std::string& name, ProDDZGameCatchCard_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameCatchCard_MSGID>(
    ProDDZGameCatchCard_MSGID_descriptor(), name, value);
}
enum ProDDZGameEnd_MSGID {
  ProDDZGameEnd_MSGID_ID = 2219
};
bool ProDDZGameEnd_MSGID_IsValid(int value);
const ProDDZGameEnd_MSGID ProDDZGameEnd_MSGID_MSGID_MIN = ProDDZGameEnd_MSGID_ID;
const ProDDZGameEnd_MSGID ProDDZGameEnd_MSGID_MSGID_MAX = ProDDZGameEnd_MSGID_ID;
const int ProDDZGameEnd_MSGID_MSGID_ARRAYSIZE = ProDDZGameEnd_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameEnd_MSGID_descriptor();
inline const ::std::string& ProDDZGameEnd_MSGID_Name(ProDDZGameEnd_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameEnd_MSGID_descriptor(), value);
}
inline bool ProDDZGameEnd_MSGID_Parse(
    const ::std::string& name, ProDDZGameEnd_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameEnd_MSGID>(
    ProDDZGameEnd_MSGID_descriptor(), name, value);
}
enum ProDDZGameQuickSoundRequest_MSGID {
  ProDDZGameQuickSoundRequest_MSGID_ID = 2220
};
bool ProDDZGameQuickSoundRequest_MSGID_IsValid(int value);
const ProDDZGameQuickSoundRequest_MSGID ProDDZGameQuickSoundRequest_MSGID_MSGID_MIN = ProDDZGameQuickSoundRequest_MSGID_ID;
const ProDDZGameQuickSoundRequest_MSGID ProDDZGameQuickSoundRequest_MSGID_MSGID_MAX = ProDDZGameQuickSoundRequest_MSGID_ID;
const int ProDDZGameQuickSoundRequest_MSGID_MSGID_ARRAYSIZE = ProDDZGameQuickSoundRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameQuickSoundRequest_MSGID_descriptor();
inline const ::std::string& ProDDZGameQuickSoundRequest_MSGID_Name(ProDDZGameQuickSoundRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameQuickSoundRequest_MSGID_descriptor(), value);
}
inline bool ProDDZGameQuickSoundRequest_MSGID_Parse(
    const ::std::string& name, ProDDZGameQuickSoundRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameQuickSoundRequest_MSGID>(
    ProDDZGameQuickSoundRequest_MSGID_descriptor(), name, value);
}
enum ProDDZGameQuickSoundResponse_MSGID {
  ProDDZGameQuickSoundResponse_MSGID_ID = 2221
};
bool ProDDZGameQuickSoundResponse_MSGID_IsValid(int value);
const ProDDZGameQuickSoundResponse_MSGID ProDDZGameQuickSoundResponse_MSGID_MSGID_MIN = ProDDZGameQuickSoundResponse_MSGID_ID;
const ProDDZGameQuickSoundResponse_MSGID ProDDZGameQuickSoundResponse_MSGID_MSGID_MAX = ProDDZGameQuickSoundResponse_MSGID_ID;
const int ProDDZGameQuickSoundResponse_MSGID_MSGID_ARRAYSIZE = ProDDZGameQuickSoundResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameQuickSoundResponse_MSGID_descriptor();
inline const ::std::string& ProDDZGameQuickSoundResponse_MSGID_Name(ProDDZGameQuickSoundResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameQuickSoundResponse_MSGID_descriptor(), value);
}
inline bool ProDDZGameQuickSoundResponse_MSGID_Parse(
    const ::std::string& name, ProDDZGameQuickSoundResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameQuickSoundResponse_MSGID>(
    ProDDZGameQuickSoundResponse_MSGID_descriptor(), name, value);
}
enum ProDDZGameSendDiscardMahs_MSGID {
  ProDDZGameSendDiscardMahs_MSGID_ID = 2222
};
bool ProDDZGameSendDiscardMahs_MSGID_IsValid(int value);
const ProDDZGameSendDiscardMahs_MSGID ProDDZGameSendDiscardMahs_MSGID_MSGID_MIN = ProDDZGameSendDiscardMahs_MSGID_ID;
const ProDDZGameSendDiscardMahs_MSGID ProDDZGameSendDiscardMahs_MSGID_MSGID_MAX = ProDDZGameSendDiscardMahs_MSGID_ID;
const int ProDDZGameSendDiscardMahs_MSGID_MSGID_ARRAYSIZE = ProDDZGameSendDiscardMahs_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameSendDiscardMahs_MSGID_descriptor();
inline const ::std::string& ProDDZGameSendDiscardMahs_MSGID_Name(ProDDZGameSendDiscardMahs_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameSendDiscardMahs_MSGID_descriptor(), value);
}
inline bool ProDDZGameSendDiscardMahs_MSGID_Parse(
    const ::std::string& name, ProDDZGameSendDiscardMahs_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameSendDiscardMahs_MSGID>(
    ProDDZGameSendDiscardMahs_MSGID_descriptor(), name, value);
}
enum ProDDZGameSendActionMahs_MSGID {
  ProDDZGameSendActionMahs_MSGID_ID = 2223
};
bool ProDDZGameSendActionMahs_MSGID_IsValid(int value);
const ProDDZGameSendActionMahs_MSGID ProDDZGameSendActionMahs_MSGID_MSGID_MIN = ProDDZGameSendActionMahs_MSGID_ID;
const ProDDZGameSendActionMahs_MSGID ProDDZGameSendActionMahs_MSGID_MSGID_MAX = ProDDZGameSendActionMahs_MSGID_ID;
const int ProDDZGameSendActionMahs_MSGID_MSGID_ARRAYSIZE = ProDDZGameSendActionMahs_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameSendActionMahs_MSGID_descriptor();
inline const ::std::string& ProDDZGameSendActionMahs_MSGID_Name(ProDDZGameSendActionMahs_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameSendActionMahs_MSGID_descriptor(), value);
}
inline bool ProDDZGameSendActionMahs_MSGID_Parse(
    const ::std::string& name, ProDDZGameSendActionMahs_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameSendActionMahs_MSGID>(
    ProDDZGameSendActionMahs_MSGID_descriptor(), name, value);
}
enum ProDDZGameBrokenRequest_MSGID {
  ProDDZGameBrokenRequest_MSGID_ID = 2224
};
bool ProDDZGameBrokenRequest_MSGID_IsValid(int value);
const ProDDZGameBrokenRequest_MSGID ProDDZGameBrokenRequest_MSGID_MSGID_MIN = ProDDZGameBrokenRequest_MSGID_ID;
const ProDDZGameBrokenRequest_MSGID ProDDZGameBrokenRequest_MSGID_MSGID_MAX = ProDDZGameBrokenRequest_MSGID_ID;
const int ProDDZGameBrokenRequest_MSGID_MSGID_ARRAYSIZE = ProDDZGameBrokenRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameBrokenRequest_MSGID_descriptor();
inline const ::std::string& ProDDZGameBrokenRequest_MSGID_Name(ProDDZGameBrokenRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameBrokenRequest_MSGID_descriptor(), value);
}
inline bool ProDDZGameBrokenRequest_MSGID_Parse(
    const ::std::string& name, ProDDZGameBrokenRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameBrokenRequest_MSGID>(
    ProDDZGameBrokenRequest_MSGID_descriptor(), name, value);
}
enum ProDDZGameBrokenOperate_MSGID {
  ProDDZGameBrokenOperate_MSGID_ID = 2225
};
bool ProDDZGameBrokenOperate_MSGID_IsValid(int value);
const ProDDZGameBrokenOperate_MSGID ProDDZGameBrokenOperate_MSGID_MSGID_MIN = ProDDZGameBrokenOperate_MSGID_ID;
const ProDDZGameBrokenOperate_MSGID ProDDZGameBrokenOperate_MSGID_MSGID_MAX = ProDDZGameBrokenOperate_MSGID_ID;
const int ProDDZGameBrokenOperate_MSGID_MSGID_ARRAYSIZE = ProDDZGameBrokenOperate_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameBrokenOperate_MSGID_descriptor();
inline const ::std::string& ProDDZGameBrokenOperate_MSGID_Name(ProDDZGameBrokenOperate_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameBrokenOperate_MSGID_descriptor(), value);
}
inline bool ProDDZGameBrokenOperate_MSGID_Parse(
    const ::std::string& name, ProDDZGameBrokenOperate_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameBrokenOperate_MSGID>(
    ProDDZGameBrokenOperate_MSGID_descriptor(), name, value);
}
enum ProDDZGameBrokenNotify_MSGID {
  ProDDZGameBrokenNotify_MSGID_ID = 2226
};
bool ProDDZGameBrokenNotify_MSGID_IsValid(int value);
const ProDDZGameBrokenNotify_MSGID ProDDZGameBrokenNotify_MSGID_MSGID_MIN = ProDDZGameBrokenNotify_MSGID_ID;
const ProDDZGameBrokenNotify_MSGID ProDDZGameBrokenNotify_MSGID_MSGID_MAX = ProDDZGameBrokenNotify_MSGID_ID;
const int ProDDZGameBrokenNotify_MSGID_MSGID_ARRAYSIZE = ProDDZGameBrokenNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameBrokenNotify_MSGID_descriptor();
inline const ::std::string& ProDDZGameBrokenNotify_MSGID_Name(ProDDZGameBrokenNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameBrokenNotify_MSGID_descriptor(), value);
}
inline bool ProDDZGameBrokenNotify_MSGID_Parse(
    const ::std::string& name, ProDDZGameBrokenNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameBrokenNotify_MSGID>(
    ProDDZGameBrokenNotify_MSGID_descriptor(), name, value);
}
enum ProDDZGameRuleConfig_MSGID {
  ProDDZGameRuleConfig_MSGID_ID = 2227
};
bool ProDDZGameRuleConfig_MSGID_IsValid(int value);
const ProDDZGameRuleConfig_MSGID ProDDZGameRuleConfig_MSGID_MSGID_MIN = ProDDZGameRuleConfig_MSGID_ID;
const ProDDZGameRuleConfig_MSGID ProDDZGameRuleConfig_MSGID_MSGID_MAX = ProDDZGameRuleConfig_MSGID_ID;
const int ProDDZGameRuleConfig_MSGID_MSGID_ARRAYSIZE = ProDDZGameRuleConfig_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameRuleConfig_MSGID_descriptor();
inline const ::std::string& ProDDZGameRuleConfig_MSGID_Name(ProDDZGameRuleConfig_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameRuleConfig_MSGID_descriptor(), value);
}
inline bool ProDDZGameRuleConfig_MSGID_Parse(
    const ::std::string& name, ProDDZGameRuleConfig_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameRuleConfig_MSGID>(
    ProDDZGameRuleConfig_MSGID_descriptor(), name, value);
}
enum ProDDZGameBrokenStatus_MSGID {
  ProDDZGameBrokenStatus_MSGID_ID = 2228
};
bool ProDDZGameBrokenStatus_MSGID_IsValid(int value);
const ProDDZGameBrokenStatus_MSGID ProDDZGameBrokenStatus_MSGID_MSGID_MIN = ProDDZGameBrokenStatus_MSGID_ID;
const ProDDZGameBrokenStatus_MSGID ProDDZGameBrokenStatus_MSGID_MSGID_MAX = ProDDZGameBrokenStatus_MSGID_ID;
const int ProDDZGameBrokenStatus_MSGID_MSGID_ARRAYSIZE = ProDDZGameBrokenStatus_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameBrokenStatus_MSGID_descriptor();
inline const ::std::string& ProDDZGameBrokenStatus_MSGID_Name(ProDDZGameBrokenStatus_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameBrokenStatus_MSGID_descriptor(), value);
}
inline bool ProDDZGameBrokenStatus_MSGID_Parse(
    const ::std::string& name, ProDDZGameBrokenStatus_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameBrokenStatus_MSGID>(
    ProDDZGameBrokenStatus_MSGID_descriptor(), name, value);
}
enum ProDDZGameDataResp_MSGID {
  ProDDZGameDataResp_MSGID_ID = 2229
};
bool ProDDZGameDataResp_MSGID_IsValid(int value);
const ProDDZGameDataResp_MSGID ProDDZGameDataResp_MSGID_MSGID_MIN = ProDDZGameDataResp_MSGID_ID;
const ProDDZGameDataResp_MSGID ProDDZGameDataResp_MSGID_MSGID_MAX = ProDDZGameDataResp_MSGID_ID;
const int ProDDZGameDataResp_MSGID_MSGID_ARRAYSIZE = ProDDZGameDataResp_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameDataResp_MSGID_descriptor();
inline const ::std::string& ProDDZGameDataResp_MSGID_Name(ProDDZGameDataResp_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameDataResp_MSGID_descriptor(), value);
}
inline bool ProDDZGameDataResp_MSGID_Parse(
    const ::std::string& name, ProDDZGameDataResp_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameDataResp_MSGID>(
    ProDDZGameDataResp_MSGID_descriptor(), name, value);
}
enum ProDDZGameRecordRequest_MSGID {
  ProDDZGameRecordRequest_MSGID_ID = 2230
};
bool ProDDZGameRecordRequest_MSGID_IsValid(int value);
const ProDDZGameRecordRequest_MSGID ProDDZGameRecordRequest_MSGID_MSGID_MIN = ProDDZGameRecordRequest_MSGID_ID;
const ProDDZGameRecordRequest_MSGID ProDDZGameRecordRequest_MSGID_MSGID_MAX = ProDDZGameRecordRequest_MSGID_ID;
const int ProDDZGameRecordRequest_MSGID_MSGID_ARRAYSIZE = ProDDZGameRecordRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameRecordRequest_MSGID_descriptor();
inline const ::std::string& ProDDZGameRecordRequest_MSGID_Name(ProDDZGameRecordRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameRecordRequest_MSGID_descriptor(), value);
}
inline bool ProDDZGameRecordRequest_MSGID_Parse(
    const ::std::string& name, ProDDZGameRecordRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameRecordRequest_MSGID>(
    ProDDZGameRecordRequest_MSGID_descriptor(), name, value);
}
enum ProDDZGameRecordResponse_MSGID {
  ProDDZGameRecordResponse_MSGID_ID = 2231
};
bool ProDDZGameRecordResponse_MSGID_IsValid(int value);
const ProDDZGameRecordResponse_MSGID ProDDZGameRecordResponse_MSGID_MSGID_MIN = ProDDZGameRecordResponse_MSGID_ID;
const ProDDZGameRecordResponse_MSGID ProDDZGameRecordResponse_MSGID_MSGID_MAX = ProDDZGameRecordResponse_MSGID_ID;
const int ProDDZGameRecordResponse_MSGID_MSGID_ARRAYSIZE = ProDDZGameRecordResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameRecordResponse_MSGID_descriptor();
inline const ::std::string& ProDDZGameRecordResponse_MSGID_Name(ProDDZGameRecordResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameRecordResponse_MSGID_descriptor(), value);
}
inline bool ProDDZGameRecordResponse_MSGID_Parse(
    const ::std::string& name, ProDDZGameRecordResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameRecordResponse_MSGID>(
    ProDDZGameRecordResponse_MSGID_descriptor(), name, value);
}
enum ProDDZGameUserLocationRequest_MSGID {
  ProDDZGameUserLocationRequest_MSGID_ID = 2232
};
bool ProDDZGameUserLocationRequest_MSGID_IsValid(int value);
const ProDDZGameUserLocationRequest_MSGID ProDDZGameUserLocationRequest_MSGID_MSGID_MIN = ProDDZGameUserLocationRequest_MSGID_ID;
const ProDDZGameUserLocationRequest_MSGID ProDDZGameUserLocationRequest_MSGID_MSGID_MAX = ProDDZGameUserLocationRequest_MSGID_ID;
const int ProDDZGameUserLocationRequest_MSGID_MSGID_ARRAYSIZE = ProDDZGameUserLocationRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameUserLocationRequest_MSGID_descriptor();
inline const ::std::string& ProDDZGameUserLocationRequest_MSGID_Name(ProDDZGameUserLocationRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameUserLocationRequest_MSGID_descriptor(), value);
}
inline bool ProDDZGameUserLocationRequest_MSGID_Parse(
    const ::std::string& name, ProDDZGameUserLocationRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameUserLocationRequest_MSGID>(
    ProDDZGameUserLocationRequest_MSGID_descriptor(), name, value);
}
enum ProDDZGameSyncCardResponse_MSGID {
  ProDDZGameSyncCardResponse_MSGID_ID = 2233
};
bool ProDDZGameSyncCardResponse_MSGID_IsValid(int value);
const ProDDZGameSyncCardResponse_MSGID ProDDZGameSyncCardResponse_MSGID_MSGID_MIN = ProDDZGameSyncCardResponse_MSGID_ID;
const ProDDZGameSyncCardResponse_MSGID ProDDZGameSyncCardResponse_MSGID_MSGID_MAX = ProDDZGameSyncCardResponse_MSGID_ID;
const int ProDDZGameSyncCardResponse_MSGID_MSGID_ARRAYSIZE = ProDDZGameSyncCardResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameSyncCardResponse_MSGID_descriptor();
inline const ::std::string& ProDDZGameSyncCardResponse_MSGID_Name(ProDDZGameSyncCardResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameSyncCardResponse_MSGID_descriptor(), value);
}
inline bool ProDDZGameSyncCardResponse_MSGID_Parse(
    const ::std::string& name, ProDDZGameSyncCardResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameSyncCardResponse_MSGID>(
    ProDDZGameSyncCardResponse_MSGID_descriptor(), name, value);
}
enum ProDDZGameUserPhoneStatusRequest_MSGID {
  ProDDZGameUserPhoneStatusRequest_MSGID_ID = 2234
};
bool ProDDZGameUserPhoneStatusRequest_MSGID_IsValid(int value);
const ProDDZGameUserPhoneStatusRequest_MSGID ProDDZGameUserPhoneStatusRequest_MSGID_MSGID_MIN = ProDDZGameUserPhoneStatusRequest_MSGID_ID;
const ProDDZGameUserPhoneStatusRequest_MSGID ProDDZGameUserPhoneStatusRequest_MSGID_MSGID_MAX = ProDDZGameUserPhoneStatusRequest_MSGID_ID;
const int ProDDZGameUserPhoneStatusRequest_MSGID_MSGID_ARRAYSIZE = ProDDZGameUserPhoneStatusRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameUserPhoneStatusRequest_MSGID_descriptor();
inline const ::std::string& ProDDZGameUserPhoneStatusRequest_MSGID_Name(ProDDZGameUserPhoneStatusRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameUserPhoneStatusRequest_MSGID_descriptor(), value);
}
inline bool ProDDZGameUserPhoneStatusRequest_MSGID_Parse(
    const ::std::string& name, ProDDZGameUserPhoneStatusRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameUserPhoneStatusRequest_MSGID>(
    ProDDZGameUserPhoneStatusRequest_MSGID_descriptor(), name, value);
}
enum ProDDZGameUserGiveUpRequest_MSGID {
  ProDDZGameUserGiveUpRequest_MSGID_ID = 2235
};
bool ProDDZGameUserGiveUpRequest_MSGID_IsValid(int value);
const ProDDZGameUserGiveUpRequest_MSGID ProDDZGameUserGiveUpRequest_MSGID_MSGID_MIN = ProDDZGameUserGiveUpRequest_MSGID_ID;
const ProDDZGameUserGiveUpRequest_MSGID ProDDZGameUserGiveUpRequest_MSGID_MSGID_MAX = ProDDZGameUserGiveUpRequest_MSGID_ID;
const int ProDDZGameUserGiveUpRequest_MSGID_MSGID_ARRAYSIZE = ProDDZGameUserGiveUpRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameUserGiveUpRequest_MSGID_descriptor();
inline const ::std::string& ProDDZGameUserGiveUpRequest_MSGID_Name(ProDDZGameUserGiveUpRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameUserGiveUpRequest_MSGID_descriptor(), value);
}
inline bool ProDDZGameUserGiveUpRequest_MSGID_Parse(
    const ::std::string& name, ProDDZGameUserGiveUpRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameUserGiveUpRequest_MSGID>(
    ProDDZGameUserGiveUpRequest_MSGID_descriptor(), name, value);
}
enum ProDDZGameUserHintRequest_MSGID {
  ProDDZGameUserHintRequest_MSGID_ID = 2236
};
bool ProDDZGameUserHintRequest_MSGID_IsValid(int value);
const ProDDZGameUserHintRequest_MSGID ProDDZGameUserHintRequest_MSGID_MSGID_MIN = ProDDZGameUserHintRequest_MSGID_ID;
const ProDDZGameUserHintRequest_MSGID ProDDZGameUserHintRequest_MSGID_MSGID_MAX = ProDDZGameUserHintRequest_MSGID_ID;
const int ProDDZGameUserHintRequest_MSGID_MSGID_ARRAYSIZE = ProDDZGameUserHintRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameUserHintRequest_MSGID_descriptor();
inline const ::std::string& ProDDZGameUserHintRequest_MSGID_Name(ProDDZGameUserHintRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameUserHintRequest_MSGID_descriptor(), value);
}
inline bool ProDDZGameUserHintRequest_MSGID_Parse(
    const ::std::string& name, ProDDZGameUserHintRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameUserHintRequest_MSGID>(
    ProDDZGameUserHintRequest_MSGID_descriptor(), name, value);
}
enum ProDDZGameUserHintResponse_MSGID {
  ProDDZGameUserHintResponse_MSGID_ID = 2237
};
bool ProDDZGameUserHintResponse_MSGID_IsValid(int value);
const ProDDZGameUserHintResponse_MSGID ProDDZGameUserHintResponse_MSGID_MSGID_MIN = ProDDZGameUserHintResponse_MSGID_ID;
const ProDDZGameUserHintResponse_MSGID ProDDZGameUserHintResponse_MSGID_MSGID_MAX = ProDDZGameUserHintResponse_MSGID_ID;
const int ProDDZGameUserHintResponse_MSGID_MSGID_ARRAYSIZE = ProDDZGameUserHintResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameUserHintResponse_MSGID_descriptor();
inline const ::std::string& ProDDZGameUserHintResponse_MSGID_Name(ProDDZGameUserHintResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameUserHintResponse_MSGID_descriptor(), value);
}
inline bool ProDDZGameUserHintResponse_MSGID_Parse(
    const ::std::string& name, ProDDZGameUserHintResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameUserHintResponse_MSGID>(
    ProDDZGameUserHintResponse_MSGID_descriptor(), name, value);
}
enum ProDDZGameUserCallScoreResponse_MSGID {
  ProDDZGameUserCallScoreResponse_MSGID_ID = 2238
};
bool ProDDZGameUserCallScoreResponse_MSGID_IsValid(int value);
const ProDDZGameUserCallScoreResponse_MSGID ProDDZGameUserCallScoreResponse_MSGID_MSGID_MIN = ProDDZGameUserCallScoreResponse_MSGID_ID;
const ProDDZGameUserCallScoreResponse_MSGID ProDDZGameUserCallScoreResponse_MSGID_MSGID_MAX = ProDDZGameUserCallScoreResponse_MSGID_ID;
const int ProDDZGameUserCallScoreResponse_MSGID_MSGID_ARRAYSIZE = ProDDZGameUserCallScoreResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameUserCallScoreResponse_MSGID_descriptor();
inline const ::std::string& ProDDZGameUserCallScoreResponse_MSGID_Name(ProDDZGameUserCallScoreResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameUserCallScoreResponse_MSGID_descriptor(), value);
}
inline bool ProDDZGameUserCallScoreResponse_MSGID_Parse(
    const ::std::string& name, ProDDZGameUserCallScoreResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameUserCallScoreResponse_MSGID>(
    ProDDZGameUserCallScoreResponse_MSGID_descriptor(), name, value);
}
enum ProDDZGameUserCallScoreRequest_MSGID {
  ProDDZGameUserCallScoreRequest_MSGID_ID = 2239
};
bool ProDDZGameUserCallScoreRequest_MSGID_IsValid(int value);
const ProDDZGameUserCallScoreRequest_MSGID ProDDZGameUserCallScoreRequest_MSGID_MSGID_MIN = ProDDZGameUserCallScoreRequest_MSGID_ID;
const ProDDZGameUserCallScoreRequest_MSGID ProDDZGameUserCallScoreRequest_MSGID_MSGID_MAX = ProDDZGameUserCallScoreRequest_MSGID_ID;
const int ProDDZGameUserCallScoreRequest_MSGID_MSGID_ARRAYSIZE = ProDDZGameUserCallScoreRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameUserCallScoreRequest_MSGID_descriptor();
inline const ::std::string& ProDDZGameUserCallScoreRequest_MSGID_Name(ProDDZGameUserCallScoreRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameUserCallScoreRequest_MSGID_descriptor(), value);
}
inline bool ProDDZGameUserCallScoreRequest_MSGID_Parse(
    const ::std::string& name, ProDDZGameUserCallScoreRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameUserCallScoreRequest_MSGID>(
    ProDDZGameUserCallScoreRequest_MSGID_descriptor(), name, value);
}
enum ProDDZGameCallNotify_MSGID {
  ProDDZGameCallNotify_MSGID_ID = 2244
};
bool ProDDZGameCallNotify_MSGID_IsValid(int value);
const ProDDZGameCallNotify_MSGID ProDDZGameCallNotify_MSGID_MSGID_MIN = ProDDZGameCallNotify_MSGID_ID;
const ProDDZGameCallNotify_MSGID ProDDZGameCallNotify_MSGID_MSGID_MAX = ProDDZGameCallNotify_MSGID_ID;
const int ProDDZGameCallNotify_MSGID_MSGID_ARRAYSIZE = ProDDZGameCallNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameCallNotify_MSGID_descriptor();
inline const ::std::string& ProDDZGameCallNotify_MSGID_Name(ProDDZGameCallNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameCallNotify_MSGID_descriptor(), value);
}
inline bool ProDDZGameCallNotify_MSGID_Parse(
    const ::std::string& name, ProDDZGameCallNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameCallNotify_MSGID>(
    ProDDZGameCallNotify_MSGID_descriptor(), name, value);
}
enum ProDDZGameQiangNotify_MSGID {
  ProDDZGameQiangNotify_MSGID_ID = 2245
};
bool ProDDZGameQiangNotify_MSGID_IsValid(int value);
const ProDDZGameQiangNotify_MSGID ProDDZGameQiangNotify_MSGID_MSGID_MIN = ProDDZGameQiangNotify_MSGID_ID;
const ProDDZGameQiangNotify_MSGID ProDDZGameQiangNotify_MSGID_MSGID_MAX = ProDDZGameQiangNotify_MSGID_ID;
const int ProDDZGameQiangNotify_MSGID_MSGID_ARRAYSIZE = ProDDZGameQiangNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameQiangNotify_MSGID_descriptor();
inline const ::std::string& ProDDZGameQiangNotify_MSGID_Name(ProDDZGameQiangNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameQiangNotify_MSGID_descriptor(), value);
}
inline bool ProDDZGameQiangNotify_MSGID_Parse(
    const ::std::string& name, ProDDZGameQiangNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameQiangNotify_MSGID>(
    ProDDZGameQiangNotify_MSGID_descriptor(), name, value);
}
enum ProDDZGameUserCallLandlordResponse_MSGID {
  ProDDZGameUserCallLandlordResponse_MSGID_ID = 2240
};
bool ProDDZGameUserCallLandlordResponse_MSGID_IsValid(int value);
const ProDDZGameUserCallLandlordResponse_MSGID ProDDZGameUserCallLandlordResponse_MSGID_MSGID_MIN = ProDDZGameUserCallLandlordResponse_MSGID_ID;
const ProDDZGameUserCallLandlordResponse_MSGID ProDDZGameUserCallLandlordResponse_MSGID_MSGID_MAX = ProDDZGameUserCallLandlordResponse_MSGID_ID;
const int ProDDZGameUserCallLandlordResponse_MSGID_MSGID_ARRAYSIZE = ProDDZGameUserCallLandlordResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameUserCallLandlordResponse_MSGID_descriptor();
inline const ::std::string& ProDDZGameUserCallLandlordResponse_MSGID_Name(ProDDZGameUserCallLandlordResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameUserCallLandlordResponse_MSGID_descriptor(), value);
}
inline bool ProDDZGameUserCallLandlordResponse_MSGID_Parse(
    const ::std::string& name, ProDDZGameUserCallLandlordResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameUserCallLandlordResponse_MSGID>(
    ProDDZGameUserCallLandlordResponse_MSGID_descriptor(), name, value);
}
enum ProDDZGameUserCallLandlordRequest_MSGID {
  ProDDZGameUserCallLandlordRequest_MSGID_ID = 2241
};
bool ProDDZGameUserCallLandlordRequest_MSGID_IsValid(int value);
const ProDDZGameUserCallLandlordRequest_MSGID ProDDZGameUserCallLandlordRequest_MSGID_MSGID_MIN = ProDDZGameUserCallLandlordRequest_MSGID_ID;
const ProDDZGameUserCallLandlordRequest_MSGID ProDDZGameUserCallLandlordRequest_MSGID_MSGID_MAX = ProDDZGameUserCallLandlordRequest_MSGID_ID;
const int ProDDZGameUserCallLandlordRequest_MSGID_MSGID_ARRAYSIZE = ProDDZGameUserCallLandlordRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameUserCallLandlordRequest_MSGID_descriptor();
inline const ::std::string& ProDDZGameUserCallLandlordRequest_MSGID_Name(ProDDZGameUserCallLandlordRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameUserCallLandlordRequest_MSGID_descriptor(), value);
}
inline bool ProDDZGameUserCallLandlordRequest_MSGID_Parse(
    const ::std::string& name, ProDDZGameUserCallLandlordRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameUserCallLandlordRequest_MSGID>(
    ProDDZGameUserCallLandlordRequest_MSGID_descriptor(), name, value);
}
enum ProDDZGameUserQinagLandlordResponse_MSGID {
  ProDDZGameUserQinagLandlordResponse_MSGID_ID = 2242
};
bool ProDDZGameUserQinagLandlordResponse_MSGID_IsValid(int value);
const ProDDZGameUserQinagLandlordResponse_MSGID ProDDZGameUserQinagLandlordResponse_MSGID_MSGID_MIN = ProDDZGameUserQinagLandlordResponse_MSGID_ID;
const ProDDZGameUserQinagLandlordResponse_MSGID ProDDZGameUserQinagLandlordResponse_MSGID_MSGID_MAX = ProDDZGameUserQinagLandlordResponse_MSGID_ID;
const int ProDDZGameUserQinagLandlordResponse_MSGID_MSGID_ARRAYSIZE = ProDDZGameUserQinagLandlordResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameUserQinagLandlordResponse_MSGID_descriptor();
inline const ::std::string& ProDDZGameUserQinagLandlordResponse_MSGID_Name(ProDDZGameUserQinagLandlordResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameUserQinagLandlordResponse_MSGID_descriptor(), value);
}
inline bool ProDDZGameUserQinagLandlordResponse_MSGID_Parse(
    const ::std::string& name, ProDDZGameUserQinagLandlordResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameUserQinagLandlordResponse_MSGID>(
    ProDDZGameUserQinagLandlordResponse_MSGID_descriptor(), name, value);
}
enum ProDDZGameUserQiangLandlordRequest_MSGID {
  ProDDZGameUserQiangLandlordRequest_MSGID_ID = 2243
};
bool ProDDZGameUserQiangLandlordRequest_MSGID_IsValid(int value);
const ProDDZGameUserQiangLandlordRequest_MSGID ProDDZGameUserQiangLandlordRequest_MSGID_MSGID_MIN = ProDDZGameUserQiangLandlordRequest_MSGID_ID;
const ProDDZGameUserQiangLandlordRequest_MSGID ProDDZGameUserQiangLandlordRequest_MSGID_MSGID_MAX = ProDDZGameUserQiangLandlordRequest_MSGID_ID;
const int ProDDZGameUserQiangLandlordRequest_MSGID_MSGID_ARRAYSIZE = ProDDZGameUserQiangLandlordRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameUserQiangLandlordRequest_MSGID_descriptor();
inline const ::std::string& ProDDZGameUserQiangLandlordRequest_MSGID_Name(ProDDZGameUserQiangLandlordRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameUserQiangLandlordRequest_MSGID_descriptor(), value);
}
inline bool ProDDZGameUserQiangLandlordRequest_MSGID_Parse(
    const ::std::string& name, ProDDZGameUserQiangLandlordRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameUserQiangLandlordRequest_MSGID>(
    ProDDZGameUserQiangLandlordRequest_MSGID_descriptor(), name, value);
}
enum ProDDZGameSendLastCard_MSGID {
  ProDDZGameSendLastCard_MSGID_ID = 2246
};
bool ProDDZGameSendLastCard_MSGID_IsValid(int value);
const ProDDZGameSendLastCard_MSGID ProDDZGameSendLastCard_MSGID_MSGID_MIN = ProDDZGameSendLastCard_MSGID_ID;
const ProDDZGameSendLastCard_MSGID ProDDZGameSendLastCard_MSGID_MSGID_MAX = ProDDZGameSendLastCard_MSGID_ID;
const int ProDDZGameSendLastCard_MSGID_MSGID_ARRAYSIZE = ProDDZGameSendLastCard_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameSendLastCard_MSGID_descriptor();
inline const ::std::string& ProDDZGameSendLastCard_MSGID_Name(ProDDZGameSendLastCard_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameSendLastCard_MSGID_descriptor(), value);
}
inline bool ProDDZGameSendLastCard_MSGID_Parse(
    const ::std::string& name, ProDDZGameSendLastCard_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameSendLastCard_MSGID>(
    ProDDZGameSendLastCard_MSGID_descriptor(), name, value);
}
enum ProDDZGameUserMingPaiRequest_MSGID {
  ProDDZGameUserMingPaiRequest_MSGID_ID = 2247
};
bool ProDDZGameUserMingPaiRequest_MSGID_IsValid(int value);
const ProDDZGameUserMingPaiRequest_MSGID ProDDZGameUserMingPaiRequest_MSGID_MSGID_MIN = ProDDZGameUserMingPaiRequest_MSGID_ID;
const ProDDZGameUserMingPaiRequest_MSGID ProDDZGameUserMingPaiRequest_MSGID_MSGID_MAX = ProDDZGameUserMingPaiRequest_MSGID_ID;
const int ProDDZGameUserMingPaiRequest_MSGID_MSGID_ARRAYSIZE = ProDDZGameUserMingPaiRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameUserMingPaiRequest_MSGID_descriptor();
inline const ::std::string& ProDDZGameUserMingPaiRequest_MSGID_Name(ProDDZGameUserMingPaiRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameUserMingPaiRequest_MSGID_descriptor(), value);
}
inline bool ProDDZGameUserMingPaiRequest_MSGID_Parse(
    const ::std::string& name, ProDDZGameUserMingPaiRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameUserMingPaiRequest_MSGID>(
    ProDDZGameUserMingPaiRequest_MSGID_descriptor(), name, value);
}
enum ProDDZGameUserMingPaiResponse_MSGID {
  ProDDZGameUserMingPaiResponse_MSGID_ID = 2248
};
bool ProDDZGameUserMingPaiResponse_MSGID_IsValid(int value);
const ProDDZGameUserMingPaiResponse_MSGID ProDDZGameUserMingPaiResponse_MSGID_MSGID_MIN = ProDDZGameUserMingPaiResponse_MSGID_ID;
const ProDDZGameUserMingPaiResponse_MSGID ProDDZGameUserMingPaiResponse_MSGID_MSGID_MAX = ProDDZGameUserMingPaiResponse_MSGID_ID;
const int ProDDZGameUserMingPaiResponse_MSGID_MSGID_ARRAYSIZE = ProDDZGameUserMingPaiResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameUserMingPaiResponse_MSGID_descriptor();
inline const ::std::string& ProDDZGameUserMingPaiResponse_MSGID_Name(ProDDZGameUserMingPaiResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameUserMingPaiResponse_MSGID_descriptor(), value);
}
inline bool ProDDZGameUserMingPaiResponse_MSGID_Parse(
    const ::std::string& name, ProDDZGameUserMingPaiResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameUserMingPaiResponse_MSGID>(
    ProDDZGameUserMingPaiResponse_MSGID_descriptor(), name, value);
}
enum ProDDZGameMingNotify_MSGID {
  ProDDZGameMingNotify_MSGID_ID = 2249
};
bool ProDDZGameMingNotify_MSGID_IsValid(int value);
const ProDDZGameMingNotify_MSGID ProDDZGameMingNotify_MSGID_MSGID_MIN = ProDDZGameMingNotify_MSGID_ID;
const ProDDZGameMingNotify_MSGID ProDDZGameMingNotify_MSGID_MSGID_MAX = ProDDZGameMingNotify_MSGID_ID;
const int ProDDZGameMingNotify_MSGID_MSGID_ARRAYSIZE = ProDDZGameMingNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameMingNotify_MSGID_descriptor();
inline const ::std::string& ProDDZGameMingNotify_MSGID_Name(ProDDZGameMingNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameMingNotify_MSGID_descriptor(), value);
}
inline bool ProDDZGameMingNotify_MSGID_Parse(
    const ::std::string& name, ProDDZGameMingNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameMingNotify_MSGID>(
    ProDDZGameMingNotify_MSGID_descriptor(), name, value);
}
enum ProDDZGameStartAgain_MSGID {
  ProDDZGameStartAgain_MSGID_ID = 2250
};
bool ProDDZGameStartAgain_MSGID_IsValid(int value);
const ProDDZGameStartAgain_MSGID ProDDZGameStartAgain_MSGID_MSGID_MIN = ProDDZGameStartAgain_MSGID_ID;
const ProDDZGameStartAgain_MSGID ProDDZGameStartAgain_MSGID_MSGID_MAX = ProDDZGameStartAgain_MSGID_ID;
const int ProDDZGameStartAgain_MSGID_MSGID_ARRAYSIZE = ProDDZGameStartAgain_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProDDZGameStartAgain_MSGID_descriptor();
inline const ::std::string& ProDDZGameStartAgain_MSGID_Name(ProDDZGameStartAgain_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProDDZGameStartAgain_MSGID_descriptor(), value);
}
inline bool ProDDZGameStartAgain_MSGID_Parse(
    const ::std::string& name, ProDDZGameStartAgain_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProDDZGameStartAgain_MSGID>(
    ProDDZGameStartAgain_MSGID_descriptor(), name, value);
}
enum DDZGameState {
  DDZ_GAME_IDLE = 1,
  DDZ_GAME_DICE_BANK = 2,
  DDZ_GAME_SEND = 3,
  DDZ_GAME_DICE_KING = 4,
  DDZ_GAME_CALL = 5,
  DDZ_GAME_QIANG = 6,
  DDZ_GAME_PLAY = 7,
  DDZ_GAME_END = 8
};
bool DDZGameState_IsValid(int value);
const DDZGameState DDZGameState_MIN = DDZ_GAME_IDLE;
const DDZGameState DDZGameState_MAX = DDZ_GAME_END;
const int DDZGameState_ARRAYSIZE = DDZGameState_MAX + 1;

const ::google::protobuf::EnumDescriptor* DDZGameState_descriptor();
inline const ::std::string& DDZGameState_Name(DDZGameState value) {
  return ::google::protobuf::internal::NameOfEnum(
    DDZGameState_descriptor(), value);
}
inline bool DDZGameState_Parse(
    const ::std::string& name, DDZGameState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DDZGameState>(
    DDZGameState_descriptor(), name, value);
}
enum DDZSEND_TYPE {
  DDZ_NORMAL_SEND = 1,
  DDZ_RECOME_SEND = 2
};
bool DDZSEND_TYPE_IsValid(int value);
const DDZSEND_TYPE DDZSEND_TYPE_MIN = DDZ_NORMAL_SEND;
const DDZSEND_TYPE DDZSEND_TYPE_MAX = DDZ_RECOME_SEND;
const int DDZSEND_TYPE_ARRAYSIZE = DDZSEND_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DDZSEND_TYPE_descriptor();
inline const ::std::string& DDZSEND_TYPE_Name(DDZSEND_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DDZSEND_TYPE_descriptor(), value);
}
inline bool DDZSEND_TYPE_Parse(
    const ::std::string& name, DDZSEND_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DDZSEND_TYPE>(
    DDZSEND_TYPE_descriptor(), name, value);
}
enum DDZKIGN_TYPE {
  DDZ_KING_UP = 1,
  DDZ_KING_HUITOU = 2,
  DDZ_KING_MAILEI = 3
};
bool DDZKIGN_TYPE_IsValid(int value);
const DDZKIGN_TYPE DDZKIGN_TYPE_MIN = DDZ_KING_UP;
const DDZKIGN_TYPE DDZKIGN_TYPE_MAX = DDZ_KING_MAILEI;
const int DDZKIGN_TYPE_ARRAYSIZE = DDZKIGN_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DDZKIGN_TYPE_descriptor();
inline const ::std::string& DDZKIGN_TYPE_Name(DDZKIGN_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DDZKIGN_TYPE_descriptor(), value);
}
inline bool DDZKIGN_TYPE_Parse(
    const ::std::string& name, DDZKIGN_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DDZKIGN_TYPE>(
    DDZKIGN_TYPE_descriptor(), name, value);
}
enum DDZBROKEN_TYPE {
  DDZ_BT_MASTER_QUIT = 0,
  DDZ_BT_USER_QUIT = 1,
  DDZ_BT_BROKEN = 2
};
bool DDZBROKEN_TYPE_IsValid(int value);
const DDZBROKEN_TYPE DDZBROKEN_TYPE_MIN = DDZ_BT_MASTER_QUIT;
const DDZBROKEN_TYPE DDZBROKEN_TYPE_MAX = DDZ_BT_BROKEN;
const int DDZBROKEN_TYPE_ARRAYSIZE = DDZBROKEN_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DDZBROKEN_TYPE_descriptor();
inline const ::std::string& DDZBROKEN_TYPE_Name(DDZBROKEN_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DDZBROKEN_TYPE_descriptor(), value);
}
inline bool DDZBROKEN_TYPE_Parse(
    const ::std::string& name, DDZBROKEN_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DDZBROKEN_TYPE>(
    DDZBROKEN_TYPE_descriptor(), name, value);
}
enum DDZBROKEN_OPERATE {
  DDZ_BO_DISAGREE = 0,
  DDZ_BO_AGREE = 1
};
bool DDZBROKEN_OPERATE_IsValid(int value);
const DDZBROKEN_OPERATE DDZBROKEN_OPERATE_MIN = DDZ_BO_DISAGREE;
const DDZBROKEN_OPERATE DDZBROKEN_OPERATE_MAX = DDZ_BO_AGREE;
const int DDZBROKEN_OPERATE_ARRAYSIZE = DDZBROKEN_OPERATE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DDZBROKEN_OPERATE_descriptor();
inline const ::std::string& DDZBROKEN_OPERATE_Name(DDZBROKEN_OPERATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DDZBROKEN_OPERATE_descriptor(), value);
}
inline bool DDZBROKEN_OPERATE_Parse(
    const ::std::string& name, DDZBROKEN_OPERATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DDZBROKEN_OPERATE>(
    DDZBROKEN_OPERATE_descriptor(), name, value);
}
enum DDZBROKEN_CODE {
  DDZ_BC_SUCCESS = 0,
  DDZ_BC_DISAGREE = 1,
  DDZ_BC_QUIT_SUCCESS = 2,
  DDZ_BC_EXCEPTION = 3
};
bool DDZBROKEN_CODE_IsValid(int value);
const DDZBROKEN_CODE DDZBROKEN_CODE_MIN = DDZ_BC_SUCCESS;
const DDZBROKEN_CODE DDZBROKEN_CODE_MAX = DDZ_BC_EXCEPTION;
const int DDZBROKEN_CODE_ARRAYSIZE = DDZBROKEN_CODE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DDZBROKEN_CODE_descriptor();
inline const ::std::string& DDZBROKEN_CODE_Name(DDZBROKEN_CODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DDZBROKEN_CODE_descriptor(), value);
}
inline bool DDZBROKEN_CODE_Parse(
    const ::std::string& name, DDZBROKEN_CODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DDZBROKEN_CODE>(
    DDZBROKEN_CODE_descriptor(), name, value);
}
// ===================================================================

class ProDDZGameStatusResponse : public ::google::protobuf::Message {
 public:
  ProDDZGameStatusResponse();
  virtual ~ProDDZGameStatusResponse();

  ProDDZGameStatusResponse(const ProDDZGameStatusResponse& from);

  inline ProDDZGameStatusResponse& operator=(const ProDDZGameStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameStatusResponse& default_instance();

  void Swap(ProDDZGameStatusResponse* other);

  // implements Message ----------------------------------------------

  ProDDZGameStatusResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameStatusResponse& from);
  void MergeFrom(const ProDDZGameStatusResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameStatusResponse_MSGID MSGID;
  static const MSGID ID = ProDDZGameStatusResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameStatusResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameStatusResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameStatusResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameStatusResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameStatusResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameStatusResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameStatusResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .DDZGameState status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::DDZGameState status() const;
  inline void set_status(::DDZGameState value);

  // @@protoc_insertion_point(class_scope:ProDDZGameStatusResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameStatusResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameDeskInfoResponse : public ::google::protobuf::Message {
 public:
  ProDDZGameDeskInfoResponse();
  virtual ~ProDDZGameDeskInfoResponse();

  ProDDZGameDeskInfoResponse(const ProDDZGameDeskInfoResponse& from);

  inline ProDDZGameDeskInfoResponse& operator=(const ProDDZGameDeskInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameDeskInfoResponse& default_instance();

  void Swap(ProDDZGameDeskInfoResponse* other);

  // implements Message ----------------------------------------------

  ProDDZGameDeskInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameDeskInfoResponse& from);
  void MergeFrom(const ProDDZGameDeskInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameDeskInfoResponse_MSGID MSGID;
  static const MSGID ID = ProDDZGameDeskInfoResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameDeskInfoResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameDeskInfoResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameDeskInfoResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameDeskInfoResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameDeskInfoResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameDeskInfoResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameDeskInfoResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 CellScore = 2;
  inline bool has_cellscore() const;
  inline void clear_cellscore();
  static const int kCellScoreFieldNumber = 2;
  inline ::google::protobuf::int32 cellscore() const;
  inline void set_cellscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameDeskInfoResponse)
 private:
  inline void set_has_cellscore();
  inline void clear_has_cellscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 cellscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameDeskInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameReadyNotify : public ::google::protobuf::Message {
 public:
  ProDDZGameReadyNotify();
  virtual ~ProDDZGameReadyNotify();

  ProDDZGameReadyNotify(const ProDDZGameReadyNotify& from);

  inline ProDDZGameReadyNotify& operator=(const ProDDZGameReadyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameReadyNotify& default_instance();

  void Swap(ProDDZGameReadyNotify* other);

  // implements Message ----------------------------------------------

  ProDDZGameReadyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameReadyNotify& from);
  void MergeFrom(const ProDDZGameReadyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameReadyNotify_MSGID MSGID;
  static const MSGID ID = ProDDZGameReadyNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameReadyNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameReadyNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameReadyNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameReadyNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameReadyNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameReadyNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameReadyNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameReadyNotify)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameReadyNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameReadyRequest : public ::google::protobuf::Message {
 public:
  ProDDZGameReadyRequest();
  virtual ~ProDDZGameReadyRequest();

  ProDDZGameReadyRequest(const ProDDZGameReadyRequest& from);

  inline ProDDZGameReadyRequest& operator=(const ProDDZGameReadyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameReadyRequest& default_instance();

  void Swap(ProDDZGameReadyRequest* other);

  // implements Message ----------------------------------------------

  ProDDZGameReadyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameReadyRequest& from);
  void MergeFrom(const ProDDZGameReadyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameReadyRequest_MSGID MSGID;
  static const MSGID ID = ProDDZGameReadyRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameReadyRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameReadyRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameReadyRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameReadyRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameReadyRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameReadyRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameReadyRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameReadyRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameReadyRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameReadyResponse : public ::google::protobuf::Message {
 public:
  ProDDZGameReadyResponse();
  virtual ~ProDDZGameReadyResponse();

  ProDDZGameReadyResponse(const ProDDZGameReadyResponse& from);

  inline ProDDZGameReadyResponse& operator=(const ProDDZGameReadyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameReadyResponse& default_instance();

  void Swap(ProDDZGameReadyResponse* other);

  // implements Message ----------------------------------------------

  ProDDZGameReadyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameReadyResponse& from);
  void MergeFrom(const ProDDZGameReadyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameReadyResponse_MSGID MSGID;
  static const MSGID ID = ProDDZGameReadyResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameReadyResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameReadyResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameReadyResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameReadyResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameReadyResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameReadyResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameReadyResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool isMingPai = 3;
  inline bool has_ismingpai() const;
  inline void clear_ismingpai();
  static const int kIsMingPaiFieldNumber = 3;
  inline bool ismingpai() const;
  inline void set_ismingpai(bool value);

  // optional int32 MingPaiTag = 4;
  inline bool has_mingpaitag() const;
  inline void clear_mingpaitag();
  static const int kMingPaiTagFieldNumber = 4;
  inline ::google::protobuf::int32 mingpaitag() const;
  inline void set_mingpaitag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameReadyResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_ismingpai();
  inline void clear_has_ismingpai();
  inline void set_has_mingpaitag();
  inline void clear_has_mingpaitag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  bool ismingpai_;
  ::google::protobuf::int32 mingpaitag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameReadyResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameStart : public ::google::protobuf::Message {
 public:
  ProDDZGameStart();
  virtual ~ProDDZGameStart();

  ProDDZGameStart(const ProDDZGameStart& from);

  inline ProDDZGameStart& operator=(const ProDDZGameStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameStart& default_instance();

  void Swap(ProDDZGameStart* other);

  // implements Message ----------------------------------------------

  ProDDZGameStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameStart& from);
  void MergeFrom(const ProDDZGameStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameStart_MSGID MSGID;
  static const MSGID ID = ProDDZGameStart_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameStart_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameStart_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameStart_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameStart_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameStart_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameStart_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameStart_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 bankerseat = 2;
  inline bool has_bankerseat() const;
  inline void clear_bankerseat();
  static const int kBankerseatFieldNumber = 2;
  inline ::google::protobuf::int32 bankerseat() const;
  inline void set_bankerseat(::google::protobuf::int32 value);

  // optional int32 gamecount = 3;
  inline bool has_gamecount() const;
  inline void clear_gamecount();
  static const int kGamecountFieldNumber = 3;
  inline ::google::protobuf::int32 gamecount() const;
  inline void set_gamecount(::google::protobuf::int32 value);

  // optional int32 outCardtimes = 4;
  inline bool has_outcardtimes() const;
  inline void clear_outcardtimes();
  static const int kOutCardtimesFieldNumber = 4;
  inline ::google::protobuf::int32 outcardtimes() const;
  inline void set_outcardtimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameStart)
 private:
  inline void set_has_bankerseat();
  inline void clear_has_bankerseat();
  inline void set_has_gamecount();
  inline void clear_has_gamecount();
  inline void set_has_outcardtimes();
  inline void clear_has_outcardtimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bankerseat_;
  ::google::protobuf::int32 gamecount_;
  ::google::protobuf::int32 outcardtimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameStart* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameDiceNotify : public ::google::protobuf::Message {
 public:
  ProDDZGameDiceNotify();
  virtual ~ProDDZGameDiceNotify();

  ProDDZGameDiceNotify(const ProDDZGameDiceNotify& from);

  inline ProDDZGameDiceNotify& operator=(const ProDDZGameDiceNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameDiceNotify& default_instance();

  void Swap(ProDDZGameDiceNotify* other);

  // implements Message ----------------------------------------------

  ProDDZGameDiceNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameDiceNotify& from);
  void MergeFrom(const ProDDZGameDiceNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameDiceNotify_MSGID MSGID;
  static const MSGID ID = ProDDZGameDiceNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameDiceNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameDiceNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameDiceNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameDiceNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameDiceNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameDiceNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameDiceNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 dicecount = 4;
  inline bool has_dicecount() const;
  inline void clear_dicecount();
  static const int kDicecountFieldNumber = 4;
  inline ::google::protobuf::int32 dicecount() const;
  inline void set_dicecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameDiceNotify)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_dicecount();
  inline void clear_has_dicecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 dicecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameDiceNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameDiceRequest : public ::google::protobuf::Message {
 public:
  ProDDZGameDiceRequest();
  virtual ~ProDDZGameDiceRequest();

  ProDDZGameDiceRequest(const ProDDZGameDiceRequest& from);

  inline ProDDZGameDiceRequest& operator=(const ProDDZGameDiceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameDiceRequest& default_instance();

  void Swap(ProDDZGameDiceRequest* other);

  // implements Message ----------------------------------------------

  ProDDZGameDiceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameDiceRequest& from);
  void MergeFrom(const ProDDZGameDiceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameDiceRequest_MSGID MSGID;
  static const MSGID ID = ProDDZGameDiceRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameDiceRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameDiceRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameDiceRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameDiceRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameDiceRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameDiceRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameDiceRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 dicecount = 3;
  inline bool has_dicecount() const;
  inline void clear_dicecount();
  static const int kDicecountFieldNumber = 3;
  inline ::google::protobuf::int32 dicecount() const;
  inline void set_dicecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameDiceRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_dicecount();
  inline void clear_has_dicecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 dicecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameDiceRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameDiceResult : public ::google::protobuf::Message {
 public:
  ProDDZGameDiceResult();
  virtual ~ProDDZGameDiceResult();

  ProDDZGameDiceResult(const ProDDZGameDiceResult& from);

  inline ProDDZGameDiceResult& operator=(const ProDDZGameDiceResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameDiceResult& default_instance();

  void Swap(ProDDZGameDiceResult* other);

  // implements Message ----------------------------------------------

  ProDDZGameDiceResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameDiceResult& from);
  void MergeFrom(const ProDDZGameDiceResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameDiceResult_MSGID MSGID;
  static const MSGID ID = ProDDZGameDiceResult_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameDiceResult_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameDiceResult_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameDiceResult_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameDiceResult_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameDiceResult_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameDiceResult_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameDiceResult_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 result = 3;
  inline int result_size() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::int32 result(int index) const;
  inline void set_result(int index, ::google::protobuf::int32 value);
  inline void add_result(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      result() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_result();

  // optional int32 dicecount = 4;
  inline bool has_dicecount() const;
  inline void clear_dicecount();
  static const int kDicecountFieldNumber = 4;
  inline ::google::protobuf::int32 dicecount() const;
  inline void set_dicecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameDiceResult)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_dicecount();
  inline void clear_has_dicecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > result_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 dicecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameDiceResult* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameSendMahs : public ::google::protobuf::Message {
 public:
  ProDDZGameSendMahs();
  virtual ~ProDDZGameSendMahs();

  ProDDZGameSendMahs(const ProDDZGameSendMahs& from);

  inline ProDDZGameSendMahs& operator=(const ProDDZGameSendMahs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameSendMahs& default_instance();

  void Swap(ProDDZGameSendMahs* other);

  // implements Message ----------------------------------------------

  ProDDZGameSendMahs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameSendMahs& from);
  void MergeFrom(const ProDDZGameSendMahs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameSendMahs_MSGID MSGID;
  static const MSGID ID = ProDDZGameSendMahs_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameSendMahs_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameSendMahs_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameSendMahs_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameSendMahs_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameSendMahs_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameSendMahs_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameSendMahs_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated .DDZMahList cbHandCardData = 3;
  inline int cbhandcarddata_size() const;
  inline void clear_cbhandcarddata();
  static const int kCbHandCardDataFieldNumber = 3;
  inline const ::DDZMahList& cbhandcarddata(int index) const;
  inline ::DDZMahList* mutable_cbhandcarddata(int index);
  inline ::DDZMahList* add_cbhandcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::DDZMahList >&
      cbhandcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::DDZMahList >*
      mutable_cbhandcarddata();

  // repeated int32 mahscount = 4;
  inline int mahscount_size() const;
  inline void clear_mahscount();
  static const int kMahscountFieldNumber = 4;
  inline ::google::protobuf::int32 mahscount(int index) const;
  inline void set_mahscount(int index, ::google::protobuf::int32 value);
  inline void add_mahscount(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mahscount() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mahscount();

  // optional int32 cbLeftCount = 5;
  inline bool has_cbleftcount() const;
  inline void clear_cbleftcount();
  static const int kCbLeftCountFieldNumber = 5;
  inline ::google::protobuf::int32 cbleftcount() const;
  inline void set_cbleftcount(::google::protobuf::int32 value);

  // optional int32 offlineTag = 6;
  inline bool has_offlinetag() const;
  inline void clear_offlinetag();
  static const int kOfflineTagFieldNumber = 6;
  inline ::google::protobuf::int32 offlinetag() const;
  inline void set_offlinetag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameSendMahs)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_cbleftcount();
  inline void clear_has_cbleftcount();
  inline void set_has_offlinetag();
  inline void clear_has_offlinetag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DDZMahList > cbhandcarddata_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 cbleftcount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mahscount_;
  ::google::protobuf::int32 offlinetag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameSendMahs* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameKingData : public ::google::protobuf::Message {
 public:
  ProDDZGameKingData();
  virtual ~ProDDZGameKingData();

  ProDDZGameKingData(const ProDDZGameKingData& from);

  inline ProDDZGameKingData& operator=(const ProDDZGameKingData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameKingData& default_instance();

  void Swap(ProDDZGameKingData* other);

  // implements Message ----------------------------------------------

  ProDDZGameKingData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameKingData& from);
  void MergeFrom(const ProDDZGameKingData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameKingData_MSGID MSGID;
  static const MSGID ID = ProDDZGameKingData_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameKingData_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameKingData_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameKingData_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameKingData_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameKingData_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameKingData_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameKingData_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 mahs = 3;
  inline int mahs_size() const;
  inline void clear_mahs();
  static const int kMahsFieldNumber = 3;
  inline ::google::protobuf::int32 mahs(int index) const;
  inline void set_mahs(int index, ::google::protobuf::int32 value);
  inline void add_mahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mahs();

  // repeated int32 downKingScore = 4;
  inline int downkingscore_size() const;
  inline void clear_downkingscore();
  static const int kDownKingScoreFieldNumber = 4;
  inline ::google::protobuf::int32 downkingscore(int index) const;
  inline void set_downkingscore(int index, ::google::protobuf::int32 value);
  inline void add_downkingscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      downkingscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_downkingscore();

  // repeated int32 kingcount = 5;
  inline int kingcount_size() const;
  inline void clear_kingcount();
  static const int kKingcountFieldNumber = 5;
  inline ::google::protobuf::int32 kingcount(int index) const;
  inline void set_kingcount(int index, ::google::protobuf::int32 value);
  inline void add_kingcount(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      kingcount() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_kingcount();

  // repeated int32 viceking = 6;
  inline int viceking_size() const;
  inline void clear_viceking();
  static const int kVicekingFieldNumber = 6;
  inline ::google::protobuf::int32 viceking(int index) const;
  inline void set_viceking(int index, ::google::protobuf::int32 value);
  inline void add_viceking(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      viceking() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_viceking();

  // optional .DDZSEND_TYPE notify_type = 7 [default = DDZ_NORMAL_SEND];
  inline bool has_notify_type() const;
  inline void clear_notify_type();
  static const int kNotifyTypeFieldNumber = 7;
  inline ::DDZSEND_TYPE notify_type() const;
  inline void set_notify_type(::DDZSEND_TYPE value);

  // optional .DDZKIGN_TYPE king_type = 8 [default = DDZ_KING_UP];
  inline bool has_king_type() const;
  inline void clear_king_type();
  static const int kKingTypeFieldNumber = 8;
  inline ::DDZKIGN_TYPE king_type() const;
  inline void set_king_type(::DDZKIGN_TYPE value);

  // repeated int32 cbChongGuang = 9;
  inline int cbchongguang_size() const;
  inline void clear_cbchongguang();
  static const int kCbChongGuangFieldNumber = 9;
  inline ::google::protobuf::int32 cbchongguang(int index) const;
  inline void set_cbchongguang(int index, ::google::protobuf::int32 value);
  inline void add_cbchongguang(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbchongguang() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbchongguang();

  // repeated int32 cbBaWangKing = 10;
  inline int cbbawangking_size() const;
  inline void clear_cbbawangking();
  static const int kCbBaWangKingFieldNumber = 10;
  inline ::google::protobuf::int32 cbbawangking(int index) const;
  inline void set_cbbawangking(int index, ::google::protobuf::int32 value);
  inline void add_cbbawangking(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbbawangking() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbbawangking();

  // @@protoc_insertion_point(class_scope:ProDDZGameKingData)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_notify_type();
  inline void clear_has_notify_type();
  inline void set_has_king_type();
  inline void clear_has_king_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mahs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > downkingscore_;
  ::google::protobuf::int32 seat_;
  int notify_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > kingcount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > viceking_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbchongguang_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbbawangking_;
  int king_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameKingData* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameOutMahsResponse : public ::google::protobuf::Message {
 public:
  ProDDZGameOutMahsResponse();
  virtual ~ProDDZGameOutMahsResponse();

  ProDDZGameOutMahsResponse(const ProDDZGameOutMahsResponse& from);

  inline ProDDZGameOutMahsResponse& operator=(const ProDDZGameOutMahsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameOutMahsResponse& default_instance();

  void Swap(ProDDZGameOutMahsResponse* other);

  // implements Message ----------------------------------------------

  ProDDZGameOutMahsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameOutMahsResponse& from);
  void MergeFrom(const ProDDZGameOutMahsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameOutMahsResponse_MSGID MSGID;
  static const MSGID ID = ProDDZGameOutMahsResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameOutMahsResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameOutMahsResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameOutMahsResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameOutMahsResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameOutMahsResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameOutMahsResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameOutMahsResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 outMahs = 3;
  inline int outmahs_size() const;
  inline void clear_outmahs();
  static const int kOutMahsFieldNumber = 3;
  inline ::google::protobuf::int32 outmahs(int index) const;
  inline void set_outmahs(int index, ::google::protobuf::int32 value);
  inline void add_outmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      outmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_outmahs();

  // repeated int32 handmahs = 4;
  inline int handmahs_size() const;
  inline void clear_handmahs();
  static const int kHandmahsFieldNumber = 4;
  inline ::google::protobuf::int32 handmahs(int index) const;
  inline void set_handmahs(int index, ::google::protobuf::int32 value);
  inline void add_handmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      handmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_handmahs();

  // optional int32 cardCount = 5;
  inline bool has_cardcount() const;
  inline void clear_cardcount();
  static const int kCardCountFieldNumber = 5;
  inline ::google::protobuf::int32 cardcount() const;
  inline void set_cardcount(::google::protobuf::int32 value);

  // optional int32 cardType = 6;
  inline bool has_cardtype() const;
  inline void clear_cardtype();
  static const int kCardTypeFieldNumber = 6;
  inline ::google::protobuf::int32 cardtype() const;
  inline void set_cardtype(::google::protobuf::int32 value);

  // repeated int32 noChangeMahs = 7;
  inline int nochangemahs_size() const;
  inline void clear_nochangemahs();
  static const int kNoChangeMahsFieldNumber = 7;
  inline ::google::protobuf::int32 nochangemahs(int index) const;
  inline void set_nochangemahs(int index, ::google::protobuf::int32 value);
  inline void add_nochangemahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nochangemahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nochangemahs();

  // @@protoc_insertion_point(class_scope:ProDDZGameOutMahsResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_cardcount();
  inline void clear_has_cardcount();
  inline void set_has_cardtype();
  inline void clear_has_cardtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > outmahs_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 cardcount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > handmahs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nochangemahs_;
  ::google::protobuf::int32 cardtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameOutMahsResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameTimerPower : public ::google::protobuf::Message {
 public:
  ProDDZGameTimerPower();
  virtual ~ProDDZGameTimerPower();

  ProDDZGameTimerPower(const ProDDZGameTimerPower& from);

  inline ProDDZGameTimerPower& operator=(const ProDDZGameTimerPower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameTimerPower& default_instance();

  void Swap(ProDDZGameTimerPower* other);

  // implements Message ----------------------------------------------

  ProDDZGameTimerPower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameTimerPower& from);
  void MergeFrom(const ProDDZGameTimerPower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameTimerPower_MSGID MSGID;
  static const MSGID ID = ProDDZGameTimerPower_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameTimerPower_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameTimerPower_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameTimerPower_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameTimerPower_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameTimerPower_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameTimerPower_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameTimerPower_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 outcardTime = 4;
  inline bool has_outcardtime() const;
  inline void clear_outcardtime();
  static const int kOutcardTimeFieldNumber = 4;
  inline ::google::protobuf::int32 outcardtime() const;
  inline void set_outcardtime(::google::protobuf::int32 value);

  // optional int32 lastCardType = 5;
  inline bool has_lastcardtype() const;
  inline void clear_lastcardtype();
  static const int kLastCardTypeFieldNumber = 5;
  inline ::google::protobuf::int32 lastcardtype() const;
  inline void set_lastcardtype(::google::protobuf::int32 value);

  // optional int32 lastPoint = 6;
  inline bool has_lastpoint() const;
  inline void clear_lastpoint();
  static const int kLastPointFieldNumber = 6;
  inline ::google::protobuf::int32 lastpoint() const;
  inline void set_lastpoint(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameTimerPower)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_outcardtime();
  inline void clear_has_outcardtime();
  inline void set_has_lastcardtype();
  inline void clear_has_lastcardtype();
  inline void set_has_lastpoint();
  inline void clear_has_lastpoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 outcardtime_;
  ::google::protobuf::int32 lastcardtype_;
  ::google::protobuf::int32 lastpoint_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameTimerPower* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameOperateNotify : public ::google::protobuf::Message {
 public:
  ProDDZGameOperateNotify();
  virtual ~ProDDZGameOperateNotify();

  ProDDZGameOperateNotify(const ProDDZGameOperateNotify& from);

  inline ProDDZGameOperateNotify& operator=(const ProDDZGameOperateNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameOperateNotify& default_instance();

  void Swap(ProDDZGameOperateNotify* other);

  // implements Message ----------------------------------------------

  ProDDZGameOperateNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameOperateNotify& from);
  void MergeFrom(const ProDDZGameOperateNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameOperateNotify_MSGID MSGID;
  static const MSGID ID = ProDDZGameOperateNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameOperateNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameOperateNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameOperateNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameOperateNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameOperateNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameOperateNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameOperateNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 resumeSeat = 2;
  inline bool has_resumeseat() const;
  inline void clear_resumeseat();
  static const int kResumeSeatFieldNumber = 2;
  inline ::google::protobuf::int32 resumeseat() const;
  inline void set_resumeseat(::google::protobuf::int32 value);

  // optional int32 ActionMask = 3;
  inline bool has_actionmask() const;
  inline void clear_actionmask();
  static const int kActionMaskFieldNumber = 3;
  inline ::google::protobuf::int32 actionmask() const;
  inline void set_actionmask(::google::protobuf::int32 value);

  // optional int32 ActionCard = 4;
  inline bool has_actioncard() const;
  inline void clear_actioncard();
  static const int kActionCardFieldNumber = 4;
  inline ::google::protobuf::int32 actioncard() const;
  inline void set_actioncard(::google::protobuf::int32 value);

  // optional int32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 operateseat = 6;
  inline bool has_operateseat() const;
  inline void clear_operateseat();
  static const int kOperateseatFieldNumber = 6;
  inline ::google::protobuf::int32 operateseat() const;
  inline void set_operateseat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameOperateNotify)
 private:
  inline void set_has_resumeseat();
  inline void clear_has_resumeseat();
  inline void set_has_actionmask();
  inline void clear_has_actionmask();
  inline void set_has_actioncard();
  inline void clear_has_actioncard();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_operateseat();
  inline void clear_has_operateseat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 resumeseat_;
  ::google::protobuf::int32 actionmask_;
  ::google::protobuf::int32 actioncard_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 operateseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameOperateNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameOperateResult : public ::google::protobuf::Message {
 public:
  ProDDZGameOperateResult();
  virtual ~ProDDZGameOperateResult();

  ProDDZGameOperateResult(const ProDDZGameOperateResult& from);

  inline ProDDZGameOperateResult& operator=(const ProDDZGameOperateResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameOperateResult& default_instance();

  void Swap(ProDDZGameOperateResult* other);

  // implements Message ----------------------------------------------

  ProDDZGameOperateResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameOperateResult& from);
  void MergeFrom(const ProDDZGameOperateResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameOperateResult_MSGID MSGID;
  static const MSGID ID = ProDDZGameOperateResult_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameOperateResult_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameOperateResult_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameOperateResult_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameOperateResult_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameOperateResult_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameOperateResult_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameOperateResult_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 wOperateUser = 2;
  inline bool has_woperateuser() const;
  inline void clear_woperateuser();
  static const int kWOperateUserFieldNumber = 2;
  inline ::google::protobuf::int32 woperateuser() const;
  inline void set_woperateuser(::google::protobuf::int32 value);

  // optional int32 wProvideUser = 3;
  inline bool has_wprovideuser() const;
  inline void clear_wprovideuser();
  static const int kWProvideUserFieldNumber = 3;
  inline ::google::protobuf::int32 wprovideuser() const;
  inline void set_wprovideuser(::google::protobuf::int32 value);

  // optional int32 wOperateCode = 4;
  inline bool has_woperatecode() const;
  inline void clear_woperatecode();
  static const int kWOperateCodeFieldNumber = 4;
  inline ::google::protobuf::int32 woperatecode() const;
  inline void set_woperatecode(::google::protobuf::int32 value);

  // optional int32 cbOperateCard = 5;
  inline bool has_cboperatecard() const;
  inline void clear_cboperatecard();
  static const int kCbOperateCardFieldNumber = 5;
  inline ::google::protobuf::int32 cboperatecard() const;
  inline void set_cboperatecard(::google::protobuf::int32 value);

  // repeated int32 handmahs = 6;
  inline int handmahs_size() const;
  inline void clear_handmahs();
  static const int kHandmahsFieldNumber = 6;
  inline ::google::protobuf::int32 handmahs(int index) const;
  inline void set_handmahs(int index, ::google::protobuf::int32 value);
  inline void add_handmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      handmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_handmahs();

  // optional int32 handcount = 7;
  inline bool has_handcount() const;
  inline void clear_handcount();
  static const int kHandcountFieldNumber = 7;
  inline ::google::protobuf::int32 handcount() const;
  inline void set_handcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameOperateResult)
 private:
  inline void set_has_woperateuser();
  inline void clear_has_woperateuser();
  inline void set_has_wprovideuser();
  inline void clear_has_wprovideuser();
  inline void set_has_woperatecode();
  inline void clear_has_woperatecode();
  inline void set_has_cboperatecard();
  inline void clear_has_cboperatecard();
  inline void set_has_handcount();
  inline void clear_has_handcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 woperateuser_;
  ::google::protobuf::int32 wprovideuser_;
  ::google::protobuf::int32 woperatecode_;
  ::google::protobuf::int32 cboperatecard_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > handmahs_;
  ::google::protobuf::int32 handcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameOperateResult* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameOperateRequest : public ::google::protobuf::Message {
 public:
  ProDDZGameOperateRequest();
  virtual ~ProDDZGameOperateRequest();

  ProDDZGameOperateRequest(const ProDDZGameOperateRequest& from);

  inline ProDDZGameOperateRequest& operator=(const ProDDZGameOperateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameOperateRequest& default_instance();

  void Swap(ProDDZGameOperateRequest* other);

  // implements Message ----------------------------------------------

  ProDDZGameOperateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameOperateRequest& from);
  void MergeFrom(const ProDDZGameOperateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameOperateRequest_MSGID MSGID;
  static const MSGID ID = ProDDZGameOperateRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameOperateRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameOperateRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameOperateRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameOperateRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameOperateRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameOperateRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameOperateRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 wOperateCode = 3;
  inline bool has_woperatecode() const;
  inline void clear_woperatecode();
  static const int kWOperateCodeFieldNumber = 3;
  inline ::google::protobuf::int32 woperatecode() const;
  inline void set_woperatecode(::google::protobuf::int32 value);

  // optional int32 cbOperateCard = 4;
  inline bool has_cboperatecard() const;
  inline void clear_cboperatecard();
  static const int kCbOperateCardFieldNumber = 4;
  inline ::google::protobuf::int32 cboperatecard() const;
  inline void set_cboperatecard(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameOperateRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_woperatecode();
  inline void clear_has_woperatecode();
  inline void set_has_cboperatecard();
  inline void clear_has_cboperatecard();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 woperatecode_;
  ::google::protobuf::int32 cboperatecard_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameOperateRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameTrust : public ::google::protobuf::Message {
 public:
  ProDDZGameTrust();
  virtual ~ProDDZGameTrust();

  ProDDZGameTrust(const ProDDZGameTrust& from);

  inline ProDDZGameTrust& operator=(const ProDDZGameTrust& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameTrust& default_instance();

  void Swap(ProDDZGameTrust* other);

  // implements Message ----------------------------------------------

  ProDDZGameTrust* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameTrust& from);
  void MergeFrom(const ProDDZGameTrust& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameTrust_MSGID MSGID;
  static const MSGID ID = ProDDZGameTrust_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameTrust_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameTrust_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameTrust_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameTrust_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameTrust_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameTrust_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameTrust_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool isTrust = 3;
  inline bool has_istrust() const;
  inline void clear_istrust();
  static const int kIsTrustFieldNumber = 3;
  inline bool istrust() const;
  inline void set_istrust(bool value);

  // @@protoc_insertion_point(class_scope:ProDDZGameTrust)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_istrust();
  inline void clear_has_istrust();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  bool istrust_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameTrust* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameOutMahRequest : public ::google::protobuf::Message {
 public:
  ProDDZGameOutMahRequest();
  virtual ~ProDDZGameOutMahRequest();

  ProDDZGameOutMahRequest(const ProDDZGameOutMahRequest& from);

  inline ProDDZGameOutMahRequest& operator=(const ProDDZGameOutMahRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameOutMahRequest& default_instance();

  void Swap(ProDDZGameOutMahRequest* other);

  // implements Message ----------------------------------------------

  ProDDZGameOutMahRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameOutMahRequest& from);
  void MergeFrom(const ProDDZGameOutMahRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameOutMahRequest_MSGID MSGID;
  static const MSGID ID = ProDDZGameOutMahRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameOutMahRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameOutMahRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameOutMahRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameOutMahRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameOutMahRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameOutMahRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameOutMahRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 outMahs = 3;
  inline int outmahs_size() const;
  inline void clear_outmahs();
  static const int kOutMahsFieldNumber = 3;
  inline ::google::protobuf::int32 outmahs(int index) const;
  inline void set_outmahs(int index, ::google::protobuf::int32 value);
  inline void add_outmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      outmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_outmahs();

  // repeated int32 noChangeMahs = 4;
  inline int nochangemahs_size() const;
  inline void clear_nochangemahs();
  static const int kNoChangeMahsFieldNumber = 4;
  inline ::google::protobuf::int32 nochangemahs(int index) const;
  inline void set_nochangemahs(int index, ::google::protobuf::int32 value);
  inline void add_nochangemahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nochangemahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nochangemahs();

  // @@protoc_insertion_point(class_scope:ProDDZGameOutMahRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > outmahs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nochangemahs_;
  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameOutMahRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameCatchCard : public ::google::protobuf::Message {
 public:
  ProDDZGameCatchCard();
  virtual ~ProDDZGameCatchCard();

  ProDDZGameCatchCard(const ProDDZGameCatchCard& from);

  inline ProDDZGameCatchCard& operator=(const ProDDZGameCatchCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameCatchCard& default_instance();

  void Swap(ProDDZGameCatchCard* other);

  // implements Message ----------------------------------------------

  ProDDZGameCatchCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameCatchCard& from);
  void MergeFrom(const ProDDZGameCatchCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameCatchCard_MSGID MSGID;
  static const MSGID ID = ProDDZGameCatchCard_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameCatchCard_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameCatchCard_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameCatchCard_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameCatchCard_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameCatchCard_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameCatchCard_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameCatchCard_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 cbCardData = 3;
  inline bool has_cbcarddata() const;
  inline void clear_cbcarddata();
  static const int kCbCardDataFieldNumber = 3;
  inline ::google::protobuf::int32 cbcarddata() const;
  inline void set_cbcarddata(::google::protobuf::int32 value);

  // optional int32 wActionMask = 4;
  inline bool has_wactionmask() const;
  inline void clear_wactionmask();
  static const int kWActionMaskFieldNumber = 4;
  inline ::google::protobuf::int32 wactionmask() const;
  inline void set_wactionmask(::google::protobuf::int32 value);

  // optional bool cbIsNotGang = 5;
  inline bool has_cbisnotgang() const;
  inline void clear_cbisnotgang();
  static const int kCbIsNotGangFieldNumber = 5;
  inline bool cbisnotgang() const;
  inline void set_cbisnotgang(bool value);

  // optional int32 cbLeftCount = 6;
  inline bool has_cbleftcount() const;
  inline void clear_cbleftcount();
  static const int kCbLeftCountFieldNumber = 6;
  inline ::google::protobuf::int32 cbleftcount() const;
  inline void set_cbleftcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameCatchCard)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_cbcarddata();
  inline void clear_has_cbcarddata();
  inline void set_has_wactionmask();
  inline void clear_has_wactionmask();
  inline void set_has_cbisnotgang();
  inline void clear_has_cbisnotgang();
  inline void set_has_cbleftcount();
  inline void clear_has_cbleftcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 cbcarddata_;
  ::google::protobuf::int32 wactionmask_;
  bool cbisnotgang_;
  ::google::protobuf::int32 cbleftcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameCatchCard* default_instance_;
};
// -------------------------------------------------------------------

class DDZMahList : public ::google::protobuf::Message {
 public:
  DDZMahList();
  virtual ~DDZMahList();

  DDZMahList(const DDZMahList& from);

  inline DDZMahList& operator=(const DDZMahList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DDZMahList& default_instance();

  void Swap(DDZMahList* other);

  // implements Message ----------------------------------------------

  DDZMahList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DDZMahList& from);
  void MergeFrom(const DDZMahList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 Mahs = 1;
  inline int mahs_size() const;
  inline void clear_mahs();
  static const int kMahsFieldNumber = 1;
  inline ::google::protobuf::int32 mahs(int index) const;
  inline void set_mahs(int index, ::google::protobuf::int32 value);
  inline void add_mahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mahs();

  // @@protoc_insertion_point(class_scope:DDZMahList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mahs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static DDZMahList* default_instance_;
};
// -------------------------------------------------------------------

class DDZScoreList : public ::google::protobuf::Message {
 public:
  DDZScoreList();
  virtual ~DDZScoreList();

  DDZScoreList(const DDZScoreList& from);

  inline DDZScoreList& operator=(const DDZScoreList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DDZScoreList& default_instance();

  void Swap(DDZScoreList* other);

  // implements Message ----------------------------------------------

  DDZScoreList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DDZScoreList& from);
  void MergeFrom(const DDZScoreList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 roundScore = 1;
  inline int roundscore_size() const;
  inline void clear_roundscore();
  static const int kRoundScoreFieldNumber = 1;
  inline ::google::protobuf::int32 roundscore(int index) const;
  inline void set_roundscore(int index, ::google::protobuf::int32 value);
  inline void add_roundscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      roundscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_roundscore();

  // @@protoc_insertion_point(class_scope:DDZScoreList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > roundscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static DDZScoreList* default_instance_;
};
// -------------------------------------------------------------------

class DDZAwardList : public ::google::protobuf::Message {
 public:
  DDZAwardList();
  virtual ~DDZAwardList();

  DDZAwardList(const DDZAwardList& from);

  inline DDZAwardList& operator=(const DDZAwardList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DDZAwardList& default_instance();

  void Swap(DDZAwardList* other);

  // implements Message ----------------------------------------------

  DDZAwardList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DDZAwardList& from);
  void MergeFrom(const DDZAwardList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 CardsData = 2;
  inline int cardsdata_size() const;
  inline void clear_cardsdata();
  static const int kCardsDataFieldNumber = 2;
  inline ::google::protobuf::int32 cardsdata(int index) const;
  inline void set_cardsdata(int index, ::google::protobuf::int32 value);
  inline void add_cardsdata(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cardsdata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cardsdata();

  // optional int32 awardScore = 3;
  inline bool has_awardscore() const;
  inline void clear_awardscore();
  static const int kAwardScoreFieldNumber = 3;
  inline ::google::protobuf::int32 awardscore() const;
  inline void set_awardscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DDZAwardList)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_awardscore();
  inline void clear_has_awardscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cardsdata_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 awardscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static DDZAwardList* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameEnd : public ::google::protobuf::Message {
 public:
  ProDDZGameEnd();
  virtual ~ProDDZGameEnd();

  ProDDZGameEnd(const ProDDZGameEnd& from);

  inline ProDDZGameEnd& operator=(const ProDDZGameEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameEnd& default_instance();

  void Swap(ProDDZGameEnd* other);

  // implements Message ----------------------------------------------

  ProDDZGameEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameEnd& from);
  void MergeFrom(const ProDDZGameEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameEnd_MSGID MSGID;
  static const MSGID ID = ProDDZGameEnd_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameEnd_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameEnd_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameEnd_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameEnd_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameEnd_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameEnd_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameEnd_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 lGameTax = 2;
  inline bool has_lgametax() const;
  inline void clear_lgametax();
  static const int kLGameTaxFieldNumber = 2;
  inline ::google::protobuf::int32 lgametax() const;
  inline void set_lgametax(::google::protobuf::int32 value);

  // repeated int32 cbChongGuang = 3;
  inline int cbchongguang_size() const;
  inline void clear_cbchongguang();
  static const int kCbChongGuangFieldNumber = 3;
  inline ::google::protobuf::int32 cbchongguang(int index) const;
  inline void set_cbchongguang(int index, ::google::protobuf::int32 value);
  inline void add_cbchongguang(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbchongguang() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbchongguang();

  // repeated int32 cbBaWangKing = 4;
  inline int cbbawangking_size() const;
  inline void clear_cbbawangking();
  static const int kCbBaWangKingFieldNumber = 4;
  inline ::google::protobuf::int32 cbbawangking(int index) const;
  inline void set_cbbawangking(int index, ::google::protobuf::int32 value);
  inline void add_cbbawangking(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbbawangking() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbbawangking();

  // optional int32 wProvideUser = 5;
  inline bool has_wprovideuser() const;
  inline void clear_wprovideuser();
  static const int kWProvideUserFieldNumber = 5;
  inline ::google::protobuf::int32 wprovideuser() const;
  inline void set_wprovideuser(::google::protobuf::int32 value);

  // optional int32 cbChiHuCard = 6;
  inline bool has_cbchihucard() const;
  inline void clear_cbchihucard();
  static const int kCbChiHuCardFieldNumber = 6;
  inline ::google::protobuf::int32 cbchihucard() const;
  inline void set_cbchihucard(::google::protobuf::int32 value);

  // repeated int32 dwChiHuKind = 7;
  inline int dwchihukind_size() const;
  inline void clear_dwchihukind();
  static const int kDwChiHuKindFieldNumber = 7;
  inline ::google::protobuf::int32 dwchihukind(int index) const;
  inline void set_dwchihukind(int index, ::google::protobuf::int32 value);
  inline void add_dwchihukind(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dwchihukind() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dwchihukind();

  // repeated int32 dwChiHuRight = 8;
  inline int dwchihuright_size() const;
  inline void clear_dwchihuright();
  static const int kDwChiHuRightFieldNumber = 8;
  inline ::google::protobuf::int32 dwchihuright(int index) const;
  inline void set_dwchihuright(int index, ::google::protobuf::int32 value);
  inline void add_dwchihuright(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dwchihuright() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dwchihuright();

  // repeated int32 lTotaslGameScore = 9;
  inline int ltotaslgamescore_size() const;
  inline void clear_ltotaslgamescore();
  static const int kLTotaslGameScoreFieldNumber = 9;
  inline ::google::protobuf::int32 ltotaslgamescore(int index) const;
  inline void set_ltotaslgamescore(int index, ::google::protobuf::int32 value);
  inline void add_ltotaslgamescore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ltotaslgamescore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ltotaslgamescore();

  // repeated int32 lCurrentGameScore = 10;
  inline int lcurrentgamescore_size() const;
  inline void clear_lcurrentgamescore();
  static const int kLCurrentGameScoreFieldNumber = 10;
  inline ::google::protobuf::int32 lcurrentgamescore(int index) const;
  inline void set_lcurrentgamescore(int index, ::google::protobuf::int32 value);
  inline void add_lcurrentgamescore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lcurrentgamescore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lcurrentgamescore();

  // repeated int32 lCurrentPointScore = 11;
  inline int lcurrentpointscore_size() const;
  inline void clear_lcurrentpointscore();
  static const int kLCurrentPointScoreFieldNumber = 11;
  inline ::google::protobuf::int32 lcurrentpointscore(int index) const;
  inline void set_lcurrentpointscore(int index, ::google::protobuf::int32 value);
  inline void add_lcurrentpointscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lcurrentpointscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lcurrentpointscore();

  // repeated int32 lAttachScore = 12;
  inline int lattachscore_size() const;
  inline void clear_lattachscore();
  static const int kLAttachScoreFieldNumber = 12;
  inline ::google::protobuf::int32 lattachscore(int index) const;
  inline void set_lattachscore(int index, ::google::protobuf::int32 value);
  inline void add_lattachscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lattachscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lattachscore();

  // repeated .DDZMahList cbHandCardData = 13;
  inline int cbhandcarddata_size() const;
  inline void clear_cbhandcarddata();
  static const int kCbHandCardDataFieldNumber = 13;
  inline const ::DDZMahList& cbhandcarddata(int index) const;
  inline ::DDZMahList* mutable_cbhandcarddata(int index);
  inline ::DDZMahList* add_cbhandcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::DDZMahList >&
      cbhandcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::DDZMahList >*
      mutable_cbhandcarddata();

  // repeated .DDZAwardList cbAwardCardData = 14;
  inline int cbawardcarddata_size() const;
  inline void clear_cbawardcarddata();
  static const int kCbAwardCardDataFieldNumber = 14;
  inline const ::DDZAwardList& cbawardcarddata(int index) const;
  inline ::DDZAwardList* mutable_cbawardcarddata(int index);
  inline ::DDZAwardList* add_cbawardcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::DDZAwardList >&
      cbawardcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::DDZAwardList >*
      mutable_cbawardcarddata();

  // repeated int32 lOnlyWinScore = 15;
  inline int lonlywinscore_size() const;
  inline void clear_lonlywinscore();
  static const int kLOnlyWinScoreFieldNumber = 15;
  inline ::google::protobuf::int32 lonlywinscore(int index) const;
  inline void set_lonlywinscore(int index, ::google::protobuf::int32 value);
  inline void add_lonlywinscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lonlywinscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lonlywinscore();

  // optional bool bRoundEnd = 16;
  inline bool has_broundend() const;
  inline void clear_broundend();
  static const int kBRoundEndFieldNumber = 16;
  inline bool broundend() const;
  inline void set_broundend(bool value);

  // repeated int32 lHuiTouScore = 17;
  inline int lhuitouscore_size() const;
  inline void clear_lhuitouscore();
  static const int kLHuiTouScoreFieldNumber = 17;
  inline ::google::protobuf::int32 lhuitouscore(int index) const;
  inline void set_lhuitouscore(int index, ::google::protobuf::int32 value);
  inline void add_lhuitouscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lhuitouscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lhuitouscore();

  // optional bool bZhuangWin = 18;
  inline bool has_bzhuangwin() const;
  inline void clear_bzhuangwin();
  static const int kBZhuangWinFieldNumber = 18;
  inline bool bzhuangwin() const;
  inline void set_bzhuangwin(bool value);

  // repeated int32 cbJiangMaCardData = 19;
  inline int cbjiangmacarddata_size() const;
  inline void clear_cbjiangmacarddata();
  static const int kCbJiangMaCardDataFieldNumber = 19;
  inline ::google::protobuf::int32 cbjiangmacarddata(int index) const;
  inline void set_cbjiangmacarddata(int index, ::google::protobuf::int32 value);
  inline void add_cbjiangmacarddata(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbjiangmacarddata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbjiangmacarddata();

  // repeated .DDZScoreList detailedScores = 20;
  inline int detailedscores_size() const;
  inline void clear_detailedscores();
  static const int kDetailedScoresFieldNumber = 20;
  inline const ::DDZScoreList& detailedscores(int index) const;
  inline ::DDZScoreList* mutable_detailedscores(int index);
  inline ::DDZScoreList* add_detailedscores();
  inline const ::google::protobuf::RepeatedPtrField< ::DDZScoreList >&
      detailedscores() const;
  inline ::google::protobuf::RepeatedPtrField< ::DDZScoreList >*
      mutable_detailedscores();

  // @@protoc_insertion_point(class_scope:ProDDZGameEnd)
 private:
  inline void set_has_lgametax();
  inline void clear_has_lgametax();
  inline void set_has_wprovideuser();
  inline void clear_has_wprovideuser();
  inline void set_has_cbchihucard();
  inline void clear_has_cbchihucard();
  inline void set_has_broundend();
  inline void clear_has_broundend();
  inline void set_has_bzhuangwin();
  inline void clear_has_bzhuangwin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbchongguang_;
  ::google::protobuf::int32 lgametax_;
  ::google::protobuf::int32 wprovideuser_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbbawangking_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dwchihukind_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dwchihuright_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ltotaslgamescore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lcurrentgamescore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lcurrentpointscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lattachscore_;
  ::google::protobuf::RepeatedPtrField< ::DDZMahList > cbhandcarddata_;
  ::google::protobuf::int32 cbchihucard_;
  bool broundend_;
  bool bzhuangwin_;
  ::google::protobuf::RepeatedPtrField< ::DDZAwardList > cbawardcarddata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lonlywinscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lhuitouscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbjiangmacarddata_;
  ::google::protobuf::RepeatedPtrField< ::DDZScoreList > detailedscores_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameEnd* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameQuickSoundRequest : public ::google::protobuf::Message {
 public:
  ProDDZGameQuickSoundRequest();
  virtual ~ProDDZGameQuickSoundRequest();

  ProDDZGameQuickSoundRequest(const ProDDZGameQuickSoundRequest& from);

  inline ProDDZGameQuickSoundRequest& operator=(const ProDDZGameQuickSoundRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameQuickSoundRequest& default_instance();

  void Swap(ProDDZGameQuickSoundRequest* other);

  // implements Message ----------------------------------------------

  ProDDZGameQuickSoundRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameQuickSoundRequest& from);
  void MergeFrom(const ProDDZGameQuickSoundRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameQuickSoundRequest_MSGID MSGID;
  static const MSGID ID = ProDDZGameQuickSoundRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameQuickSoundRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameQuickSoundRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameQuickSoundRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameQuickSoundRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameQuickSoundRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameQuickSoundRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameQuickSoundRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 desk_id = 2;
  inline bool has_desk_id() const;
  inline void clear_desk_id();
  static const int kDeskIdFieldNumber = 2;
  inline ::google::protobuf::int32 desk_id() const;
  inline void set_desk_id(::google::protobuf::int32 value);

  // optional int32 seat_id = 3;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 3;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional int32 sound_id = 4;
  inline bool has_sound_id() const;
  inline void clear_sound_id();
  static const int kSoundIdFieldNumber = 4;
  inline ::google::protobuf::int32 sound_id() const;
  inline void set_sound_id(::google::protobuf::int32 value);

  // optional bytes text = 5;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 5;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const void* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:ProDDZGameQuickSoundRequest)
 private:
  inline void set_has_desk_id();
  inline void clear_has_desk_id();
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_sound_id();
  inline void clear_has_sound_id();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 desk_id_;
  ::google::protobuf::int32 seat_id_;
  ::std::string* text_;
  ::google::protobuf::int32 sound_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameQuickSoundRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameQuickSoundResponse : public ::google::protobuf::Message {
 public:
  ProDDZGameQuickSoundResponse();
  virtual ~ProDDZGameQuickSoundResponse();

  ProDDZGameQuickSoundResponse(const ProDDZGameQuickSoundResponse& from);

  inline ProDDZGameQuickSoundResponse& operator=(const ProDDZGameQuickSoundResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameQuickSoundResponse& default_instance();

  void Swap(ProDDZGameQuickSoundResponse* other);

  // implements Message ----------------------------------------------

  ProDDZGameQuickSoundResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameQuickSoundResponse& from);
  void MergeFrom(const ProDDZGameQuickSoundResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameQuickSoundResponse_MSGID MSGID;
  static const MSGID ID = ProDDZGameQuickSoundResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameQuickSoundResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameQuickSoundResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameQuickSoundResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameQuickSoundResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameQuickSoundResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameQuickSoundResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameQuickSoundResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 desk_id = 2;
  inline bool has_desk_id() const;
  inline void clear_desk_id();
  static const int kDeskIdFieldNumber = 2;
  inline ::google::protobuf::int32 desk_id() const;
  inline void set_desk_id(::google::protobuf::int32 value);

  // optional int32 seat_id = 3;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 3;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional int32 sound_id = 4;
  inline bool has_sound_id() const;
  inline void clear_sound_id();
  static const int kSoundIdFieldNumber = 4;
  inline ::google::protobuf::int32 sound_id() const;
  inline void set_sound_id(::google::protobuf::int32 value);

  // optional bytes text = 5;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 5;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const void* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:ProDDZGameQuickSoundResponse)
 private:
  inline void set_has_desk_id();
  inline void clear_has_desk_id();
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_sound_id();
  inline void clear_has_sound_id();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 desk_id_;
  ::google::protobuf::int32 seat_id_;
  ::std::string* text_;
  ::google::protobuf::int32 sound_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameQuickSoundResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameSendDiscardMahs : public ::google::protobuf::Message {
 public:
  ProDDZGameSendDiscardMahs();
  virtual ~ProDDZGameSendDiscardMahs();

  ProDDZGameSendDiscardMahs(const ProDDZGameSendDiscardMahs& from);

  inline ProDDZGameSendDiscardMahs& operator=(const ProDDZGameSendDiscardMahs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameSendDiscardMahs& default_instance();

  void Swap(ProDDZGameSendDiscardMahs* other);

  // implements Message ----------------------------------------------

  ProDDZGameSendDiscardMahs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameSendDiscardMahs& from);
  void MergeFrom(const ProDDZGameSendDiscardMahs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameSendDiscardMahs_MSGID MSGID;
  static const MSGID ID = ProDDZGameSendDiscardMahs_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameSendDiscardMahs_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameSendDiscardMahs_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameSendDiscardMahs_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameSendDiscardMahs_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameSendDiscardMahs_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameSendDiscardMahs_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameSendDiscardMahs_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // repeated .DDZMahList cbCardData = 3;
  inline int cbcarddata_size() const;
  inline void clear_cbcarddata();
  static const int kCbCardDataFieldNumber = 3;
  inline const ::DDZMahList& cbcarddata(int index) const;
  inline ::DDZMahList* mutable_cbcarddata(int index);
  inline ::DDZMahList* add_cbcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::DDZMahList >&
      cbcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::DDZMahList >*
      mutable_cbcarddata();

  // optional int32 deskCount = 4;
  inline bool has_deskcount() const;
  inline void clear_deskcount();
  static const int kDeskCountFieldNumber = 4;
  inline ::google::protobuf::int32 deskcount() const;
  inline void set_deskcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameSendDiscardMahs)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_deskcount();
  inline void clear_has_deskcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DDZMahList > cbcarddata_;
  ::google::protobuf::int32 seat_id_;
  ::google::protobuf::int32 deskcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameSendDiscardMahs* default_instance_;
};
// -------------------------------------------------------------------

class DDZWeaveItem : public ::google::protobuf::Message {
 public:
  DDZWeaveItem();
  virtual ~DDZWeaveItem();

  DDZWeaveItem(const DDZWeaveItem& from);

  inline DDZWeaveItem& operator=(const DDZWeaveItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DDZWeaveItem& default_instance();

  void Swap(DDZWeaveItem* other);

  // implements Message ----------------------------------------------

  DDZWeaveItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DDZWeaveItem& from);
  void MergeFrom(const DDZWeaveItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 weaveKind = 1;
  inline bool has_weavekind() const;
  inline void clear_weavekind();
  static const int kWeaveKindFieldNumber = 1;
  inline ::google::protobuf::int32 weavekind() const;
  inline void set_weavekind(::google::protobuf::int32 value);

  // optional int32 centercard = 2;
  inline bool has_centercard() const;
  inline void clear_centercard();
  static const int kCentercardFieldNumber = 2;
  inline ::google::protobuf::int32 centercard() const;
  inline void set_centercard(::google::protobuf::int32 value);

  // optional int32 provideUser = 3;
  inline bool has_provideuser() const;
  inline void clear_provideuser();
  static const int kProvideUserFieldNumber = 3;
  inline ::google::protobuf::int32 provideuser() const;
  inline void set_provideuser(::google::protobuf::int32 value);

  // optional int32 cardsize = 4;
  inline bool has_cardsize() const;
  inline void clear_cardsize();
  static const int kCardsizeFieldNumber = 4;
  inline ::google::protobuf::int32 cardsize() const;
  inline void set_cardsize(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DDZWeaveItem)
 private:
  inline void set_has_weavekind();
  inline void clear_has_weavekind();
  inline void set_has_centercard();
  inline void clear_has_centercard();
  inline void set_has_provideuser();
  inline void clear_has_provideuser();
  inline void set_has_cardsize();
  inline void clear_has_cardsize();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 weavekind_;
  ::google::protobuf::int32 centercard_;
  ::google::protobuf::int32 provideuser_;
  ::google::protobuf::int32 cardsize_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static DDZWeaveItem* default_instance_;
};
// -------------------------------------------------------------------

class DDZWeaveItems : public ::google::protobuf::Message {
 public:
  DDZWeaveItems();
  virtual ~DDZWeaveItems();

  DDZWeaveItems(const DDZWeaveItems& from);

  inline DDZWeaveItems& operator=(const DDZWeaveItems& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DDZWeaveItems& default_instance();

  void Swap(DDZWeaveItems* other);

  // implements Message ----------------------------------------------

  DDZWeaveItems* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DDZWeaveItems& from);
  void MergeFrom(const DDZWeaveItems& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DDZWeaveItem items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::DDZWeaveItem& items(int index) const;
  inline ::DDZWeaveItem* mutable_items(int index);
  inline ::DDZWeaveItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::DDZWeaveItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::DDZWeaveItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:DDZWeaveItems)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DDZWeaveItem > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static DDZWeaveItems* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameSendActionMahs : public ::google::protobuf::Message {
 public:
  ProDDZGameSendActionMahs();
  virtual ~ProDDZGameSendActionMahs();

  ProDDZGameSendActionMahs(const ProDDZGameSendActionMahs& from);

  inline ProDDZGameSendActionMahs& operator=(const ProDDZGameSendActionMahs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameSendActionMahs& default_instance();

  void Swap(ProDDZGameSendActionMahs* other);

  // implements Message ----------------------------------------------

  ProDDZGameSendActionMahs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameSendActionMahs& from);
  void MergeFrom(const ProDDZGameSendActionMahs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameSendActionMahs_MSGID MSGID;
  static const MSGID ID = ProDDZGameSendActionMahs_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameSendActionMahs_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameSendActionMahs_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameSendActionMahs_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameSendActionMahs_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameSendActionMahs_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameSendActionMahs_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameSendActionMahs_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // repeated .DDZWeaveItems weaves = 3;
  inline int weaves_size() const;
  inline void clear_weaves();
  static const int kWeavesFieldNumber = 3;
  inline const ::DDZWeaveItems& weaves(int index) const;
  inline ::DDZWeaveItems* mutable_weaves(int index);
  inline ::DDZWeaveItems* add_weaves();
  inline const ::google::protobuf::RepeatedPtrField< ::DDZWeaveItems >&
      weaves() const;
  inline ::google::protobuf::RepeatedPtrField< ::DDZWeaveItems >*
      mutable_weaves();

  // @@protoc_insertion_point(class_scope:ProDDZGameSendActionMahs)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DDZWeaveItems > weaves_;
  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameSendActionMahs* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameBrokenRequest : public ::google::protobuf::Message {
 public:
  ProDDZGameBrokenRequest();
  virtual ~ProDDZGameBrokenRequest();

  ProDDZGameBrokenRequest(const ProDDZGameBrokenRequest& from);

  inline ProDDZGameBrokenRequest& operator=(const ProDDZGameBrokenRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameBrokenRequest& default_instance();

  void Swap(ProDDZGameBrokenRequest* other);

  // implements Message ----------------------------------------------

  ProDDZGameBrokenRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameBrokenRequest& from);
  void MergeFrom(const ProDDZGameBrokenRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameBrokenRequest_MSGID MSGID;
  static const MSGID ID = ProDDZGameBrokenRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameBrokenRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameBrokenRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameBrokenRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameBrokenRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameBrokenRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameBrokenRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameBrokenRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional .DDZBROKEN_TYPE type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::DDZBROKEN_TYPE type() const;
  inline void set_type(::DDZBROKEN_TYPE value);

  // optional int32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameBrokenRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;
  int type_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameBrokenRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameBrokenOperate : public ::google::protobuf::Message {
 public:
  ProDDZGameBrokenOperate();
  virtual ~ProDDZGameBrokenOperate();

  ProDDZGameBrokenOperate(const ProDDZGameBrokenOperate& from);

  inline ProDDZGameBrokenOperate& operator=(const ProDDZGameBrokenOperate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameBrokenOperate& default_instance();

  void Swap(ProDDZGameBrokenOperate* other);

  // implements Message ----------------------------------------------

  ProDDZGameBrokenOperate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameBrokenOperate& from);
  void MergeFrom(const ProDDZGameBrokenOperate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameBrokenOperate_MSGID MSGID;
  static const MSGID ID = ProDDZGameBrokenOperate_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameBrokenOperate_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameBrokenOperate_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameBrokenOperate_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameBrokenOperate_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameBrokenOperate_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameBrokenOperate_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameBrokenOperate_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional .DDZBROKEN_OPERATE result = 3 [default = DDZ_BO_DISAGREE];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::DDZBROKEN_OPERATE result() const;
  inline void set_result(::DDZBROKEN_OPERATE value);

  // @@protoc_insertion_point(class_scope:ProDDZGameBrokenOperate)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameBrokenOperate* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameBrokenNotify : public ::google::protobuf::Message {
 public:
  ProDDZGameBrokenNotify();
  virtual ~ProDDZGameBrokenNotify();

  ProDDZGameBrokenNotify(const ProDDZGameBrokenNotify& from);

  inline ProDDZGameBrokenNotify& operator=(const ProDDZGameBrokenNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameBrokenNotify& default_instance();

  void Swap(ProDDZGameBrokenNotify* other);

  // implements Message ----------------------------------------------

  ProDDZGameBrokenNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameBrokenNotify& from);
  void MergeFrom(const ProDDZGameBrokenNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameBrokenNotify_MSGID MSGID;
  static const MSGID ID = ProDDZGameBrokenNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameBrokenNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameBrokenNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameBrokenNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameBrokenNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameBrokenNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameBrokenNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameBrokenNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional .DDZBROKEN_CODE operate_code = 3 [default = DDZ_BC_SUCCESS];
  inline bool has_operate_code() const;
  inline void clear_operate_code();
  static const int kOperateCodeFieldNumber = 3;
  inline ::DDZBROKEN_CODE operate_code() const;
  inline void set_operate_code(::DDZBROKEN_CODE value);

  // @@protoc_insertion_point(class_scope:ProDDZGameBrokenNotify)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_operate_code();
  inline void clear_has_operate_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;
  int operate_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameBrokenNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameRuleConfig : public ::google::protobuf::Message {
 public:
  ProDDZGameRuleConfig();
  virtual ~ProDDZGameRuleConfig();

  ProDDZGameRuleConfig(const ProDDZGameRuleConfig& from);

  inline ProDDZGameRuleConfig& operator=(const ProDDZGameRuleConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameRuleConfig& default_instance();

  void Swap(ProDDZGameRuleConfig* other);

  // implements Message ----------------------------------------------

  ProDDZGameRuleConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameRuleConfig& from);
  void MergeFrom(const ProDDZGameRuleConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameRuleConfig_MSGID MSGID;
  static const MSGID ID = ProDDZGameRuleConfig_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameRuleConfig_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameRuleConfig_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameRuleConfig_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameRuleConfig_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameRuleConfig_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameRuleConfig_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameRuleConfig_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 game_round = 1;
  inline bool has_game_round() const;
  inline void clear_game_round();
  static const int kGameRoundFieldNumber = 1;
  inline ::google::protobuf::int32 game_round() const;
  inline void set_game_round(::google::protobuf::int32 value);

  // optional int32 need_card = 2;
  inline bool has_need_card() const;
  inline void clear_need_card();
  static const int kNeedCardFieldNumber = 2;
  inline ::google::protobuf::int32 need_card() const;
  inline void set_need_card(::google::protobuf::int32 value);

  // optional bool have_bottom_king = 3;
  inline bool has_have_bottom_king() const;
  inline void clear_have_bottom_king();
  static const int kHaveBottomKingFieldNumber = 3;
  inline bool have_bottom_king() const;
  inline void set_have_bottom_king(bool value);

  // optional bool have_mai_lei = 4;
  inline bool has_have_mai_lei() const;
  inline void clear_have_mai_lei();
  static const int kHaveMaiLeiFieldNumber = 4;
  inline bool have_mai_lei() const;
  inline void set_have_mai_lei(bool value);

  // optional bool hava_hui_tou = 5;
  inline bool has_hava_hui_tou() const;
  inline void clear_hava_hui_tou();
  static const int kHavaHuiTouFieldNumber = 5;
  inline bool hava_hui_tou() const;
  inline void set_hava_hui_tou(bool value);

  // optional int32 nMasterSeat = 6;
  inline bool has_nmasterseat() const;
  inline void clear_nmasterseat();
  static const int kNMasterSeatFieldNumber = 6;
  inline ::google::protobuf::int32 nmasterseat() const;
  inline void set_nmasterseat(::google::protobuf::int32 value);

  // optional int32 current_game_count = 7;
  inline bool has_current_game_count() const;
  inline void clear_current_game_count();
  static const int kCurrentGameCountFieldNumber = 7;
  inline ::google::protobuf::int32 current_game_count() const;
  inline void set_current_game_count(::google::protobuf::int32 value);

  // optional bool have_jianma = 8;
  inline bool has_have_jianma() const;
  inline void clear_have_jianma();
  static const int kHaveJianmaFieldNumber = 8;
  inline bool have_jianma() const;
  inline void set_have_jianma(bool value);

  // optional int32 nChongguanNum = 9;
  inline bool has_nchongguannum() const;
  inline void clear_nchongguannum();
  static const int kNChongguanNumFieldNumber = 9;
  inline ::google::protobuf::int32 nchongguannum() const;
  inline void set_nchongguannum(::google::protobuf::int32 value);

  // optional bool bbawangfanbei = 10;
  inline bool has_bbawangfanbei() const;
  inline void clear_bbawangfanbei();
  static const int kBbawangfanbeiFieldNumber = 10;
  inline bool bbawangfanbei() const;
  inline void set_bbawangfanbei(bool value);

  // optional int32 nPlayerNum = 11;
  inline bool has_nplayernum() const;
  inline void clear_nplayernum();
  static const int kNPlayerNumFieldNumber = 11;
  inline ::google::protobuf::int32 nplayernum() const;
  inline void set_nplayernum(::google::protobuf::int32 value);

  // optional bytes sRoomNum = 12;
  inline bool has_sroomnum() const;
  inline void clear_sroomnum();
  static const int kSRoomNumFieldNumber = 12;
  inline const ::std::string& sroomnum() const;
  inline void set_sroomnum(const ::std::string& value);
  inline void set_sroomnum(const char* value);
  inline void set_sroomnum(const void* value, size_t size);
  inline ::std::string* mutable_sroomnum();
  inline ::std::string* release_sroomnum();
  inline void set_allocated_sroomnum(::std::string* sroomnum);

  // optional bytes sPlayTime = 13;
  inline bool has_splaytime() const;
  inline void clear_splaytime();
  static const int kSPlayTimeFieldNumber = 13;
  inline const ::std::string& splaytime() const;
  inline void set_splaytime(const ::std::string& value);
  inline void set_splaytime(const char* value);
  inline void set_splaytime(const void* value, size_t size);
  inline ::std::string* mutable_splaytime();
  inline ::std::string* release_splaytime();
  inline void set_allocated_splaytime(::std::string* splaytime);

  // optional int32 nselfSeat = 14;
  inline bool has_nselfseat() const;
  inline void clear_nselfseat();
  static const int kNselfSeatFieldNumber = 14;
  inline ::google::protobuf::int32 nselfseat() const;
  inline void set_nselfseat(::google::protobuf::int32 value);

  // optional bool bJingDian = 15;
  inline bool has_bjingdian() const;
  inline void clear_bjingdian();
  static const int kBJingDianFieldNumber = 15;
  inline bool bjingdian() const;
  inline void set_bjingdian(bool value);

  // @@protoc_insertion_point(class_scope:ProDDZGameRuleConfig)
 private:
  inline void set_has_game_round();
  inline void clear_has_game_round();
  inline void set_has_need_card();
  inline void clear_has_need_card();
  inline void set_has_have_bottom_king();
  inline void clear_has_have_bottom_king();
  inline void set_has_have_mai_lei();
  inline void clear_has_have_mai_lei();
  inline void set_has_hava_hui_tou();
  inline void clear_has_hava_hui_tou();
  inline void set_has_nmasterseat();
  inline void clear_has_nmasterseat();
  inline void set_has_current_game_count();
  inline void clear_has_current_game_count();
  inline void set_has_have_jianma();
  inline void clear_has_have_jianma();
  inline void set_has_nchongguannum();
  inline void clear_has_nchongguannum();
  inline void set_has_bbawangfanbei();
  inline void clear_has_bbawangfanbei();
  inline void set_has_nplayernum();
  inline void clear_has_nplayernum();
  inline void set_has_sroomnum();
  inline void clear_has_sroomnum();
  inline void set_has_splaytime();
  inline void clear_has_splaytime();
  inline void set_has_nselfseat();
  inline void clear_has_nselfseat();
  inline void set_has_bjingdian();
  inline void clear_has_bjingdian();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 game_round_;
  ::google::protobuf::int32 need_card_;
  bool have_bottom_king_;
  bool have_mai_lei_;
  bool hava_hui_tou_;
  bool have_jianma_;
  ::google::protobuf::int32 nmasterseat_;
  ::google::protobuf::int32 current_game_count_;
  ::google::protobuf::int32 nchongguannum_;
  ::std::string* sroomnum_;
  ::google::protobuf::int32 nplayernum_;
  bool bbawangfanbei_;
  bool bjingdian_;
  ::std::string* splaytime_;
  ::google::protobuf::int32 nselfseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameRuleConfig* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameBrokenStatus : public ::google::protobuf::Message {
 public:
  ProDDZGameBrokenStatus();
  virtual ~ProDDZGameBrokenStatus();

  ProDDZGameBrokenStatus(const ProDDZGameBrokenStatus& from);

  inline ProDDZGameBrokenStatus& operator=(const ProDDZGameBrokenStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameBrokenStatus& default_instance();

  void Swap(ProDDZGameBrokenStatus* other);

  // implements Message ----------------------------------------------

  ProDDZGameBrokenStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameBrokenStatus& from);
  void MergeFrom(const ProDDZGameBrokenStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameBrokenStatus_MSGID MSGID;
  static const MSGID ID = ProDDZGameBrokenStatus_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameBrokenStatus_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameBrokenStatus_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameBrokenStatus_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameBrokenStatus_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameBrokenStatus_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameBrokenStatus_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameBrokenStatus_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 broken_seat = 1;
  inline bool has_broken_seat() const;
  inline void clear_broken_seat();
  static const int kBrokenSeatFieldNumber = 1;
  inline ::google::protobuf::int32 broken_seat() const;
  inline void set_broken_seat(::google::protobuf::int32 value);

  // repeated bool broken_status = 2;
  inline int broken_status_size() const;
  inline void clear_broken_status();
  static const int kBrokenStatusFieldNumber = 2;
  inline bool broken_status(int index) const;
  inline void set_broken_status(int index, bool value);
  inline void add_broken_status(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      broken_status() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_broken_status();

  // optional int32 left_time = 3;
  inline bool has_left_time() const;
  inline void clear_left_time();
  static const int kLeftTimeFieldNumber = 3;
  inline ::google::protobuf::int32 left_time() const;
  inline void set_left_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameBrokenStatus)
 private:
  inline void set_has_broken_seat();
  inline void clear_has_broken_seat();
  inline void set_has_left_time();
  inline void clear_has_left_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< bool > broken_status_;
  ::google::protobuf::int32 broken_seat_;
  ::google::protobuf::int32 left_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameBrokenStatus* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameDataResp : public ::google::protobuf::Message {
 public:
  ProDDZGameDataResp();
  virtual ~ProDDZGameDataResp();

  ProDDZGameDataResp(const ProDDZGameDataResp& from);

  inline ProDDZGameDataResp& operator=(const ProDDZGameDataResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameDataResp& default_instance();

  void Swap(ProDDZGameDataResp* other);

  // implements Message ----------------------------------------------

  ProDDZGameDataResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameDataResp& from);
  void MergeFrom(const ProDDZGameDataResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameDataResp_MSGID MSGID;
  static const MSGID ID = ProDDZGameDataResp_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameDataResp_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameDataResp_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameDataResp_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameDataResp_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameDataResp_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameDataResp_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameDataResp_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 total_score = 1;
  inline int total_score_size() const;
  inline void clear_total_score();
  static const int kTotalScoreFieldNumber = 1;
  inline ::google::protobuf::int32 total_score(int index) const;
  inline void set_total_score(int index, ::google::protobuf::int32 value);
  inline void add_total_score(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      total_score() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_total_score();

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameDataResp)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > total_score_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameDataResp* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameRecordRequest : public ::google::protobuf::Message {
 public:
  ProDDZGameRecordRequest();
  virtual ~ProDDZGameRecordRequest();

  ProDDZGameRecordRequest(const ProDDZGameRecordRequest& from);

  inline ProDDZGameRecordRequest& operator=(const ProDDZGameRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameRecordRequest& default_instance();

  void Swap(ProDDZGameRecordRequest* other);

  // implements Message ----------------------------------------------

  ProDDZGameRecordRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameRecordRequest& from);
  void MergeFrom(const ProDDZGameRecordRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameRecordRequest_MSGID MSGID;
  static const MSGID ID = ProDDZGameRecordRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameRecordRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameRecordRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameRecordRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameRecordRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameRecordRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameRecordRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameRecordRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional bytes url = 2;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 2;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const void* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:ProDDZGameRecordRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_url();
  inline void clear_has_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* url_;
  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameRecordRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameRecordResponse : public ::google::protobuf::Message {
 public:
  ProDDZGameRecordResponse();
  virtual ~ProDDZGameRecordResponse();

  ProDDZGameRecordResponse(const ProDDZGameRecordResponse& from);

  inline ProDDZGameRecordResponse& operator=(const ProDDZGameRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameRecordResponse& default_instance();

  void Swap(ProDDZGameRecordResponse* other);

  // implements Message ----------------------------------------------

  ProDDZGameRecordResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameRecordResponse& from);
  void MergeFrom(const ProDDZGameRecordResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameRecordResponse_MSGID MSGID;
  static const MSGID ID = ProDDZGameRecordResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameRecordResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameRecordResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameRecordResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameRecordResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameRecordResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameRecordResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameRecordResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional bytes url = 2;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 2;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const void* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:ProDDZGameRecordResponse)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_url();
  inline void clear_has_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* url_;
  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameRecordResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameUserLocationRequest : public ::google::protobuf::Message {
 public:
  ProDDZGameUserLocationRequest();
  virtual ~ProDDZGameUserLocationRequest();

  ProDDZGameUserLocationRequest(const ProDDZGameUserLocationRequest& from);

  inline ProDDZGameUserLocationRequest& operator=(const ProDDZGameUserLocationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameUserLocationRequest& default_instance();

  void Swap(ProDDZGameUserLocationRequest* other);

  // implements Message ----------------------------------------------

  ProDDZGameUserLocationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameUserLocationRequest& from);
  void MergeFrom(const ProDDZGameUserLocationRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameUserLocationRequest_MSGID MSGID;
  static const MSGID ID = ProDDZGameUserLocationRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameUserLocationRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameUserLocationRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameUserLocationRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameUserLocationRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameUserLocationRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameUserLocationRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameUserLocationRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional double dwlongitude = 2;
  inline bool has_dwlongitude() const;
  inline void clear_dwlongitude();
  static const int kDwlongitudeFieldNumber = 2;
  inline double dwlongitude() const;
  inline void set_dwlongitude(double value);

  // optional double dwlatitude = 3;
  inline bool has_dwlatitude() const;
  inline void clear_dwlatitude();
  static const int kDwlatitudeFieldNumber = 3;
  inline double dwlatitude() const;
  inline void set_dwlatitude(double value);

  // optional bytes strDistrict = 4;
  inline bool has_strdistrict() const;
  inline void clear_strdistrict();
  static const int kStrDistrictFieldNumber = 4;
  inline const ::std::string& strdistrict() const;
  inline void set_strdistrict(const ::std::string& value);
  inline void set_strdistrict(const char* value);
  inline void set_strdistrict(const void* value, size_t size);
  inline ::std::string* mutable_strdistrict();
  inline ::std::string* release_strdistrict();
  inline void set_allocated_strdistrict(::std::string* strdistrict);

  // optional bytes strStreetName = 5;
  inline bool has_strstreetname() const;
  inline void clear_strstreetname();
  static const int kStrStreetNameFieldNumber = 5;
  inline const ::std::string& strstreetname() const;
  inline void set_strstreetname(const ::std::string& value);
  inline void set_strstreetname(const char* value);
  inline void set_strstreetname(const void* value, size_t size);
  inline ::std::string* mutable_strstreetname();
  inline ::std::string* release_strstreetname();
  inline void set_allocated_strstreetname(::std::string* strstreetname);

  // @@protoc_insertion_point(class_scope:ProDDZGameUserLocationRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_dwlongitude();
  inline void clear_has_dwlongitude();
  inline void set_has_dwlatitude();
  inline void clear_has_dwlatitude();
  inline void set_has_strdistrict();
  inline void clear_has_strdistrict();
  inline void set_has_strstreetname();
  inline void clear_has_strstreetname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  double dwlongitude_;
  double dwlatitude_;
  ::std::string* strdistrict_;
  ::std::string* strstreetname_;
  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameUserLocationRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameSyncCardResponse : public ::google::protobuf::Message {
 public:
  ProDDZGameSyncCardResponse();
  virtual ~ProDDZGameSyncCardResponse();

  ProDDZGameSyncCardResponse(const ProDDZGameSyncCardResponse& from);

  inline ProDDZGameSyncCardResponse& operator=(const ProDDZGameSyncCardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameSyncCardResponse& default_instance();

  void Swap(ProDDZGameSyncCardResponse* other);

  // implements Message ----------------------------------------------

  ProDDZGameSyncCardResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameSyncCardResponse& from);
  void MergeFrom(const ProDDZGameSyncCardResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameSyncCardResponse_MSGID MSGID;
  static const MSGID ID = ProDDZGameSyncCardResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameSyncCardResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameSyncCardResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameSyncCardResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameSyncCardResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameSyncCardResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameSyncCardResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameSyncCardResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 handmahs = 3;
  inline int handmahs_size() const;
  inline void clear_handmahs();
  static const int kHandmahsFieldNumber = 3;
  inline ::google::protobuf::int32 handmahs(int index) const;
  inline void set_handmahs(int index, ::google::protobuf::int32 value);
  inline void add_handmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      handmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_handmahs();

  // @@protoc_insertion_point(class_scope:ProDDZGameSyncCardResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > handmahs_;
  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameSyncCardResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameUserPhoneStatusRequest : public ::google::protobuf::Message {
 public:
  ProDDZGameUserPhoneStatusRequest();
  virtual ~ProDDZGameUserPhoneStatusRequest();

  ProDDZGameUserPhoneStatusRequest(const ProDDZGameUserPhoneStatusRequest& from);

  inline ProDDZGameUserPhoneStatusRequest& operator=(const ProDDZGameUserPhoneStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameUserPhoneStatusRequest& default_instance();

  void Swap(ProDDZGameUserPhoneStatusRequest* other);

  // implements Message ----------------------------------------------

  ProDDZGameUserPhoneStatusRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameUserPhoneStatusRequest& from);
  void MergeFrom(const ProDDZGameUserPhoneStatusRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameUserPhoneStatusRequest_MSGID MSGID;
  static const MSGID ID = ProDDZGameUserPhoneStatusRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameUserPhoneStatusRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameUserPhoneStatusRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameUserPhoneStatusRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameUserPhoneStatusRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameUserPhoneStatusRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameUserPhoneStatusRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameUserPhoneStatusRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional int32 userstatus = 2;
  inline bool has_userstatus() const;
  inline void clear_userstatus();
  static const int kUserstatusFieldNumber = 2;
  inline ::google::protobuf::int32 userstatus() const;
  inline void set_userstatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameUserPhoneStatusRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_userstatus();
  inline void clear_has_userstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;
  ::google::protobuf::int32 userstatus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameUserPhoneStatusRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameUserGiveUpRequest : public ::google::protobuf::Message {
 public:
  ProDDZGameUserGiveUpRequest();
  virtual ~ProDDZGameUserGiveUpRequest();

  ProDDZGameUserGiveUpRequest(const ProDDZGameUserGiveUpRequest& from);

  inline ProDDZGameUserGiveUpRequest& operator=(const ProDDZGameUserGiveUpRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameUserGiveUpRequest& default_instance();

  void Swap(ProDDZGameUserGiveUpRequest* other);

  // implements Message ----------------------------------------------

  ProDDZGameUserGiveUpRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameUserGiveUpRequest& from);
  void MergeFrom(const ProDDZGameUserGiveUpRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameUserGiveUpRequest_MSGID MSGID;
  static const MSGID ID = ProDDZGameUserGiveUpRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameUserGiveUpRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameUserGiveUpRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameUserGiveUpRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameUserGiveUpRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameUserGiveUpRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameUserGiveUpRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameUserGiveUpRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameUserGiveUpRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameUserGiveUpRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameUserHintRequest : public ::google::protobuf::Message {
 public:
  ProDDZGameUserHintRequest();
  virtual ~ProDDZGameUserHintRequest();

  ProDDZGameUserHintRequest(const ProDDZGameUserHintRequest& from);

  inline ProDDZGameUserHintRequest& operator=(const ProDDZGameUserHintRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameUserHintRequest& default_instance();

  void Swap(ProDDZGameUserHintRequest* other);

  // implements Message ----------------------------------------------

  ProDDZGameUserHintRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameUserHintRequest& from);
  void MergeFrom(const ProDDZGameUserHintRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameUserHintRequest_MSGID MSGID;
  static const MSGID ID = ProDDZGameUserHintRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameUserHintRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameUserHintRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameUserHintRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameUserHintRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameUserHintRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameUserHintRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameUserHintRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProDDZGameUserHintRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameUserHintRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameUserHintResponse : public ::google::protobuf::Message {
 public:
  ProDDZGameUserHintResponse();
  virtual ~ProDDZGameUserHintResponse();

  ProDDZGameUserHintResponse(const ProDDZGameUserHintResponse& from);

  inline ProDDZGameUserHintResponse& operator=(const ProDDZGameUserHintResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameUserHintResponse& default_instance();

  void Swap(ProDDZGameUserHintResponse* other);

  // implements Message ----------------------------------------------

  ProDDZGameUserHintResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameUserHintResponse& from);
  void MergeFrom(const ProDDZGameUserHintResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameUserHintResponse_MSGID MSGID;
  static const MSGID ID = ProDDZGameUserHintResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameUserHintResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameUserHintResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameUserHintResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameUserHintResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameUserHintResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameUserHintResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameUserHintResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 lenth = 1;
  inline bool has_lenth() const;
  inline void clear_lenth();
  static const int kLenthFieldNumber = 1;
  inline ::google::protobuf::int32 lenth() const;
  inline void set_lenth(::google::protobuf::int32 value);

  // repeated int32 outMahs = 2;
  inline int outmahs_size() const;
  inline void clear_outmahs();
  static const int kOutMahsFieldNumber = 2;
  inline ::google::protobuf::int32 outmahs(int index) const;
  inline void set_outmahs(int index, ::google::protobuf::int32 value);
  inline void add_outmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      outmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_outmahs();

  // @@protoc_insertion_point(class_scope:ProDDZGameUserHintResponse)
 private:
  inline void set_has_lenth();
  inline void clear_has_lenth();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > outmahs_;
  ::google::protobuf::int32 lenth_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameUserHintResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameUserCallScoreResponse : public ::google::protobuf::Message {
 public:
  ProDDZGameUserCallScoreResponse();
  virtual ~ProDDZGameUserCallScoreResponse();

  ProDDZGameUserCallScoreResponse(const ProDDZGameUserCallScoreResponse& from);

  inline ProDDZGameUserCallScoreResponse& operator=(const ProDDZGameUserCallScoreResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameUserCallScoreResponse& default_instance();

  void Swap(ProDDZGameUserCallScoreResponse* other);

  // implements Message ----------------------------------------------

  ProDDZGameUserCallScoreResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameUserCallScoreResponse& from);
  void MergeFrom(const ProDDZGameUserCallScoreResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameUserCallScoreResponse_MSGID MSGID;
  static const MSGID ID = ProDDZGameUserCallScoreResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameUserCallScoreResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameUserCallScoreResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameUserCallScoreResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameUserCallScoreResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameUserCallScoreResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameUserCallScoreResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameUserCallScoreResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 usercallscore = 2;
  inline bool has_usercallscore() const;
  inline void clear_usercallscore();
  static const int kUsercallscoreFieldNumber = 2;
  inline ::google::protobuf::int32 usercallscore() const;
  inline void set_usercallscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameUserCallScoreResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_usercallscore();
  inline void clear_has_usercallscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 usercallscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameUserCallScoreResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameUserCallScoreRequest : public ::google::protobuf::Message {
 public:
  ProDDZGameUserCallScoreRequest();
  virtual ~ProDDZGameUserCallScoreRequest();

  ProDDZGameUserCallScoreRequest(const ProDDZGameUserCallScoreRequest& from);

  inline ProDDZGameUserCallScoreRequest& operator=(const ProDDZGameUserCallScoreRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameUserCallScoreRequest& default_instance();

  void Swap(ProDDZGameUserCallScoreRequest* other);

  // implements Message ----------------------------------------------

  ProDDZGameUserCallScoreRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameUserCallScoreRequest& from);
  void MergeFrom(const ProDDZGameUserCallScoreRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameUserCallScoreRequest_MSGID MSGID;
  static const MSGID ID = ProDDZGameUserCallScoreRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameUserCallScoreRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameUserCallScoreRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameUserCallScoreRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameUserCallScoreRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameUserCallScoreRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameUserCallScoreRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameUserCallScoreRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 usercallscore = 2;
  inline bool has_usercallscore() const;
  inline void clear_usercallscore();
  static const int kUsercallscoreFieldNumber = 2;
  inline ::google::protobuf::int32 usercallscore() const;
  inline void set_usercallscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameUserCallScoreRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_usercallscore();
  inline void clear_has_usercallscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 usercallscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameUserCallScoreRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameCallNotify : public ::google::protobuf::Message {
 public:
  ProDDZGameCallNotify();
  virtual ~ProDDZGameCallNotify();

  ProDDZGameCallNotify(const ProDDZGameCallNotify& from);

  inline ProDDZGameCallNotify& operator=(const ProDDZGameCallNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameCallNotify& default_instance();

  void Swap(ProDDZGameCallNotify* other);

  // implements Message ----------------------------------------------

  ProDDZGameCallNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameCallNotify& from);
  void MergeFrom(const ProDDZGameCallNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameCallNotify_MSGID MSGID;
  static const MSGID ID = ProDDZGameCallNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameCallNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameCallNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameCallNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameCallNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameCallNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameCallNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameCallNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameCallNotify)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameCallNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameQiangNotify : public ::google::protobuf::Message {
 public:
  ProDDZGameQiangNotify();
  virtual ~ProDDZGameQiangNotify();

  ProDDZGameQiangNotify(const ProDDZGameQiangNotify& from);

  inline ProDDZGameQiangNotify& operator=(const ProDDZGameQiangNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameQiangNotify& default_instance();

  void Swap(ProDDZGameQiangNotify* other);

  // implements Message ----------------------------------------------

  ProDDZGameQiangNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameQiangNotify& from);
  void MergeFrom(const ProDDZGameQiangNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameQiangNotify_MSGID MSGID;
  static const MSGID ID = ProDDZGameQiangNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameQiangNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameQiangNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameQiangNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameQiangNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameQiangNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameQiangNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameQiangNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameQiangNotify)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameQiangNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameUserCallLandlordResponse : public ::google::protobuf::Message {
 public:
  ProDDZGameUserCallLandlordResponse();
  virtual ~ProDDZGameUserCallLandlordResponse();

  ProDDZGameUserCallLandlordResponse(const ProDDZGameUserCallLandlordResponse& from);

  inline ProDDZGameUserCallLandlordResponse& operator=(const ProDDZGameUserCallLandlordResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameUserCallLandlordResponse& default_instance();

  void Swap(ProDDZGameUserCallLandlordResponse* other);

  // implements Message ----------------------------------------------

  ProDDZGameUserCallLandlordResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameUserCallLandlordResponse& from);
  void MergeFrom(const ProDDZGameUserCallLandlordResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameUserCallLandlordResponse_MSGID MSGID;
  static const MSGID ID = ProDDZGameUserCallLandlordResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameUserCallLandlordResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameUserCallLandlordResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameUserCallLandlordResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameUserCallLandlordResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameUserCallLandlordResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameUserCallLandlordResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameUserCallLandlordResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 iscallandlord = 1;
  inline bool has_iscallandlord() const;
  inline void clear_iscallandlord();
  static const int kIscallandlordFieldNumber = 1;
  inline ::google::protobuf::int32 iscallandlord() const;
  inline void set_iscallandlord(::google::protobuf::int32 value);

  // optional int32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // optional int32 landlordSeat = 3;
  inline bool has_landlordseat() const;
  inline void clear_landlordseat();
  static const int kLandlordSeatFieldNumber = 3;
  inline ::google::protobuf::int32 landlordseat() const;
  inline void set_landlordseat(::google::protobuf::int32 value);

  // optional int32 seat = 4;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 4;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool isSoundCall = 5;
  inline bool has_issoundcall() const;
  inline void clear_issoundcall();
  static const int kIsSoundCallFieldNumber = 5;
  inline bool issoundcall() const;
  inline void set_issoundcall(bool value);

  // @@protoc_insertion_point(class_scope:ProDDZGameUserCallLandlordResponse)
 private:
  inline void set_has_iscallandlord();
  inline void clear_has_iscallandlord();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_landlordseat();
  inline void clear_has_landlordseat();
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_issoundcall();
  inline void clear_has_issoundcall();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iscallandlord_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 landlordseat_;
  ::google::protobuf::int32 seat_;
  bool issoundcall_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameUserCallLandlordResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameUserCallLandlordRequest : public ::google::protobuf::Message {
 public:
  ProDDZGameUserCallLandlordRequest();
  virtual ~ProDDZGameUserCallLandlordRequest();

  ProDDZGameUserCallLandlordRequest(const ProDDZGameUserCallLandlordRequest& from);

  inline ProDDZGameUserCallLandlordRequest& operator=(const ProDDZGameUserCallLandlordRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameUserCallLandlordRequest& default_instance();

  void Swap(ProDDZGameUserCallLandlordRequest* other);

  // implements Message ----------------------------------------------

  ProDDZGameUserCallLandlordRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameUserCallLandlordRequest& from);
  void MergeFrom(const ProDDZGameUserCallLandlordRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameUserCallLandlordRequest_MSGID MSGID;
  static const MSGID ID = ProDDZGameUserCallLandlordRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameUserCallLandlordRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameUserCallLandlordRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameUserCallLandlordRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameUserCallLandlordRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameUserCallLandlordRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameUserCallLandlordRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameUserCallLandlordRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 iscallandlord = 2;
  inline bool has_iscallandlord() const;
  inline void clear_iscallandlord();
  static const int kIscallandlordFieldNumber = 2;
  inline ::google::protobuf::int32 iscallandlord() const;
  inline void set_iscallandlord(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameUserCallLandlordRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_iscallandlord();
  inline void clear_has_iscallandlord();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 iscallandlord_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameUserCallLandlordRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameUserQinagLandlordResponse : public ::google::protobuf::Message {
 public:
  ProDDZGameUserQinagLandlordResponse();
  virtual ~ProDDZGameUserQinagLandlordResponse();

  ProDDZGameUserQinagLandlordResponse(const ProDDZGameUserQinagLandlordResponse& from);

  inline ProDDZGameUserQinagLandlordResponse& operator=(const ProDDZGameUserQinagLandlordResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameUserQinagLandlordResponse& default_instance();

  void Swap(ProDDZGameUserQinagLandlordResponse* other);

  // implements Message ----------------------------------------------

  ProDDZGameUserQinagLandlordResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameUserQinagLandlordResponse& from);
  void MergeFrom(const ProDDZGameUserQinagLandlordResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameUserQinagLandlordResponse_MSGID MSGID;
  static const MSGID ID = ProDDZGameUserQinagLandlordResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameUserQinagLandlordResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameUserQinagLandlordResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameUserQinagLandlordResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameUserQinagLandlordResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameUserQinagLandlordResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameUserQinagLandlordResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameUserQinagLandlordResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 isQiangLandlord = 1;
  inline bool has_isqianglandlord() const;
  inline void clear_isqianglandlord();
  static const int kIsQiangLandlordFieldNumber = 1;
  inline ::google::protobuf::int32 isqianglandlord() const;
  inline void set_isqianglandlord(::google::protobuf::int32 value);

  // optional int32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // optional int32 landlordSeat = 3;
  inline bool has_landlordseat() const;
  inline void clear_landlordseat();
  static const int kLandlordSeatFieldNumber = 3;
  inline ::google::protobuf::int32 landlordseat() const;
  inline void set_landlordseat(::google::protobuf::int32 value);

  // optional int32 seat = 4;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 4;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameUserQinagLandlordResponse)
 private:
  inline void set_has_isqianglandlord();
  inline void clear_has_isqianglandlord();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_landlordseat();
  inline void clear_has_landlordseat();
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isqianglandlord_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 landlordseat_;
  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameUserQinagLandlordResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameUserQiangLandlordRequest : public ::google::protobuf::Message {
 public:
  ProDDZGameUserQiangLandlordRequest();
  virtual ~ProDDZGameUserQiangLandlordRequest();

  ProDDZGameUserQiangLandlordRequest(const ProDDZGameUserQiangLandlordRequest& from);

  inline ProDDZGameUserQiangLandlordRequest& operator=(const ProDDZGameUserQiangLandlordRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameUserQiangLandlordRequest& default_instance();

  void Swap(ProDDZGameUserQiangLandlordRequest* other);

  // implements Message ----------------------------------------------

  ProDDZGameUserQiangLandlordRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameUserQiangLandlordRequest& from);
  void MergeFrom(const ProDDZGameUserQiangLandlordRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameUserQiangLandlordRequest_MSGID MSGID;
  static const MSGID ID = ProDDZGameUserQiangLandlordRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameUserQiangLandlordRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameUserQiangLandlordRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameUserQiangLandlordRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameUserQiangLandlordRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameUserQiangLandlordRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameUserQiangLandlordRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameUserQiangLandlordRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 isQiangLandlord = 2;
  inline bool has_isqianglandlord() const;
  inline void clear_isqianglandlord();
  static const int kIsQiangLandlordFieldNumber = 2;
  inline ::google::protobuf::int32 isqianglandlord() const;
  inline void set_isqianglandlord(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameUserQiangLandlordRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_isqianglandlord();
  inline void clear_has_isqianglandlord();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 isqianglandlord_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameUserQiangLandlordRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameSendLastCard : public ::google::protobuf::Message {
 public:
  ProDDZGameSendLastCard();
  virtual ~ProDDZGameSendLastCard();

  ProDDZGameSendLastCard(const ProDDZGameSendLastCard& from);

  inline ProDDZGameSendLastCard& operator=(const ProDDZGameSendLastCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameSendLastCard& default_instance();

  void Swap(ProDDZGameSendLastCard* other);

  // implements Message ----------------------------------------------

  ProDDZGameSendLastCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameSendLastCard& from);
  void MergeFrom(const ProDDZGameSendLastCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameSendLastCard_MSGID MSGID;
  static const MSGID ID = ProDDZGameSendLastCard_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameSendLastCard_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameSendLastCard_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameSendLastCard_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameSendLastCard_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameSendLastCard_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameSendLastCard_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameSendLastCard_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated .DDZMahList cbHandCardData = 2;
  inline int cbhandcarddata_size() const;
  inline void clear_cbhandcarddata();
  static const int kCbHandCardDataFieldNumber = 2;
  inline const ::DDZMahList& cbhandcarddata(int index) const;
  inline ::DDZMahList* mutable_cbhandcarddata(int index);
  inline ::DDZMahList* add_cbhandcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::DDZMahList >&
      cbhandcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::DDZMahList >*
      mutable_cbhandcarddata();

  // repeated int32 lastmahs = 3;
  inline int lastmahs_size() const;
  inline void clear_lastmahs();
  static const int kLastmahsFieldNumber = 3;
  inline ::google::protobuf::int32 lastmahs(int index) const;
  inline void set_lastmahs(int index, ::google::protobuf::int32 value);
  inline void add_lastmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lastmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lastmahs();

  // optional int32 laizi = 4;
  inline bool has_laizi() const;
  inline void clear_laizi();
  static const int kLaiziFieldNumber = 4;
  inline ::google::protobuf::int32 laizi() const;
  inline void set_laizi(::google::protobuf::int32 value);

  // optional bool isReCome = 5;
  inline bool has_isrecome() const;
  inline void clear_isrecome();
  static const int kIsReComeFieldNumber = 5;
  inline bool isrecome() const;
  inline void set_isrecome(bool value);

  // @@protoc_insertion_point(class_scope:ProDDZGameSendLastCard)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_laizi();
  inline void clear_has_laizi();
  inline void set_has_isrecome();
  inline void clear_has_isrecome();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DDZMahList > cbhandcarddata_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 laizi_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lastmahs_;
  bool isrecome_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameSendLastCard* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameUserMingPaiRequest : public ::google::protobuf::Message {
 public:
  ProDDZGameUserMingPaiRequest();
  virtual ~ProDDZGameUserMingPaiRequest();

  ProDDZGameUserMingPaiRequest(const ProDDZGameUserMingPaiRequest& from);

  inline ProDDZGameUserMingPaiRequest& operator=(const ProDDZGameUserMingPaiRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameUserMingPaiRequest& default_instance();

  void Swap(ProDDZGameUserMingPaiRequest* other);

  // implements Message ----------------------------------------------

  ProDDZGameUserMingPaiRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameUserMingPaiRequest& from);
  void MergeFrom(const ProDDZGameUserMingPaiRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameUserMingPaiRequest_MSGID MSGID;
  static const MSGID ID = ProDDZGameUserMingPaiRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameUserMingPaiRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameUserMingPaiRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameUserMingPaiRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameUserMingPaiRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameUserMingPaiRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameUserMingPaiRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameUserMingPaiRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool isMingPai = 2;
  inline bool has_ismingpai() const;
  inline void clear_ismingpai();
  static const int kIsMingPaiFieldNumber = 2;
  inline bool ismingpai() const;
  inline void set_ismingpai(bool value);

  // optional int32 beilv = 3;
  inline bool has_beilv() const;
  inline void clear_beilv();
  static const int kBeilvFieldNumber = 3;
  inline ::google::protobuf::int32 beilv() const;
  inline void set_beilv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameUserMingPaiRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_ismingpai();
  inline void clear_has_ismingpai();
  inline void set_has_beilv();
  inline void clear_has_beilv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  bool ismingpai_;
  ::google::protobuf::int32 beilv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameUserMingPaiRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameUserMingPaiResponse : public ::google::protobuf::Message {
 public:
  ProDDZGameUserMingPaiResponse();
  virtual ~ProDDZGameUserMingPaiResponse();

  ProDDZGameUserMingPaiResponse(const ProDDZGameUserMingPaiResponse& from);

  inline ProDDZGameUserMingPaiResponse& operator=(const ProDDZGameUserMingPaiResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameUserMingPaiResponse& default_instance();

  void Swap(ProDDZGameUserMingPaiResponse* other);

  // implements Message ----------------------------------------------

  ProDDZGameUserMingPaiResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameUserMingPaiResponse& from);
  void MergeFrom(const ProDDZGameUserMingPaiResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameUserMingPaiResponse_MSGID MSGID;
  static const MSGID ID = ProDDZGameUserMingPaiResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameUserMingPaiResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameUserMingPaiResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameUserMingPaiResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameUserMingPaiResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameUserMingPaiResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameUserMingPaiResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameUserMingPaiResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool isMingPai = 2;
  inline bool has_ismingpai() const;
  inline void clear_ismingpai();
  static const int kIsMingPaiFieldNumber = 2;
  inline bool ismingpai() const;
  inline void set_ismingpai(bool value);

  // optional int32 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // optional int32 mingtag = 4;
  inline bool has_mingtag() const;
  inline void clear_mingtag();
  static const int kMingtagFieldNumber = 4;
  inline ::google::protobuf::int32 mingtag() const;
  inline void set_mingtag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProDDZGameUserMingPaiResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_ismingpai();
  inline void clear_has_ismingpai();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_mingtag();
  inline void clear_has_mingtag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  bool ismingpai_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 mingtag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameUserMingPaiResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameMingNotify : public ::google::protobuf::Message {
 public:
  ProDDZGameMingNotify();
  virtual ~ProDDZGameMingNotify();

  ProDDZGameMingNotify(const ProDDZGameMingNotify& from);

  inline ProDDZGameMingNotify& operator=(const ProDDZGameMingNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameMingNotify& default_instance();

  void Swap(ProDDZGameMingNotify* other);

  // implements Message ----------------------------------------------

  ProDDZGameMingNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameMingNotify& from);
  void MergeFrom(const ProDDZGameMingNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameMingNotify_MSGID MSGID;
  static const MSGID ID = ProDDZGameMingNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameMingNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameMingNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameMingNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameMingNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameMingNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameMingNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameMingNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 tag = 2;
  inline bool has_tag() const;
  inline void clear_tag();
  static const int kTagFieldNumber = 2;
  inline ::google::protobuf::int32 tag() const;
  inline void set_tag(::google::protobuf::int32 value);

  // optional float time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline float time() const;
  inline void set_time(float value);

  // @@protoc_insertion_point(class_scope:ProDDZGameMingNotify)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_tag();
  inline void clear_has_tag();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 tag_;
  float time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameMingNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProDDZGameStartAgain : public ::google::protobuf::Message {
 public:
  ProDDZGameStartAgain();
  virtual ~ProDDZGameStartAgain();

  ProDDZGameStartAgain(const ProDDZGameStartAgain& from);

  inline ProDDZGameStartAgain& operator=(const ProDDZGameStartAgain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProDDZGameStartAgain& default_instance();

  void Swap(ProDDZGameStartAgain* other);

  // implements Message ----------------------------------------------

  ProDDZGameStartAgain* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProDDZGameStartAgain& from);
  void MergeFrom(const ProDDZGameStartAgain& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProDDZGameStartAgain_MSGID MSGID;
  static const MSGID ID = ProDDZGameStartAgain_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProDDZGameStartAgain_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProDDZGameStartAgain_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProDDZGameStartAgain_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProDDZGameStartAgain_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProDDZGameStartAgain_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProDDZGameStartAgain_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProDDZGameStartAgain_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProDDZGameStartAgain)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_ddzpk_2eproto();
  friend void protobuf_AssignDesc_ddzpk_2eproto();
  friend void protobuf_ShutdownFile_ddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProDDZGameStartAgain* default_instance_;
};
// ===================================================================


// ===================================================================

// ProDDZGameStatusResponse

// optional .DDZGameState status = 2;
inline bool ProDDZGameStatusResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameStatusResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameStatusResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameStatusResponse::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::DDZGameState ProDDZGameStatusResponse::status() const {
  return static_cast< ::DDZGameState >(status_);
}
inline void ProDDZGameStatusResponse::set_status(::DDZGameState value) {
  assert(::DDZGameState_IsValid(value));
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameDeskInfoResponse

// optional int32 CellScore = 2;
inline bool ProDDZGameDeskInfoResponse::has_cellscore() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameDeskInfoResponse::set_has_cellscore() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameDeskInfoResponse::clear_has_cellscore() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameDeskInfoResponse::clear_cellscore() {
  cellscore_ = 0;
  clear_has_cellscore();
}
inline ::google::protobuf::int32 ProDDZGameDeskInfoResponse::cellscore() const {
  return cellscore_;
}
inline void ProDDZGameDeskInfoResponse::set_cellscore(::google::protobuf::int32 value) {
  set_has_cellscore();
  cellscore_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameReadyNotify

// optional int32 seat = 2;
inline bool ProDDZGameReadyNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameReadyNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameReadyNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameReadyNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameReadyNotify::seat() const {
  return seat_;
}
inline void ProDDZGameReadyNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 time = 3;
inline bool ProDDZGameReadyNotify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameReadyNotify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameReadyNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameReadyNotify::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProDDZGameReadyNotify::time() const {
  return time_;
}
inline void ProDDZGameReadyNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameReadyRequest

// optional int32 seat = 2;
inline bool ProDDZGameReadyRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameReadyRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameReadyRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameReadyRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameReadyRequest::seat() const {
  return seat_;
}
inline void ProDDZGameReadyRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameReadyResponse

// optional int32 seat = 2;
inline bool ProDDZGameReadyResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameReadyResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameReadyResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameReadyResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameReadyResponse::seat() const {
  return seat_;
}
inline void ProDDZGameReadyResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool isMingPai = 3;
inline bool ProDDZGameReadyResponse::has_ismingpai() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameReadyResponse::set_has_ismingpai() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameReadyResponse::clear_has_ismingpai() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameReadyResponse::clear_ismingpai() {
  ismingpai_ = false;
  clear_has_ismingpai();
}
inline bool ProDDZGameReadyResponse::ismingpai() const {
  return ismingpai_;
}
inline void ProDDZGameReadyResponse::set_ismingpai(bool value) {
  set_has_ismingpai();
  ismingpai_ = value;
}

// optional int32 MingPaiTag = 4;
inline bool ProDDZGameReadyResponse::has_mingpaitag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameReadyResponse::set_has_mingpaitag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameReadyResponse::clear_has_mingpaitag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameReadyResponse::clear_mingpaitag() {
  mingpaitag_ = 0;
  clear_has_mingpaitag();
}
inline ::google::protobuf::int32 ProDDZGameReadyResponse::mingpaitag() const {
  return mingpaitag_;
}
inline void ProDDZGameReadyResponse::set_mingpaitag(::google::protobuf::int32 value) {
  set_has_mingpaitag();
  mingpaitag_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameStart

// optional int32 bankerseat = 2;
inline bool ProDDZGameStart::has_bankerseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameStart::set_has_bankerseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameStart::clear_has_bankerseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameStart::clear_bankerseat() {
  bankerseat_ = 0;
  clear_has_bankerseat();
}
inline ::google::protobuf::int32 ProDDZGameStart::bankerseat() const {
  return bankerseat_;
}
inline void ProDDZGameStart::set_bankerseat(::google::protobuf::int32 value) {
  set_has_bankerseat();
  bankerseat_ = value;
}

// optional int32 gamecount = 3;
inline bool ProDDZGameStart::has_gamecount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameStart::set_has_gamecount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameStart::clear_has_gamecount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameStart::clear_gamecount() {
  gamecount_ = 0;
  clear_has_gamecount();
}
inline ::google::protobuf::int32 ProDDZGameStart::gamecount() const {
  return gamecount_;
}
inline void ProDDZGameStart::set_gamecount(::google::protobuf::int32 value) {
  set_has_gamecount();
  gamecount_ = value;
}

// optional int32 outCardtimes = 4;
inline bool ProDDZGameStart::has_outcardtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameStart::set_has_outcardtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameStart::clear_has_outcardtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameStart::clear_outcardtimes() {
  outcardtimes_ = 0;
  clear_has_outcardtimes();
}
inline ::google::protobuf::int32 ProDDZGameStart::outcardtimes() const {
  return outcardtimes_;
}
inline void ProDDZGameStart::set_outcardtimes(::google::protobuf::int32 value) {
  set_has_outcardtimes();
  outcardtimes_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameDiceNotify

// optional int32 seat = 2;
inline bool ProDDZGameDiceNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameDiceNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameDiceNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameDiceNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameDiceNotify::seat() const {
  return seat_;
}
inline void ProDDZGameDiceNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 time = 3;
inline bool ProDDZGameDiceNotify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameDiceNotify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameDiceNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameDiceNotify::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProDDZGameDiceNotify::time() const {
  return time_;
}
inline void ProDDZGameDiceNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 dicecount = 4;
inline bool ProDDZGameDiceNotify::has_dicecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameDiceNotify::set_has_dicecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameDiceNotify::clear_has_dicecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameDiceNotify::clear_dicecount() {
  dicecount_ = 0;
  clear_has_dicecount();
}
inline ::google::protobuf::int32 ProDDZGameDiceNotify::dicecount() const {
  return dicecount_;
}
inline void ProDDZGameDiceNotify::set_dicecount(::google::protobuf::int32 value) {
  set_has_dicecount();
  dicecount_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameDiceRequest

// optional int32 seat = 2;
inline bool ProDDZGameDiceRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameDiceRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameDiceRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameDiceRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameDiceRequest::seat() const {
  return seat_;
}
inline void ProDDZGameDiceRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 dicecount = 3;
inline bool ProDDZGameDiceRequest::has_dicecount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameDiceRequest::set_has_dicecount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameDiceRequest::clear_has_dicecount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameDiceRequest::clear_dicecount() {
  dicecount_ = 0;
  clear_has_dicecount();
}
inline ::google::protobuf::int32 ProDDZGameDiceRequest::dicecount() const {
  return dicecount_;
}
inline void ProDDZGameDiceRequest::set_dicecount(::google::protobuf::int32 value) {
  set_has_dicecount();
  dicecount_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameDiceResult

// optional int32 seat = 2;
inline bool ProDDZGameDiceResult::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameDiceResult::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameDiceResult::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameDiceResult::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameDiceResult::seat() const {
  return seat_;
}
inline void ProDDZGameDiceResult::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 result = 3;
inline int ProDDZGameDiceResult::result_size() const {
  return result_.size();
}
inline void ProDDZGameDiceResult::clear_result() {
  result_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameDiceResult::result(int index) const {
  return result_.Get(index);
}
inline void ProDDZGameDiceResult::set_result(int index, ::google::protobuf::int32 value) {
  result_.Set(index, value);
}
inline void ProDDZGameDiceResult::add_result(::google::protobuf::int32 value) {
  result_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameDiceResult::result() const {
  return result_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameDiceResult::mutable_result() {
  return &result_;
}

// optional int32 dicecount = 4;
inline bool ProDDZGameDiceResult::has_dicecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameDiceResult::set_has_dicecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameDiceResult::clear_has_dicecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameDiceResult::clear_dicecount() {
  dicecount_ = 0;
  clear_has_dicecount();
}
inline ::google::protobuf::int32 ProDDZGameDiceResult::dicecount() const {
  return dicecount_;
}
inline void ProDDZGameDiceResult::set_dicecount(::google::protobuf::int32 value) {
  set_has_dicecount();
  dicecount_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameSendMahs

// optional int32 seat = 2;
inline bool ProDDZGameSendMahs::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameSendMahs::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameSendMahs::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameSendMahs::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameSendMahs::seat() const {
  return seat_;
}
inline void ProDDZGameSendMahs::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated .DDZMahList cbHandCardData = 3;
inline int ProDDZGameSendMahs::cbhandcarddata_size() const {
  return cbhandcarddata_.size();
}
inline void ProDDZGameSendMahs::clear_cbhandcarddata() {
  cbhandcarddata_.Clear();
}
inline const ::DDZMahList& ProDDZGameSendMahs::cbhandcarddata(int index) const {
  return cbhandcarddata_.Get(index);
}
inline ::DDZMahList* ProDDZGameSendMahs::mutable_cbhandcarddata(int index) {
  return cbhandcarddata_.Mutable(index);
}
inline ::DDZMahList* ProDDZGameSendMahs::add_cbhandcarddata() {
  return cbhandcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DDZMahList >&
ProDDZGameSendMahs::cbhandcarddata() const {
  return cbhandcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::DDZMahList >*
ProDDZGameSendMahs::mutable_cbhandcarddata() {
  return &cbhandcarddata_;
}

// repeated int32 mahscount = 4;
inline int ProDDZGameSendMahs::mahscount_size() const {
  return mahscount_.size();
}
inline void ProDDZGameSendMahs::clear_mahscount() {
  mahscount_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameSendMahs::mahscount(int index) const {
  return mahscount_.Get(index);
}
inline void ProDDZGameSendMahs::set_mahscount(int index, ::google::protobuf::int32 value) {
  mahscount_.Set(index, value);
}
inline void ProDDZGameSendMahs::add_mahscount(::google::protobuf::int32 value) {
  mahscount_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameSendMahs::mahscount() const {
  return mahscount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameSendMahs::mutable_mahscount() {
  return &mahscount_;
}

// optional int32 cbLeftCount = 5;
inline bool ProDDZGameSendMahs::has_cbleftcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProDDZGameSendMahs::set_has_cbleftcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProDDZGameSendMahs::clear_has_cbleftcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProDDZGameSendMahs::clear_cbleftcount() {
  cbleftcount_ = 0;
  clear_has_cbleftcount();
}
inline ::google::protobuf::int32 ProDDZGameSendMahs::cbleftcount() const {
  return cbleftcount_;
}
inline void ProDDZGameSendMahs::set_cbleftcount(::google::protobuf::int32 value) {
  set_has_cbleftcount();
  cbleftcount_ = value;
}

// optional int32 offlineTag = 6;
inline bool ProDDZGameSendMahs::has_offlinetag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProDDZGameSendMahs::set_has_offlinetag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProDDZGameSendMahs::clear_has_offlinetag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProDDZGameSendMahs::clear_offlinetag() {
  offlinetag_ = 0;
  clear_has_offlinetag();
}
inline ::google::protobuf::int32 ProDDZGameSendMahs::offlinetag() const {
  return offlinetag_;
}
inline void ProDDZGameSendMahs::set_offlinetag(::google::protobuf::int32 value) {
  set_has_offlinetag();
  offlinetag_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameKingData

// optional int32 seat = 2;
inline bool ProDDZGameKingData::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameKingData::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameKingData::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameKingData::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameKingData::seat() const {
  return seat_;
}
inline void ProDDZGameKingData::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 mahs = 3;
inline int ProDDZGameKingData::mahs_size() const {
  return mahs_.size();
}
inline void ProDDZGameKingData::clear_mahs() {
  mahs_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameKingData::mahs(int index) const {
  return mahs_.Get(index);
}
inline void ProDDZGameKingData::set_mahs(int index, ::google::protobuf::int32 value) {
  mahs_.Set(index, value);
}
inline void ProDDZGameKingData::add_mahs(::google::protobuf::int32 value) {
  mahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameKingData::mahs() const {
  return mahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameKingData::mutable_mahs() {
  return &mahs_;
}

// repeated int32 downKingScore = 4;
inline int ProDDZGameKingData::downkingscore_size() const {
  return downkingscore_.size();
}
inline void ProDDZGameKingData::clear_downkingscore() {
  downkingscore_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameKingData::downkingscore(int index) const {
  return downkingscore_.Get(index);
}
inline void ProDDZGameKingData::set_downkingscore(int index, ::google::protobuf::int32 value) {
  downkingscore_.Set(index, value);
}
inline void ProDDZGameKingData::add_downkingscore(::google::protobuf::int32 value) {
  downkingscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameKingData::downkingscore() const {
  return downkingscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameKingData::mutable_downkingscore() {
  return &downkingscore_;
}

// repeated int32 kingcount = 5;
inline int ProDDZGameKingData::kingcount_size() const {
  return kingcount_.size();
}
inline void ProDDZGameKingData::clear_kingcount() {
  kingcount_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameKingData::kingcount(int index) const {
  return kingcount_.Get(index);
}
inline void ProDDZGameKingData::set_kingcount(int index, ::google::protobuf::int32 value) {
  kingcount_.Set(index, value);
}
inline void ProDDZGameKingData::add_kingcount(::google::protobuf::int32 value) {
  kingcount_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameKingData::kingcount() const {
  return kingcount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameKingData::mutable_kingcount() {
  return &kingcount_;
}

// repeated int32 viceking = 6;
inline int ProDDZGameKingData::viceking_size() const {
  return viceking_.size();
}
inline void ProDDZGameKingData::clear_viceking() {
  viceking_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameKingData::viceking(int index) const {
  return viceking_.Get(index);
}
inline void ProDDZGameKingData::set_viceking(int index, ::google::protobuf::int32 value) {
  viceking_.Set(index, value);
}
inline void ProDDZGameKingData::add_viceking(::google::protobuf::int32 value) {
  viceking_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameKingData::viceking() const {
  return viceking_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameKingData::mutable_viceking() {
  return &viceking_;
}

// optional .DDZSEND_TYPE notify_type = 7 [default = DDZ_NORMAL_SEND];
inline bool ProDDZGameKingData::has_notify_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProDDZGameKingData::set_has_notify_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProDDZGameKingData::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProDDZGameKingData::clear_notify_type() {
  notify_type_ = 1;
  clear_has_notify_type();
}
inline ::DDZSEND_TYPE ProDDZGameKingData::notify_type() const {
  return static_cast< ::DDZSEND_TYPE >(notify_type_);
}
inline void ProDDZGameKingData::set_notify_type(::DDZSEND_TYPE value) {
  assert(::DDZSEND_TYPE_IsValid(value));
  set_has_notify_type();
  notify_type_ = value;
}

// optional .DDZKIGN_TYPE king_type = 8 [default = DDZ_KING_UP];
inline bool ProDDZGameKingData::has_king_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProDDZGameKingData::set_has_king_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProDDZGameKingData::clear_has_king_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProDDZGameKingData::clear_king_type() {
  king_type_ = 1;
  clear_has_king_type();
}
inline ::DDZKIGN_TYPE ProDDZGameKingData::king_type() const {
  return static_cast< ::DDZKIGN_TYPE >(king_type_);
}
inline void ProDDZGameKingData::set_king_type(::DDZKIGN_TYPE value) {
  assert(::DDZKIGN_TYPE_IsValid(value));
  set_has_king_type();
  king_type_ = value;
}

// repeated int32 cbChongGuang = 9;
inline int ProDDZGameKingData::cbchongguang_size() const {
  return cbchongguang_.size();
}
inline void ProDDZGameKingData::clear_cbchongguang() {
  cbchongguang_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameKingData::cbchongguang(int index) const {
  return cbchongguang_.Get(index);
}
inline void ProDDZGameKingData::set_cbchongguang(int index, ::google::protobuf::int32 value) {
  cbchongguang_.Set(index, value);
}
inline void ProDDZGameKingData::add_cbchongguang(::google::protobuf::int32 value) {
  cbchongguang_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameKingData::cbchongguang() const {
  return cbchongguang_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameKingData::mutable_cbchongguang() {
  return &cbchongguang_;
}

// repeated int32 cbBaWangKing = 10;
inline int ProDDZGameKingData::cbbawangking_size() const {
  return cbbawangking_.size();
}
inline void ProDDZGameKingData::clear_cbbawangking() {
  cbbawangking_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameKingData::cbbawangking(int index) const {
  return cbbawangking_.Get(index);
}
inline void ProDDZGameKingData::set_cbbawangking(int index, ::google::protobuf::int32 value) {
  cbbawangking_.Set(index, value);
}
inline void ProDDZGameKingData::add_cbbawangking(::google::protobuf::int32 value) {
  cbbawangking_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameKingData::cbbawangking() const {
  return cbbawangking_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameKingData::mutable_cbbawangking() {
  return &cbbawangking_;
}

// -------------------------------------------------------------------

// ProDDZGameOutMahsResponse

// optional int32 seat = 2;
inline bool ProDDZGameOutMahsResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameOutMahsResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameOutMahsResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameOutMahsResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameOutMahsResponse::seat() const {
  return seat_;
}
inline void ProDDZGameOutMahsResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 outMahs = 3;
inline int ProDDZGameOutMahsResponse::outmahs_size() const {
  return outmahs_.size();
}
inline void ProDDZGameOutMahsResponse::clear_outmahs() {
  outmahs_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameOutMahsResponse::outmahs(int index) const {
  return outmahs_.Get(index);
}
inline void ProDDZGameOutMahsResponse::set_outmahs(int index, ::google::protobuf::int32 value) {
  outmahs_.Set(index, value);
}
inline void ProDDZGameOutMahsResponse::add_outmahs(::google::protobuf::int32 value) {
  outmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameOutMahsResponse::outmahs() const {
  return outmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameOutMahsResponse::mutable_outmahs() {
  return &outmahs_;
}

// repeated int32 handmahs = 4;
inline int ProDDZGameOutMahsResponse::handmahs_size() const {
  return handmahs_.size();
}
inline void ProDDZGameOutMahsResponse::clear_handmahs() {
  handmahs_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameOutMahsResponse::handmahs(int index) const {
  return handmahs_.Get(index);
}
inline void ProDDZGameOutMahsResponse::set_handmahs(int index, ::google::protobuf::int32 value) {
  handmahs_.Set(index, value);
}
inline void ProDDZGameOutMahsResponse::add_handmahs(::google::protobuf::int32 value) {
  handmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameOutMahsResponse::handmahs() const {
  return handmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameOutMahsResponse::mutable_handmahs() {
  return &handmahs_;
}

// optional int32 cardCount = 5;
inline bool ProDDZGameOutMahsResponse::has_cardcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProDDZGameOutMahsResponse::set_has_cardcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProDDZGameOutMahsResponse::clear_has_cardcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProDDZGameOutMahsResponse::clear_cardcount() {
  cardcount_ = 0;
  clear_has_cardcount();
}
inline ::google::protobuf::int32 ProDDZGameOutMahsResponse::cardcount() const {
  return cardcount_;
}
inline void ProDDZGameOutMahsResponse::set_cardcount(::google::protobuf::int32 value) {
  set_has_cardcount();
  cardcount_ = value;
}

// optional int32 cardType = 6;
inline bool ProDDZGameOutMahsResponse::has_cardtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProDDZGameOutMahsResponse::set_has_cardtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProDDZGameOutMahsResponse::clear_has_cardtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProDDZGameOutMahsResponse::clear_cardtype() {
  cardtype_ = 0;
  clear_has_cardtype();
}
inline ::google::protobuf::int32 ProDDZGameOutMahsResponse::cardtype() const {
  return cardtype_;
}
inline void ProDDZGameOutMahsResponse::set_cardtype(::google::protobuf::int32 value) {
  set_has_cardtype();
  cardtype_ = value;
}

// repeated int32 noChangeMahs = 7;
inline int ProDDZGameOutMahsResponse::nochangemahs_size() const {
  return nochangemahs_.size();
}
inline void ProDDZGameOutMahsResponse::clear_nochangemahs() {
  nochangemahs_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameOutMahsResponse::nochangemahs(int index) const {
  return nochangemahs_.Get(index);
}
inline void ProDDZGameOutMahsResponse::set_nochangemahs(int index, ::google::protobuf::int32 value) {
  nochangemahs_.Set(index, value);
}
inline void ProDDZGameOutMahsResponse::add_nochangemahs(::google::protobuf::int32 value) {
  nochangemahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameOutMahsResponse::nochangemahs() const {
  return nochangemahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameOutMahsResponse::mutable_nochangemahs() {
  return &nochangemahs_;
}

// -------------------------------------------------------------------

// ProDDZGameTimerPower

// optional int32 seat = 2;
inline bool ProDDZGameTimerPower::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameTimerPower::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameTimerPower::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameTimerPower::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameTimerPower::seat() const {
  return seat_;
}
inline void ProDDZGameTimerPower::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 time = 3;
inline bool ProDDZGameTimerPower::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameTimerPower::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameTimerPower::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameTimerPower::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProDDZGameTimerPower::time() const {
  return time_;
}
inline void ProDDZGameTimerPower::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 outcardTime = 4;
inline bool ProDDZGameTimerPower::has_outcardtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameTimerPower::set_has_outcardtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameTimerPower::clear_has_outcardtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameTimerPower::clear_outcardtime() {
  outcardtime_ = 0;
  clear_has_outcardtime();
}
inline ::google::protobuf::int32 ProDDZGameTimerPower::outcardtime() const {
  return outcardtime_;
}
inline void ProDDZGameTimerPower::set_outcardtime(::google::protobuf::int32 value) {
  set_has_outcardtime();
  outcardtime_ = value;
}

// optional int32 lastCardType = 5;
inline bool ProDDZGameTimerPower::has_lastcardtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProDDZGameTimerPower::set_has_lastcardtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProDDZGameTimerPower::clear_has_lastcardtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProDDZGameTimerPower::clear_lastcardtype() {
  lastcardtype_ = 0;
  clear_has_lastcardtype();
}
inline ::google::protobuf::int32 ProDDZGameTimerPower::lastcardtype() const {
  return lastcardtype_;
}
inline void ProDDZGameTimerPower::set_lastcardtype(::google::protobuf::int32 value) {
  set_has_lastcardtype();
  lastcardtype_ = value;
}

// optional int32 lastPoint = 6;
inline bool ProDDZGameTimerPower::has_lastpoint() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProDDZGameTimerPower::set_has_lastpoint() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProDDZGameTimerPower::clear_has_lastpoint() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProDDZGameTimerPower::clear_lastpoint() {
  lastpoint_ = 0;
  clear_has_lastpoint();
}
inline ::google::protobuf::int32 ProDDZGameTimerPower::lastpoint() const {
  return lastpoint_;
}
inline void ProDDZGameTimerPower::set_lastpoint(::google::protobuf::int32 value) {
  set_has_lastpoint();
  lastpoint_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameOperateNotify

// optional int32 resumeSeat = 2;
inline bool ProDDZGameOperateNotify::has_resumeseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameOperateNotify::set_has_resumeseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameOperateNotify::clear_has_resumeseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameOperateNotify::clear_resumeseat() {
  resumeseat_ = 0;
  clear_has_resumeseat();
}
inline ::google::protobuf::int32 ProDDZGameOperateNotify::resumeseat() const {
  return resumeseat_;
}
inline void ProDDZGameOperateNotify::set_resumeseat(::google::protobuf::int32 value) {
  set_has_resumeseat();
  resumeseat_ = value;
}

// optional int32 ActionMask = 3;
inline bool ProDDZGameOperateNotify::has_actionmask() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameOperateNotify::set_has_actionmask() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameOperateNotify::clear_has_actionmask() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameOperateNotify::clear_actionmask() {
  actionmask_ = 0;
  clear_has_actionmask();
}
inline ::google::protobuf::int32 ProDDZGameOperateNotify::actionmask() const {
  return actionmask_;
}
inline void ProDDZGameOperateNotify::set_actionmask(::google::protobuf::int32 value) {
  set_has_actionmask();
  actionmask_ = value;
}

// optional int32 ActionCard = 4;
inline bool ProDDZGameOperateNotify::has_actioncard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameOperateNotify::set_has_actioncard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameOperateNotify::clear_has_actioncard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameOperateNotify::clear_actioncard() {
  actioncard_ = 0;
  clear_has_actioncard();
}
inline ::google::protobuf::int32 ProDDZGameOperateNotify::actioncard() const {
  return actioncard_;
}
inline void ProDDZGameOperateNotify::set_actioncard(::google::protobuf::int32 value) {
  set_has_actioncard();
  actioncard_ = value;
}

// optional int32 time = 5;
inline bool ProDDZGameOperateNotify::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProDDZGameOperateNotify::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProDDZGameOperateNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProDDZGameOperateNotify::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProDDZGameOperateNotify::time() const {
  return time_;
}
inline void ProDDZGameOperateNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 operateseat = 6;
inline bool ProDDZGameOperateNotify::has_operateseat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProDDZGameOperateNotify::set_has_operateseat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProDDZGameOperateNotify::clear_has_operateseat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProDDZGameOperateNotify::clear_operateseat() {
  operateseat_ = 0;
  clear_has_operateseat();
}
inline ::google::protobuf::int32 ProDDZGameOperateNotify::operateseat() const {
  return operateseat_;
}
inline void ProDDZGameOperateNotify::set_operateseat(::google::protobuf::int32 value) {
  set_has_operateseat();
  operateseat_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameOperateResult

// optional int32 wOperateUser = 2;
inline bool ProDDZGameOperateResult::has_woperateuser() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameOperateResult::set_has_woperateuser() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameOperateResult::clear_has_woperateuser() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameOperateResult::clear_woperateuser() {
  woperateuser_ = 0;
  clear_has_woperateuser();
}
inline ::google::protobuf::int32 ProDDZGameOperateResult::woperateuser() const {
  return woperateuser_;
}
inline void ProDDZGameOperateResult::set_woperateuser(::google::protobuf::int32 value) {
  set_has_woperateuser();
  woperateuser_ = value;
}

// optional int32 wProvideUser = 3;
inline bool ProDDZGameOperateResult::has_wprovideuser() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameOperateResult::set_has_wprovideuser() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameOperateResult::clear_has_wprovideuser() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameOperateResult::clear_wprovideuser() {
  wprovideuser_ = 0;
  clear_has_wprovideuser();
}
inline ::google::protobuf::int32 ProDDZGameOperateResult::wprovideuser() const {
  return wprovideuser_;
}
inline void ProDDZGameOperateResult::set_wprovideuser(::google::protobuf::int32 value) {
  set_has_wprovideuser();
  wprovideuser_ = value;
}

// optional int32 wOperateCode = 4;
inline bool ProDDZGameOperateResult::has_woperatecode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameOperateResult::set_has_woperatecode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameOperateResult::clear_has_woperatecode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameOperateResult::clear_woperatecode() {
  woperatecode_ = 0;
  clear_has_woperatecode();
}
inline ::google::protobuf::int32 ProDDZGameOperateResult::woperatecode() const {
  return woperatecode_;
}
inline void ProDDZGameOperateResult::set_woperatecode(::google::protobuf::int32 value) {
  set_has_woperatecode();
  woperatecode_ = value;
}

// optional int32 cbOperateCard = 5;
inline bool ProDDZGameOperateResult::has_cboperatecard() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProDDZGameOperateResult::set_has_cboperatecard() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProDDZGameOperateResult::clear_has_cboperatecard() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProDDZGameOperateResult::clear_cboperatecard() {
  cboperatecard_ = 0;
  clear_has_cboperatecard();
}
inline ::google::protobuf::int32 ProDDZGameOperateResult::cboperatecard() const {
  return cboperatecard_;
}
inline void ProDDZGameOperateResult::set_cboperatecard(::google::protobuf::int32 value) {
  set_has_cboperatecard();
  cboperatecard_ = value;
}

// repeated int32 handmahs = 6;
inline int ProDDZGameOperateResult::handmahs_size() const {
  return handmahs_.size();
}
inline void ProDDZGameOperateResult::clear_handmahs() {
  handmahs_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameOperateResult::handmahs(int index) const {
  return handmahs_.Get(index);
}
inline void ProDDZGameOperateResult::set_handmahs(int index, ::google::protobuf::int32 value) {
  handmahs_.Set(index, value);
}
inline void ProDDZGameOperateResult::add_handmahs(::google::protobuf::int32 value) {
  handmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameOperateResult::handmahs() const {
  return handmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameOperateResult::mutable_handmahs() {
  return &handmahs_;
}

// optional int32 handcount = 7;
inline bool ProDDZGameOperateResult::has_handcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProDDZGameOperateResult::set_has_handcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProDDZGameOperateResult::clear_has_handcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProDDZGameOperateResult::clear_handcount() {
  handcount_ = 0;
  clear_has_handcount();
}
inline ::google::protobuf::int32 ProDDZGameOperateResult::handcount() const {
  return handcount_;
}
inline void ProDDZGameOperateResult::set_handcount(::google::protobuf::int32 value) {
  set_has_handcount();
  handcount_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameOperateRequest

// optional int32 seat = 2;
inline bool ProDDZGameOperateRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameOperateRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameOperateRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameOperateRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameOperateRequest::seat() const {
  return seat_;
}
inline void ProDDZGameOperateRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 wOperateCode = 3;
inline bool ProDDZGameOperateRequest::has_woperatecode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameOperateRequest::set_has_woperatecode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameOperateRequest::clear_has_woperatecode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameOperateRequest::clear_woperatecode() {
  woperatecode_ = 0;
  clear_has_woperatecode();
}
inline ::google::protobuf::int32 ProDDZGameOperateRequest::woperatecode() const {
  return woperatecode_;
}
inline void ProDDZGameOperateRequest::set_woperatecode(::google::protobuf::int32 value) {
  set_has_woperatecode();
  woperatecode_ = value;
}

// optional int32 cbOperateCard = 4;
inline bool ProDDZGameOperateRequest::has_cboperatecard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameOperateRequest::set_has_cboperatecard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameOperateRequest::clear_has_cboperatecard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameOperateRequest::clear_cboperatecard() {
  cboperatecard_ = 0;
  clear_has_cboperatecard();
}
inline ::google::protobuf::int32 ProDDZGameOperateRequest::cboperatecard() const {
  return cboperatecard_;
}
inline void ProDDZGameOperateRequest::set_cboperatecard(::google::protobuf::int32 value) {
  set_has_cboperatecard();
  cboperatecard_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameTrust

// optional int32 seat = 2;
inline bool ProDDZGameTrust::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameTrust::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameTrust::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameTrust::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameTrust::seat() const {
  return seat_;
}
inline void ProDDZGameTrust::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool isTrust = 3;
inline bool ProDDZGameTrust::has_istrust() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameTrust::set_has_istrust() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameTrust::clear_has_istrust() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameTrust::clear_istrust() {
  istrust_ = false;
  clear_has_istrust();
}
inline bool ProDDZGameTrust::istrust() const {
  return istrust_;
}
inline void ProDDZGameTrust::set_istrust(bool value) {
  set_has_istrust();
  istrust_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameOutMahRequest

// optional int32 seat = 2;
inline bool ProDDZGameOutMahRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameOutMahRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameOutMahRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameOutMahRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameOutMahRequest::seat() const {
  return seat_;
}
inline void ProDDZGameOutMahRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 outMahs = 3;
inline int ProDDZGameOutMahRequest::outmahs_size() const {
  return outmahs_.size();
}
inline void ProDDZGameOutMahRequest::clear_outmahs() {
  outmahs_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameOutMahRequest::outmahs(int index) const {
  return outmahs_.Get(index);
}
inline void ProDDZGameOutMahRequest::set_outmahs(int index, ::google::protobuf::int32 value) {
  outmahs_.Set(index, value);
}
inline void ProDDZGameOutMahRequest::add_outmahs(::google::protobuf::int32 value) {
  outmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameOutMahRequest::outmahs() const {
  return outmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameOutMahRequest::mutable_outmahs() {
  return &outmahs_;
}

// repeated int32 noChangeMahs = 4;
inline int ProDDZGameOutMahRequest::nochangemahs_size() const {
  return nochangemahs_.size();
}
inline void ProDDZGameOutMahRequest::clear_nochangemahs() {
  nochangemahs_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameOutMahRequest::nochangemahs(int index) const {
  return nochangemahs_.Get(index);
}
inline void ProDDZGameOutMahRequest::set_nochangemahs(int index, ::google::protobuf::int32 value) {
  nochangemahs_.Set(index, value);
}
inline void ProDDZGameOutMahRequest::add_nochangemahs(::google::protobuf::int32 value) {
  nochangemahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameOutMahRequest::nochangemahs() const {
  return nochangemahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameOutMahRequest::mutable_nochangemahs() {
  return &nochangemahs_;
}

// -------------------------------------------------------------------

// ProDDZGameCatchCard

// optional int32 seat = 2;
inline bool ProDDZGameCatchCard::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameCatchCard::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameCatchCard::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameCatchCard::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameCatchCard::seat() const {
  return seat_;
}
inline void ProDDZGameCatchCard::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 cbCardData = 3;
inline bool ProDDZGameCatchCard::has_cbcarddata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameCatchCard::set_has_cbcarddata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameCatchCard::clear_has_cbcarddata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameCatchCard::clear_cbcarddata() {
  cbcarddata_ = 0;
  clear_has_cbcarddata();
}
inline ::google::protobuf::int32 ProDDZGameCatchCard::cbcarddata() const {
  return cbcarddata_;
}
inline void ProDDZGameCatchCard::set_cbcarddata(::google::protobuf::int32 value) {
  set_has_cbcarddata();
  cbcarddata_ = value;
}

// optional int32 wActionMask = 4;
inline bool ProDDZGameCatchCard::has_wactionmask() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameCatchCard::set_has_wactionmask() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameCatchCard::clear_has_wactionmask() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameCatchCard::clear_wactionmask() {
  wactionmask_ = 0;
  clear_has_wactionmask();
}
inline ::google::protobuf::int32 ProDDZGameCatchCard::wactionmask() const {
  return wactionmask_;
}
inline void ProDDZGameCatchCard::set_wactionmask(::google::protobuf::int32 value) {
  set_has_wactionmask();
  wactionmask_ = value;
}

// optional bool cbIsNotGang = 5;
inline bool ProDDZGameCatchCard::has_cbisnotgang() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProDDZGameCatchCard::set_has_cbisnotgang() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProDDZGameCatchCard::clear_has_cbisnotgang() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProDDZGameCatchCard::clear_cbisnotgang() {
  cbisnotgang_ = false;
  clear_has_cbisnotgang();
}
inline bool ProDDZGameCatchCard::cbisnotgang() const {
  return cbisnotgang_;
}
inline void ProDDZGameCatchCard::set_cbisnotgang(bool value) {
  set_has_cbisnotgang();
  cbisnotgang_ = value;
}

// optional int32 cbLeftCount = 6;
inline bool ProDDZGameCatchCard::has_cbleftcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProDDZGameCatchCard::set_has_cbleftcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProDDZGameCatchCard::clear_has_cbleftcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProDDZGameCatchCard::clear_cbleftcount() {
  cbleftcount_ = 0;
  clear_has_cbleftcount();
}
inline ::google::protobuf::int32 ProDDZGameCatchCard::cbleftcount() const {
  return cbleftcount_;
}
inline void ProDDZGameCatchCard::set_cbleftcount(::google::protobuf::int32 value) {
  set_has_cbleftcount();
  cbleftcount_ = value;
}

// -------------------------------------------------------------------

// DDZMahList

// repeated int32 Mahs = 1;
inline int DDZMahList::mahs_size() const {
  return mahs_.size();
}
inline void DDZMahList::clear_mahs() {
  mahs_.Clear();
}
inline ::google::protobuf::int32 DDZMahList::mahs(int index) const {
  return mahs_.Get(index);
}
inline void DDZMahList::set_mahs(int index, ::google::protobuf::int32 value) {
  mahs_.Set(index, value);
}
inline void DDZMahList::add_mahs(::google::protobuf::int32 value) {
  mahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DDZMahList::mahs() const {
  return mahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DDZMahList::mutable_mahs() {
  return &mahs_;
}

// -------------------------------------------------------------------

// DDZScoreList

// repeated int32 roundScore = 1;
inline int DDZScoreList::roundscore_size() const {
  return roundscore_.size();
}
inline void DDZScoreList::clear_roundscore() {
  roundscore_.Clear();
}
inline ::google::protobuf::int32 DDZScoreList::roundscore(int index) const {
  return roundscore_.Get(index);
}
inline void DDZScoreList::set_roundscore(int index, ::google::protobuf::int32 value) {
  roundscore_.Set(index, value);
}
inline void DDZScoreList::add_roundscore(::google::protobuf::int32 value) {
  roundscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DDZScoreList::roundscore() const {
  return roundscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DDZScoreList::mutable_roundscore() {
  return &roundscore_;
}

// -------------------------------------------------------------------

// DDZAwardList

// optional int32 seat = 1;
inline bool DDZAwardList::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DDZAwardList::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DDZAwardList::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DDZAwardList::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 DDZAwardList::seat() const {
  return seat_;
}
inline void DDZAwardList::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 CardsData = 2;
inline int DDZAwardList::cardsdata_size() const {
  return cardsdata_.size();
}
inline void DDZAwardList::clear_cardsdata() {
  cardsdata_.Clear();
}
inline ::google::protobuf::int32 DDZAwardList::cardsdata(int index) const {
  return cardsdata_.Get(index);
}
inline void DDZAwardList::set_cardsdata(int index, ::google::protobuf::int32 value) {
  cardsdata_.Set(index, value);
}
inline void DDZAwardList::add_cardsdata(::google::protobuf::int32 value) {
  cardsdata_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DDZAwardList::cardsdata() const {
  return cardsdata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DDZAwardList::mutable_cardsdata() {
  return &cardsdata_;
}

// optional int32 awardScore = 3;
inline bool DDZAwardList::has_awardscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DDZAwardList::set_has_awardscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DDZAwardList::clear_has_awardscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DDZAwardList::clear_awardscore() {
  awardscore_ = 0;
  clear_has_awardscore();
}
inline ::google::protobuf::int32 DDZAwardList::awardscore() const {
  return awardscore_;
}
inline void DDZAwardList::set_awardscore(::google::protobuf::int32 value) {
  set_has_awardscore();
  awardscore_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameEnd

// optional int32 lGameTax = 2;
inline bool ProDDZGameEnd::has_lgametax() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameEnd::set_has_lgametax() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameEnd::clear_has_lgametax() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameEnd::clear_lgametax() {
  lgametax_ = 0;
  clear_has_lgametax();
}
inline ::google::protobuf::int32 ProDDZGameEnd::lgametax() const {
  return lgametax_;
}
inline void ProDDZGameEnd::set_lgametax(::google::protobuf::int32 value) {
  set_has_lgametax();
  lgametax_ = value;
}

// repeated int32 cbChongGuang = 3;
inline int ProDDZGameEnd::cbchongguang_size() const {
  return cbchongguang_.size();
}
inline void ProDDZGameEnd::clear_cbchongguang() {
  cbchongguang_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameEnd::cbchongguang(int index) const {
  return cbchongguang_.Get(index);
}
inline void ProDDZGameEnd::set_cbchongguang(int index, ::google::protobuf::int32 value) {
  cbchongguang_.Set(index, value);
}
inline void ProDDZGameEnd::add_cbchongguang(::google::protobuf::int32 value) {
  cbchongguang_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameEnd::cbchongguang() const {
  return cbchongguang_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameEnd::mutable_cbchongguang() {
  return &cbchongguang_;
}

// repeated int32 cbBaWangKing = 4;
inline int ProDDZGameEnd::cbbawangking_size() const {
  return cbbawangking_.size();
}
inline void ProDDZGameEnd::clear_cbbawangking() {
  cbbawangking_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameEnd::cbbawangking(int index) const {
  return cbbawangking_.Get(index);
}
inline void ProDDZGameEnd::set_cbbawangking(int index, ::google::protobuf::int32 value) {
  cbbawangking_.Set(index, value);
}
inline void ProDDZGameEnd::add_cbbawangking(::google::protobuf::int32 value) {
  cbbawangking_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameEnd::cbbawangking() const {
  return cbbawangking_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameEnd::mutable_cbbawangking() {
  return &cbbawangking_;
}

// optional int32 wProvideUser = 5;
inline bool ProDDZGameEnd::has_wprovideuser() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProDDZGameEnd::set_has_wprovideuser() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProDDZGameEnd::clear_has_wprovideuser() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProDDZGameEnd::clear_wprovideuser() {
  wprovideuser_ = 0;
  clear_has_wprovideuser();
}
inline ::google::protobuf::int32 ProDDZGameEnd::wprovideuser() const {
  return wprovideuser_;
}
inline void ProDDZGameEnd::set_wprovideuser(::google::protobuf::int32 value) {
  set_has_wprovideuser();
  wprovideuser_ = value;
}

// optional int32 cbChiHuCard = 6;
inline bool ProDDZGameEnd::has_cbchihucard() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProDDZGameEnd::set_has_cbchihucard() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProDDZGameEnd::clear_has_cbchihucard() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProDDZGameEnd::clear_cbchihucard() {
  cbchihucard_ = 0;
  clear_has_cbchihucard();
}
inline ::google::protobuf::int32 ProDDZGameEnd::cbchihucard() const {
  return cbchihucard_;
}
inline void ProDDZGameEnd::set_cbchihucard(::google::protobuf::int32 value) {
  set_has_cbchihucard();
  cbchihucard_ = value;
}

// repeated int32 dwChiHuKind = 7;
inline int ProDDZGameEnd::dwchihukind_size() const {
  return dwchihukind_.size();
}
inline void ProDDZGameEnd::clear_dwchihukind() {
  dwchihukind_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameEnd::dwchihukind(int index) const {
  return dwchihukind_.Get(index);
}
inline void ProDDZGameEnd::set_dwchihukind(int index, ::google::protobuf::int32 value) {
  dwchihukind_.Set(index, value);
}
inline void ProDDZGameEnd::add_dwchihukind(::google::protobuf::int32 value) {
  dwchihukind_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameEnd::dwchihukind() const {
  return dwchihukind_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameEnd::mutable_dwchihukind() {
  return &dwchihukind_;
}

// repeated int32 dwChiHuRight = 8;
inline int ProDDZGameEnd::dwchihuright_size() const {
  return dwchihuright_.size();
}
inline void ProDDZGameEnd::clear_dwchihuright() {
  dwchihuright_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameEnd::dwchihuright(int index) const {
  return dwchihuright_.Get(index);
}
inline void ProDDZGameEnd::set_dwchihuright(int index, ::google::protobuf::int32 value) {
  dwchihuright_.Set(index, value);
}
inline void ProDDZGameEnd::add_dwchihuright(::google::protobuf::int32 value) {
  dwchihuright_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameEnd::dwchihuright() const {
  return dwchihuright_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameEnd::mutable_dwchihuright() {
  return &dwchihuright_;
}

// repeated int32 lTotaslGameScore = 9;
inline int ProDDZGameEnd::ltotaslgamescore_size() const {
  return ltotaslgamescore_.size();
}
inline void ProDDZGameEnd::clear_ltotaslgamescore() {
  ltotaslgamescore_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameEnd::ltotaslgamescore(int index) const {
  return ltotaslgamescore_.Get(index);
}
inline void ProDDZGameEnd::set_ltotaslgamescore(int index, ::google::protobuf::int32 value) {
  ltotaslgamescore_.Set(index, value);
}
inline void ProDDZGameEnd::add_ltotaslgamescore(::google::protobuf::int32 value) {
  ltotaslgamescore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameEnd::ltotaslgamescore() const {
  return ltotaslgamescore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameEnd::mutable_ltotaslgamescore() {
  return &ltotaslgamescore_;
}

// repeated int32 lCurrentGameScore = 10;
inline int ProDDZGameEnd::lcurrentgamescore_size() const {
  return lcurrentgamescore_.size();
}
inline void ProDDZGameEnd::clear_lcurrentgamescore() {
  lcurrentgamescore_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameEnd::lcurrentgamescore(int index) const {
  return lcurrentgamescore_.Get(index);
}
inline void ProDDZGameEnd::set_lcurrentgamescore(int index, ::google::protobuf::int32 value) {
  lcurrentgamescore_.Set(index, value);
}
inline void ProDDZGameEnd::add_lcurrentgamescore(::google::protobuf::int32 value) {
  lcurrentgamescore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameEnd::lcurrentgamescore() const {
  return lcurrentgamescore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameEnd::mutable_lcurrentgamescore() {
  return &lcurrentgamescore_;
}

// repeated int32 lCurrentPointScore = 11;
inline int ProDDZGameEnd::lcurrentpointscore_size() const {
  return lcurrentpointscore_.size();
}
inline void ProDDZGameEnd::clear_lcurrentpointscore() {
  lcurrentpointscore_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameEnd::lcurrentpointscore(int index) const {
  return lcurrentpointscore_.Get(index);
}
inline void ProDDZGameEnd::set_lcurrentpointscore(int index, ::google::protobuf::int32 value) {
  lcurrentpointscore_.Set(index, value);
}
inline void ProDDZGameEnd::add_lcurrentpointscore(::google::protobuf::int32 value) {
  lcurrentpointscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameEnd::lcurrentpointscore() const {
  return lcurrentpointscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameEnd::mutable_lcurrentpointscore() {
  return &lcurrentpointscore_;
}

// repeated int32 lAttachScore = 12;
inline int ProDDZGameEnd::lattachscore_size() const {
  return lattachscore_.size();
}
inline void ProDDZGameEnd::clear_lattachscore() {
  lattachscore_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameEnd::lattachscore(int index) const {
  return lattachscore_.Get(index);
}
inline void ProDDZGameEnd::set_lattachscore(int index, ::google::protobuf::int32 value) {
  lattachscore_.Set(index, value);
}
inline void ProDDZGameEnd::add_lattachscore(::google::protobuf::int32 value) {
  lattachscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameEnd::lattachscore() const {
  return lattachscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameEnd::mutable_lattachscore() {
  return &lattachscore_;
}

// repeated .DDZMahList cbHandCardData = 13;
inline int ProDDZGameEnd::cbhandcarddata_size() const {
  return cbhandcarddata_.size();
}
inline void ProDDZGameEnd::clear_cbhandcarddata() {
  cbhandcarddata_.Clear();
}
inline const ::DDZMahList& ProDDZGameEnd::cbhandcarddata(int index) const {
  return cbhandcarddata_.Get(index);
}
inline ::DDZMahList* ProDDZGameEnd::mutable_cbhandcarddata(int index) {
  return cbhandcarddata_.Mutable(index);
}
inline ::DDZMahList* ProDDZGameEnd::add_cbhandcarddata() {
  return cbhandcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DDZMahList >&
ProDDZGameEnd::cbhandcarddata() const {
  return cbhandcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::DDZMahList >*
ProDDZGameEnd::mutable_cbhandcarddata() {
  return &cbhandcarddata_;
}

// repeated .DDZAwardList cbAwardCardData = 14;
inline int ProDDZGameEnd::cbawardcarddata_size() const {
  return cbawardcarddata_.size();
}
inline void ProDDZGameEnd::clear_cbawardcarddata() {
  cbawardcarddata_.Clear();
}
inline const ::DDZAwardList& ProDDZGameEnd::cbawardcarddata(int index) const {
  return cbawardcarddata_.Get(index);
}
inline ::DDZAwardList* ProDDZGameEnd::mutable_cbawardcarddata(int index) {
  return cbawardcarddata_.Mutable(index);
}
inline ::DDZAwardList* ProDDZGameEnd::add_cbawardcarddata() {
  return cbawardcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DDZAwardList >&
ProDDZGameEnd::cbawardcarddata() const {
  return cbawardcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::DDZAwardList >*
ProDDZGameEnd::mutable_cbawardcarddata() {
  return &cbawardcarddata_;
}

// repeated int32 lOnlyWinScore = 15;
inline int ProDDZGameEnd::lonlywinscore_size() const {
  return lonlywinscore_.size();
}
inline void ProDDZGameEnd::clear_lonlywinscore() {
  lonlywinscore_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameEnd::lonlywinscore(int index) const {
  return lonlywinscore_.Get(index);
}
inline void ProDDZGameEnd::set_lonlywinscore(int index, ::google::protobuf::int32 value) {
  lonlywinscore_.Set(index, value);
}
inline void ProDDZGameEnd::add_lonlywinscore(::google::protobuf::int32 value) {
  lonlywinscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameEnd::lonlywinscore() const {
  return lonlywinscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameEnd::mutable_lonlywinscore() {
  return &lonlywinscore_;
}

// optional bool bRoundEnd = 16;
inline bool ProDDZGameEnd::has_broundend() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ProDDZGameEnd::set_has_broundend() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ProDDZGameEnd::clear_has_broundend() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ProDDZGameEnd::clear_broundend() {
  broundend_ = false;
  clear_has_broundend();
}
inline bool ProDDZGameEnd::broundend() const {
  return broundend_;
}
inline void ProDDZGameEnd::set_broundend(bool value) {
  set_has_broundend();
  broundend_ = value;
}

// repeated int32 lHuiTouScore = 17;
inline int ProDDZGameEnd::lhuitouscore_size() const {
  return lhuitouscore_.size();
}
inline void ProDDZGameEnd::clear_lhuitouscore() {
  lhuitouscore_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameEnd::lhuitouscore(int index) const {
  return lhuitouscore_.Get(index);
}
inline void ProDDZGameEnd::set_lhuitouscore(int index, ::google::protobuf::int32 value) {
  lhuitouscore_.Set(index, value);
}
inline void ProDDZGameEnd::add_lhuitouscore(::google::protobuf::int32 value) {
  lhuitouscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameEnd::lhuitouscore() const {
  return lhuitouscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameEnd::mutable_lhuitouscore() {
  return &lhuitouscore_;
}

// optional bool bZhuangWin = 18;
inline bool ProDDZGameEnd::has_bzhuangwin() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ProDDZGameEnd::set_has_bzhuangwin() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ProDDZGameEnd::clear_has_bzhuangwin() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ProDDZGameEnd::clear_bzhuangwin() {
  bzhuangwin_ = false;
  clear_has_bzhuangwin();
}
inline bool ProDDZGameEnd::bzhuangwin() const {
  return bzhuangwin_;
}
inline void ProDDZGameEnd::set_bzhuangwin(bool value) {
  set_has_bzhuangwin();
  bzhuangwin_ = value;
}

// repeated int32 cbJiangMaCardData = 19;
inline int ProDDZGameEnd::cbjiangmacarddata_size() const {
  return cbjiangmacarddata_.size();
}
inline void ProDDZGameEnd::clear_cbjiangmacarddata() {
  cbjiangmacarddata_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameEnd::cbjiangmacarddata(int index) const {
  return cbjiangmacarddata_.Get(index);
}
inline void ProDDZGameEnd::set_cbjiangmacarddata(int index, ::google::protobuf::int32 value) {
  cbjiangmacarddata_.Set(index, value);
}
inline void ProDDZGameEnd::add_cbjiangmacarddata(::google::protobuf::int32 value) {
  cbjiangmacarddata_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameEnd::cbjiangmacarddata() const {
  return cbjiangmacarddata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameEnd::mutable_cbjiangmacarddata() {
  return &cbjiangmacarddata_;
}

// repeated .DDZScoreList detailedScores = 20;
inline int ProDDZGameEnd::detailedscores_size() const {
  return detailedscores_.size();
}
inline void ProDDZGameEnd::clear_detailedscores() {
  detailedscores_.Clear();
}
inline const ::DDZScoreList& ProDDZGameEnd::detailedscores(int index) const {
  return detailedscores_.Get(index);
}
inline ::DDZScoreList* ProDDZGameEnd::mutable_detailedscores(int index) {
  return detailedscores_.Mutable(index);
}
inline ::DDZScoreList* ProDDZGameEnd::add_detailedscores() {
  return detailedscores_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DDZScoreList >&
ProDDZGameEnd::detailedscores() const {
  return detailedscores_;
}
inline ::google::protobuf::RepeatedPtrField< ::DDZScoreList >*
ProDDZGameEnd::mutable_detailedscores() {
  return &detailedscores_;
}

// -------------------------------------------------------------------

// ProDDZGameQuickSoundRequest

// optional int32 desk_id = 2;
inline bool ProDDZGameQuickSoundRequest::has_desk_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameQuickSoundRequest::set_has_desk_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameQuickSoundRequest::clear_has_desk_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameQuickSoundRequest::clear_desk_id() {
  desk_id_ = 0;
  clear_has_desk_id();
}
inline ::google::protobuf::int32 ProDDZGameQuickSoundRequest::desk_id() const {
  return desk_id_;
}
inline void ProDDZGameQuickSoundRequest::set_desk_id(::google::protobuf::int32 value) {
  set_has_desk_id();
  desk_id_ = value;
}

// optional int32 seat_id = 3;
inline bool ProDDZGameQuickSoundRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameQuickSoundRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameQuickSoundRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameQuickSoundRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProDDZGameQuickSoundRequest::seat_id() const {
  return seat_id_;
}
inline void ProDDZGameQuickSoundRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional int32 sound_id = 4;
inline bool ProDDZGameQuickSoundRequest::has_sound_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameQuickSoundRequest::set_has_sound_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameQuickSoundRequest::clear_has_sound_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameQuickSoundRequest::clear_sound_id() {
  sound_id_ = 0;
  clear_has_sound_id();
}
inline ::google::protobuf::int32 ProDDZGameQuickSoundRequest::sound_id() const {
  return sound_id_;
}
inline void ProDDZGameQuickSoundRequest::set_sound_id(::google::protobuf::int32 value) {
  set_has_sound_id();
  sound_id_ = value;
}

// optional bytes text = 5;
inline bool ProDDZGameQuickSoundRequest::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProDDZGameQuickSoundRequest::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProDDZGameQuickSoundRequest::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProDDZGameQuickSoundRequest::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& ProDDZGameQuickSoundRequest::text() const {
  return *text_;
}
inline void ProDDZGameQuickSoundRequest::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProDDZGameQuickSoundRequest::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProDDZGameQuickSoundRequest::set_text(const void* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProDDZGameQuickSoundRequest::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* ProDDZGameQuickSoundRequest::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProDDZGameQuickSoundRequest::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProDDZGameQuickSoundResponse

// optional int32 desk_id = 2;
inline bool ProDDZGameQuickSoundResponse::has_desk_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameQuickSoundResponse::set_has_desk_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameQuickSoundResponse::clear_has_desk_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameQuickSoundResponse::clear_desk_id() {
  desk_id_ = 0;
  clear_has_desk_id();
}
inline ::google::protobuf::int32 ProDDZGameQuickSoundResponse::desk_id() const {
  return desk_id_;
}
inline void ProDDZGameQuickSoundResponse::set_desk_id(::google::protobuf::int32 value) {
  set_has_desk_id();
  desk_id_ = value;
}

// optional int32 seat_id = 3;
inline bool ProDDZGameQuickSoundResponse::has_seat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameQuickSoundResponse::set_has_seat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameQuickSoundResponse::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameQuickSoundResponse::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProDDZGameQuickSoundResponse::seat_id() const {
  return seat_id_;
}
inline void ProDDZGameQuickSoundResponse::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional int32 sound_id = 4;
inline bool ProDDZGameQuickSoundResponse::has_sound_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameQuickSoundResponse::set_has_sound_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameQuickSoundResponse::clear_has_sound_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameQuickSoundResponse::clear_sound_id() {
  sound_id_ = 0;
  clear_has_sound_id();
}
inline ::google::protobuf::int32 ProDDZGameQuickSoundResponse::sound_id() const {
  return sound_id_;
}
inline void ProDDZGameQuickSoundResponse::set_sound_id(::google::protobuf::int32 value) {
  set_has_sound_id();
  sound_id_ = value;
}

// optional bytes text = 5;
inline bool ProDDZGameQuickSoundResponse::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProDDZGameQuickSoundResponse::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProDDZGameQuickSoundResponse::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProDDZGameQuickSoundResponse::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& ProDDZGameQuickSoundResponse::text() const {
  return *text_;
}
inline void ProDDZGameQuickSoundResponse::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProDDZGameQuickSoundResponse::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProDDZGameQuickSoundResponse::set_text(const void* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProDDZGameQuickSoundResponse::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* ProDDZGameQuickSoundResponse::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProDDZGameQuickSoundResponse::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProDDZGameSendDiscardMahs

// optional int32 seat_id = 2;
inline bool ProDDZGameSendDiscardMahs::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameSendDiscardMahs::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameSendDiscardMahs::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameSendDiscardMahs::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProDDZGameSendDiscardMahs::seat_id() const {
  return seat_id_;
}
inline void ProDDZGameSendDiscardMahs::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// repeated .DDZMahList cbCardData = 3;
inline int ProDDZGameSendDiscardMahs::cbcarddata_size() const {
  return cbcarddata_.size();
}
inline void ProDDZGameSendDiscardMahs::clear_cbcarddata() {
  cbcarddata_.Clear();
}
inline const ::DDZMahList& ProDDZGameSendDiscardMahs::cbcarddata(int index) const {
  return cbcarddata_.Get(index);
}
inline ::DDZMahList* ProDDZGameSendDiscardMahs::mutable_cbcarddata(int index) {
  return cbcarddata_.Mutable(index);
}
inline ::DDZMahList* ProDDZGameSendDiscardMahs::add_cbcarddata() {
  return cbcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DDZMahList >&
ProDDZGameSendDiscardMahs::cbcarddata() const {
  return cbcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::DDZMahList >*
ProDDZGameSendDiscardMahs::mutable_cbcarddata() {
  return &cbcarddata_;
}

// optional int32 deskCount = 4;
inline bool ProDDZGameSendDiscardMahs::has_deskcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameSendDiscardMahs::set_has_deskcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameSendDiscardMahs::clear_has_deskcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameSendDiscardMahs::clear_deskcount() {
  deskcount_ = 0;
  clear_has_deskcount();
}
inline ::google::protobuf::int32 ProDDZGameSendDiscardMahs::deskcount() const {
  return deskcount_;
}
inline void ProDDZGameSendDiscardMahs::set_deskcount(::google::protobuf::int32 value) {
  set_has_deskcount();
  deskcount_ = value;
}

// -------------------------------------------------------------------

// DDZWeaveItem

// optional int32 weaveKind = 1;
inline bool DDZWeaveItem::has_weavekind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DDZWeaveItem::set_has_weavekind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DDZWeaveItem::clear_has_weavekind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DDZWeaveItem::clear_weavekind() {
  weavekind_ = 0;
  clear_has_weavekind();
}
inline ::google::protobuf::int32 DDZWeaveItem::weavekind() const {
  return weavekind_;
}
inline void DDZWeaveItem::set_weavekind(::google::protobuf::int32 value) {
  set_has_weavekind();
  weavekind_ = value;
}

// optional int32 centercard = 2;
inline bool DDZWeaveItem::has_centercard() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DDZWeaveItem::set_has_centercard() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DDZWeaveItem::clear_has_centercard() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DDZWeaveItem::clear_centercard() {
  centercard_ = 0;
  clear_has_centercard();
}
inline ::google::protobuf::int32 DDZWeaveItem::centercard() const {
  return centercard_;
}
inline void DDZWeaveItem::set_centercard(::google::protobuf::int32 value) {
  set_has_centercard();
  centercard_ = value;
}

// optional int32 provideUser = 3;
inline bool DDZWeaveItem::has_provideuser() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DDZWeaveItem::set_has_provideuser() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DDZWeaveItem::clear_has_provideuser() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DDZWeaveItem::clear_provideuser() {
  provideuser_ = 0;
  clear_has_provideuser();
}
inline ::google::protobuf::int32 DDZWeaveItem::provideuser() const {
  return provideuser_;
}
inline void DDZWeaveItem::set_provideuser(::google::protobuf::int32 value) {
  set_has_provideuser();
  provideuser_ = value;
}

// optional int32 cardsize = 4;
inline bool DDZWeaveItem::has_cardsize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DDZWeaveItem::set_has_cardsize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DDZWeaveItem::clear_has_cardsize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DDZWeaveItem::clear_cardsize() {
  cardsize_ = 0;
  clear_has_cardsize();
}
inline ::google::protobuf::int32 DDZWeaveItem::cardsize() const {
  return cardsize_;
}
inline void DDZWeaveItem::set_cardsize(::google::protobuf::int32 value) {
  set_has_cardsize();
  cardsize_ = value;
}

// -------------------------------------------------------------------

// DDZWeaveItems

// repeated .DDZWeaveItem items = 1;
inline int DDZWeaveItems::items_size() const {
  return items_.size();
}
inline void DDZWeaveItems::clear_items() {
  items_.Clear();
}
inline const ::DDZWeaveItem& DDZWeaveItems::items(int index) const {
  return items_.Get(index);
}
inline ::DDZWeaveItem* DDZWeaveItems::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::DDZWeaveItem* DDZWeaveItems::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DDZWeaveItem >&
DDZWeaveItems::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::DDZWeaveItem >*
DDZWeaveItems::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// ProDDZGameSendActionMahs

// optional int32 seat_id = 2;
inline bool ProDDZGameSendActionMahs::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameSendActionMahs::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameSendActionMahs::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameSendActionMahs::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProDDZGameSendActionMahs::seat_id() const {
  return seat_id_;
}
inline void ProDDZGameSendActionMahs::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// repeated .DDZWeaveItems weaves = 3;
inline int ProDDZGameSendActionMahs::weaves_size() const {
  return weaves_.size();
}
inline void ProDDZGameSendActionMahs::clear_weaves() {
  weaves_.Clear();
}
inline const ::DDZWeaveItems& ProDDZGameSendActionMahs::weaves(int index) const {
  return weaves_.Get(index);
}
inline ::DDZWeaveItems* ProDDZGameSendActionMahs::mutable_weaves(int index) {
  return weaves_.Mutable(index);
}
inline ::DDZWeaveItems* ProDDZGameSendActionMahs::add_weaves() {
  return weaves_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DDZWeaveItems >&
ProDDZGameSendActionMahs::weaves() const {
  return weaves_;
}
inline ::google::protobuf::RepeatedPtrField< ::DDZWeaveItems >*
ProDDZGameSendActionMahs::mutable_weaves() {
  return &weaves_;
}

// -------------------------------------------------------------------

// ProDDZGameBrokenRequest

// optional int32 seat_id = 2;
inline bool ProDDZGameBrokenRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameBrokenRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameBrokenRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameBrokenRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProDDZGameBrokenRequest::seat_id() const {
  return seat_id_;
}
inline void ProDDZGameBrokenRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional .DDZBROKEN_TYPE type = 3;
inline bool ProDDZGameBrokenRequest::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameBrokenRequest::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameBrokenRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameBrokenRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::DDZBROKEN_TYPE ProDDZGameBrokenRequest::type() const {
  return static_cast< ::DDZBROKEN_TYPE >(type_);
}
inline void ProDDZGameBrokenRequest::set_type(::DDZBROKEN_TYPE value) {
  assert(::DDZBROKEN_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional int32 time = 4;
inline bool ProDDZGameBrokenRequest::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameBrokenRequest::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameBrokenRequest::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameBrokenRequest::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProDDZGameBrokenRequest::time() const {
  return time_;
}
inline void ProDDZGameBrokenRequest::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameBrokenOperate

// optional int32 seat_id = 2;
inline bool ProDDZGameBrokenOperate::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameBrokenOperate::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameBrokenOperate::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameBrokenOperate::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProDDZGameBrokenOperate::seat_id() const {
  return seat_id_;
}
inline void ProDDZGameBrokenOperate::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional .DDZBROKEN_OPERATE result = 3 [default = DDZ_BO_DISAGREE];
inline bool ProDDZGameBrokenOperate::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameBrokenOperate::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameBrokenOperate::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameBrokenOperate::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::DDZBROKEN_OPERATE ProDDZGameBrokenOperate::result() const {
  return static_cast< ::DDZBROKEN_OPERATE >(result_);
}
inline void ProDDZGameBrokenOperate::set_result(::DDZBROKEN_OPERATE value) {
  assert(::DDZBROKEN_OPERATE_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameBrokenNotify

// optional int32 seat_id = 2;
inline bool ProDDZGameBrokenNotify::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameBrokenNotify::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameBrokenNotify::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameBrokenNotify::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProDDZGameBrokenNotify::seat_id() const {
  return seat_id_;
}
inline void ProDDZGameBrokenNotify::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional .DDZBROKEN_CODE operate_code = 3 [default = DDZ_BC_SUCCESS];
inline bool ProDDZGameBrokenNotify::has_operate_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameBrokenNotify::set_has_operate_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameBrokenNotify::clear_has_operate_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameBrokenNotify::clear_operate_code() {
  operate_code_ = 0;
  clear_has_operate_code();
}
inline ::DDZBROKEN_CODE ProDDZGameBrokenNotify::operate_code() const {
  return static_cast< ::DDZBROKEN_CODE >(operate_code_);
}
inline void ProDDZGameBrokenNotify::set_operate_code(::DDZBROKEN_CODE value) {
  assert(::DDZBROKEN_CODE_IsValid(value));
  set_has_operate_code();
  operate_code_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameRuleConfig

// optional int32 game_round = 1;
inline bool ProDDZGameRuleConfig::has_game_round() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameRuleConfig::set_has_game_round() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameRuleConfig::clear_has_game_round() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameRuleConfig::clear_game_round() {
  game_round_ = 0;
  clear_has_game_round();
}
inline ::google::protobuf::int32 ProDDZGameRuleConfig::game_round() const {
  return game_round_;
}
inline void ProDDZGameRuleConfig::set_game_round(::google::protobuf::int32 value) {
  set_has_game_round();
  game_round_ = value;
}

// optional int32 need_card = 2;
inline bool ProDDZGameRuleConfig::has_need_card() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameRuleConfig::set_has_need_card() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameRuleConfig::clear_has_need_card() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameRuleConfig::clear_need_card() {
  need_card_ = 0;
  clear_has_need_card();
}
inline ::google::protobuf::int32 ProDDZGameRuleConfig::need_card() const {
  return need_card_;
}
inline void ProDDZGameRuleConfig::set_need_card(::google::protobuf::int32 value) {
  set_has_need_card();
  need_card_ = value;
}

// optional bool have_bottom_king = 3;
inline bool ProDDZGameRuleConfig::has_have_bottom_king() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameRuleConfig::set_has_have_bottom_king() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameRuleConfig::clear_has_have_bottom_king() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameRuleConfig::clear_have_bottom_king() {
  have_bottom_king_ = false;
  clear_has_have_bottom_king();
}
inline bool ProDDZGameRuleConfig::have_bottom_king() const {
  return have_bottom_king_;
}
inline void ProDDZGameRuleConfig::set_have_bottom_king(bool value) {
  set_has_have_bottom_king();
  have_bottom_king_ = value;
}

// optional bool have_mai_lei = 4;
inline bool ProDDZGameRuleConfig::has_have_mai_lei() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProDDZGameRuleConfig::set_has_have_mai_lei() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProDDZGameRuleConfig::clear_has_have_mai_lei() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProDDZGameRuleConfig::clear_have_mai_lei() {
  have_mai_lei_ = false;
  clear_has_have_mai_lei();
}
inline bool ProDDZGameRuleConfig::have_mai_lei() const {
  return have_mai_lei_;
}
inline void ProDDZGameRuleConfig::set_have_mai_lei(bool value) {
  set_has_have_mai_lei();
  have_mai_lei_ = value;
}

// optional bool hava_hui_tou = 5;
inline bool ProDDZGameRuleConfig::has_hava_hui_tou() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProDDZGameRuleConfig::set_has_hava_hui_tou() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProDDZGameRuleConfig::clear_has_hava_hui_tou() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProDDZGameRuleConfig::clear_hava_hui_tou() {
  hava_hui_tou_ = false;
  clear_has_hava_hui_tou();
}
inline bool ProDDZGameRuleConfig::hava_hui_tou() const {
  return hava_hui_tou_;
}
inline void ProDDZGameRuleConfig::set_hava_hui_tou(bool value) {
  set_has_hava_hui_tou();
  hava_hui_tou_ = value;
}

// optional int32 nMasterSeat = 6;
inline bool ProDDZGameRuleConfig::has_nmasterseat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProDDZGameRuleConfig::set_has_nmasterseat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProDDZGameRuleConfig::clear_has_nmasterseat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProDDZGameRuleConfig::clear_nmasterseat() {
  nmasterseat_ = 0;
  clear_has_nmasterseat();
}
inline ::google::protobuf::int32 ProDDZGameRuleConfig::nmasterseat() const {
  return nmasterseat_;
}
inline void ProDDZGameRuleConfig::set_nmasterseat(::google::protobuf::int32 value) {
  set_has_nmasterseat();
  nmasterseat_ = value;
}

// optional int32 current_game_count = 7;
inline bool ProDDZGameRuleConfig::has_current_game_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProDDZGameRuleConfig::set_has_current_game_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProDDZGameRuleConfig::clear_has_current_game_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProDDZGameRuleConfig::clear_current_game_count() {
  current_game_count_ = 0;
  clear_has_current_game_count();
}
inline ::google::protobuf::int32 ProDDZGameRuleConfig::current_game_count() const {
  return current_game_count_;
}
inline void ProDDZGameRuleConfig::set_current_game_count(::google::protobuf::int32 value) {
  set_has_current_game_count();
  current_game_count_ = value;
}

// optional bool have_jianma = 8;
inline bool ProDDZGameRuleConfig::has_have_jianma() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProDDZGameRuleConfig::set_has_have_jianma() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProDDZGameRuleConfig::clear_has_have_jianma() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProDDZGameRuleConfig::clear_have_jianma() {
  have_jianma_ = false;
  clear_has_have_jianma();
}
inline bool ProDDZGameRuleConfig::have_jianma() const {
  return have_jianma_;
}
inline void ProDDZGameRuleConfig::set_have_jianma(bool value) {
  set_has_have_jianma();
  have_jianma_ = value;
}

// optional int32 nChongguanNum = 9;
inline bool ProDDZGameRuleConfig::has_nchongguannum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProDDZGameRuleConfig::set_has_nchongguannum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProDDZGameRuleConfig::clear_has_nchongguannum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProDDZGameRuleConfig::clear_nchongguannum() {
  nchongguannum_ = 0;
  clear_has_nchongguannum();
}
inline ::google::protobuf::int32 ProDDZGameRuleConfig::nchongguannum() const {
  return nchongguannum_;
}
inline void ProDDZGameRuleConfig::set_nchongguannum(::google::protobuf::int32 value) {
  set_has_nchongguannum();
  nchongguannum_ = value;
}

// optional bool bbawangfanbei = 10;
inline bool ProDDZGameRuleConfig::has_bbawangfanbei() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProDDZGameRuleConfig::set_has_bbawangfanbei() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ProDDZGameRuleConfig::clear_has_bbawangfanbei() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ProDDZGameRuleConfig::clear_bbawangfanbei() {
  bbawangfanbei_ = false;
  clear_has_bbawangfanbei();
}
inline bool ProDDZGameRuleConfig::bbawangfanbei() const {
  return bbawangfanbei_;
}
inline void ProDDZGameRuleConfig::set_bbawangfanbei(bool value) {
  set_has_bbawangfanbei();
  bbawangfanbei_ = value;
}

// optional int32 nPlayerNum = 11;
inline bool ProDDZGameRuleConfig::has_nplayernum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ProDDZGameRuleConfig::set_has_nplayernum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ProDDZGameRuleConfig::clear_has_nplayernum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ProDDZGameRuleConfig::clear_nplayernum() {
  nplayernum_ = 0;
  clear_has_nplayernum();
}
inline ::google::protobuf::int32 ProDDZGameRuleConfig::nplayernum() const {
  return nplayernum_;
}
inline void ProDDZGameRuleConfig::set_nplayernum(::google::protobuf::int32 value) {
  set_has_nplayernum();
  nplayernum_ = value;
}

// optional bytes sRoomNum = 12;
inline bool ProDDZGameRuleConfig::has_sroomnum() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ProDDZGameRuleConfig::set_has_sroomnum() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ProDDZGameRuleConfig::clear_has_sroomnum() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ProDDZGameRuleConfig::clear_sroomnum() {
  if (sroomnum_ != &::google::protobuf::internal::kEmptyString) {
    sroomnum_->clear();
  }
  clear_has_sroomnum();
}
inline const ::std::string& ProDDZGameRuleConfig::sroomnum() const {
  return *sroomnum_;
}
inline void ProDDZGameRuleConfig::set_sroomnum(const ::std::string& value) {
  set_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    sroomnum_ = new ::std::string;
  }
  sroomnum_->assign(value);
}
inline void ProDDZGameRuleConfig::set_sroomnum(const char* value) {
  set_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    sroomnum_ = new ::std::string;
  }
  sroomnum_->assign(value);
}
inline void ProDDZGameRuleConfig::set_sroomnum(const void* value, size_t size) {
  set_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    sroomnum_ = new ::std::string;
  }
  sroomnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProDDZGameRuleConfig::mutable_sroomnum() {
  set_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    sroomnum_ = new ::std::string;
  }
  return sroomnum_;
}
inline ::std::string* ProDDZGameRuleConfig::release_sroomnum() {
  clear_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sroomnum_;
    sroomnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProDDZGameRuleConfig::set_allocated_sroomnum(::std::string* sroomnum) {
  if (sroomnum_ != &::google::protobuf::internal::kEmptyString) {
    delete sroomnum_;
  }
  if (sroomnum) {
    set_has_sroomnum();
    sroomnum_ = sroomnum;
  } else {
    clear_has_sroomnum();
    sroomnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes sPlayTime = 13;
inline bool ProDDZGameRuleConfig::has_splaytime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ProDDZGameRuleConfig::set_has_splaytime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ProDDZGameRuleConfig::clear_has_splaytime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ProDDZGameRuleConfig::clear_splaytime() {
  if (splaytime_ != &::google::protobuf::internal::kEmptyString) {
    splaytime_->clear();
  }
  clear_has_splaytime();
}
inline const ::std::string& ProDDZGameRuleConfig::splaytime() const {
  return *splaytime_;
}
inline void ProDDZGameRuleConfig::set_splaytime(const ::std::string& value) {
  set_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    splaytime_ = new ::std::string;
  }
  splaytime_->assign(value);
}
inline void ProDDZGameRuleConfig::set_splaytime(const char* value) {
  set_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    splaytime_ = new ::std::string;
  }
  splaytime_->assign(value);
}
inline void ProDDZGameRuleConfig::set_splaytime(const void* value, size_t size) {
  set_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    splaytime_ = new ::std::string;
  }
  splaytime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProDDZGameRuleConfig::mutable_splaytime() {
  set_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    splaytime_ = new ::std::string;
  }
  return splaytime_;
}
inline ::std::string* ProDDZGameRuleConfig::release_splaytime() {
  clear_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = splaytime_;
    splaytime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProDDZGameRuleConfig::set_allocated_splaytime(::std::string* splaytime) {
  if (splaytime_ != &::google::protobuf::internal::kEmptyString) {
    delete splaytime_;
  }
  if (splaytime) {
    set_has_splaytime();
    splaytime_ = splaytime;
  } else {
    clear_has_splaytime();
    splaytime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 nselfSeat = 14;
inline bool ProDDZGameRuleConfig::has_nselfseat() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ProDDZGameRuleConfig::set_has_nselfseat() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ProDDZGameRuleConfig::clear_has_nselfseat() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ProDDZGameRuleConfig::clear_nselfseat() {
  nselfseat_ = 0;
  clear_has_nselfseat();
}
inline ::google::protobuf::int32 ProDDZGameRuleConfig::nselfseat() const {
  return nselfseat_;
}
inline void ProDDZGameRuleConfig::set_nselfseat(::google::protobuf::int32 value) {
  set_has_nselfseat();
  nselfseat_ = value;
}

// optional bool bJingDian = 15;
inline bool ProDDZGameRuleConfig::has_bjingdian() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ProDDZGameRuleConfig::set_has_bjingdian() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ProDDZGameRuleConfig::clear_has_bjingdian() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ProDDZGameRuleConfig::clear_bjingdian() {
  bjingdian_ = false;
  clear_has_bjingdian();
}
inline bool ProDDZGameRuleConfig::bjingdian() const {
  return bjingdian_;
}
inline void ProDDZGameRuleConfig::set_bjingdian(bool value) {
  set_has_bjingdian();
  bjingdian_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameBrokenStatus

// optional int32 broken_seat = 1;
inline bool ProDDZGameBrokenStatus::has_broken_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameBrokenStatus::set_has_broken_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameBrokenStatus::clear_has_broken_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameBrokenStatus::clear_broken_seat() {
  broken_seat_ = 0;
  clear_has_broken_seat();
}
inline ::google::protobuf::int32 ProDDZGameBrokenStatus::broken_seat() const {
  return broken_seat_;
}
inline void ProDDZGameBrokenStatus::set_broken_seat(::google::protobuf::int32 value) {
  set_has_broken_seat();
  broken_seat_ = value;
}

// repeated bool broken_status = 2;
inline int ProDDZGameBrokenStatus::broken_status_size() const {
  return broken_status_.size();
}
inline void ProDDZGameBrokenStatus::clear_broken_status() {
  broken_status_.Clear();
}
inline bool ProDDZGameBrokenStatus::broken_status(int index) const {
  return broken_status_.Get(index);
}
inline void ProDDZGameBrokenStatus::set_broken_status(int index, bool value) {
  broken_status_.Set(index, value);
}
inline void ProDDZGameBrokenStatus::add_broken_status(bool value) {
  broken_status_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
ProDDZGameBrokenStatus::broken_status() const {
  return broken_status_;
}
inline ::google::protobuf::RepeatedField< bool >*
ProDDZGameBrokenStatus::mutable_broken_status() {
  return &broken_status_;
}

// optional int32 left_time = 3;
inline bool ProDDZGameBrokenStatus::has_left_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameBrokenStatus::set_has_left_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameBrokenStatus::clear_has_left_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameBrokenStatus::clear_left_time() {
  left_time_ = 0;
  clear_has_left_time();
}
inline ::google::protobuf::int32 ProDDZGameBrokenStatus::left_time() const {
  return left_time_;
}
inline void ProDDZGameBrokenStatus::set_left_time(::google::protobuf::int32 value) {
  set_has_left_time();
  left_time_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameDataResp

// repeated int32 total_score = 1;
inline int ProDDZGameDataResp::total_score_size() const {
  return total_score_.size();
}
inline void ProDDZGameDataResp::clear_total_score() {
  total_score_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameDataResp::total_score(int index) const {
  return total_score_.Get(index);
}
inline void ProDDZGameDataResp::set_total_score(int index, ::google::protobuf::int32 value) {
  total_score_.Set(index, value);
}
inline void ProDDZGameDataResp::add_total_score(::google::protobuf::int32 value) {
  total_score_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameDataResp::total_score() const {
  return total_score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameDataResp::mutable_total_score() {
  return &total_score_;
}

// optional int32 type = 2;
inline bool ProDDZGameDataResp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameDataResp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameDataResp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameDataResp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ProDDZGameDataResp::type() const {
  return type_;
}
inline void ProDDZGameDataResp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameRecordRequest

// optional int32 seat_id = 1;
inline bool ProDDZGameRecordRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameRecordRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameRecordRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameRecordRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProDDZGameRecordRequest::seat_id() const {
  return seat_id_;
}
inline void ProDDZGameRecordRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional bytes url = 2;
inline bool ProDDZGameRecordRequest::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameRecordRequest::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameRecordRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameRecordRequest::clear_url() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& ProDDZGameRecordRequest::url() const {
  return *url_;
}
inline void ProDDZGameRecordRequest::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ProDDZGameRecordRequest::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ProDDZGameRecordRequest::set_url(const void* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProDDZGameRecordRequest::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  return url_;
}
inline ::std::string* ProDDZGameRecordRequest::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProDDZGameRecordRequest::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProDDZGameRecordResponse

// optional int32 seat_id = 1;
inline bool ProDDZGameRecordResponse::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameRecordResponse::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameRecordResponse::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameRecordResponse::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProDDZGameRecordResponse::seat_id() const {
  return seat_id_;
}
inline void ProDDZGameRecordResponse::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional bytes url = 2;
inline bool ProDDZGameRecordResponse::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameRecordResponse::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameRecordResponse::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameRecordResponse::clear_url() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& ProDDZGameRecordResponse::url() const {
  return *url_;
}
inline void ProDDZGameRecordResponse::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ProDDZGameRecordResponse::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ProDDZGameRecordResponse::set_url(const void* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProDDZGameRecordResponse::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  return url_;
}
inline ::std::string* ProDDZGameRecordResponse::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProDDZGameRecordResponse::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProDDZGameUserLocationRequest

// optional int32 seat_id = 1;
inline bool ProDDZGameUserLocationRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameUserLocationRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameUserLocationRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameUserLocationRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProDDZGameUserLocationRequest::seat_id() const {
  return seat_id_;
}
inline void ProDDZGameUserLocationRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional double dwlongitude = 2;
inline bool ProDDZGameUserLocationRequest::has_dwlongitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameUserLocationRequest::set_has_dwlongitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameUserLocationRequest::clear_has_dwlongitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameUserLocationRequest::clear_dwlongitude() {
  dwlongitude_ = 0;
  clear_has_dwlongitude();
}
inline double ProDDZGameUserLocationRequest::dwlongitude() const {
  return dwlongitude_;
}
inline void ProDDZGameUserLocationRequest::set_dwlongitude(double value) {
  set_has_dwlongitude();
  dwlongitude_ = value;
}

// optional double dwlatitude = 3;
inline bool ProDDZGameUserLocationRequest::has_dwlatitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameUserLocationRequest::set_has_dwlatitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameUserLocationRequest::clear_has_dwlatitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameUserLocationRequest::clear_dwlatitude() {
  dwlatitude_ = 0;
  clear_has_dwlatitude();
}
inline double ProDDZGameUserLocationRequest::dwlatitude() const {
  return dwlatitude_;
}
inline void ProDDZGameUserLocationRequest::set_dwlatitude(double value) {
  set_has_dwlatitude();
  dwlatitude_ = value;
}

// optional bytes strDistrict = 4;
inline bool ProDDZGameUserLocationRequest::has_strdistrict() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProDDZGameUserLocationRequest::set_has_strdistrict() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProDDZGameUserLocationRequest::clear_has_strdistrict() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProDDZGameUserLocationRequest::clear_strdistrict() {
  if (strdistrict_ != &::google::protobuf::internal::kEmptyString) {
    strdistrict_->clear();
  }
  clear_has_strdistrict();
}
inline const ::std::string& ProDDZGameUserLocationRequest::strdistrict() const {
  return *strdistrict_;
}
inline void ProDDZGameUserLocationRequest::set_strdistrict(const ::std::string& value) {
  set_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    strdistrict_ = new ::std::string;
  }
  strdistrict_->assign(value);
}
inline void ProDDZGameUserLocationRequest::set_strdistrict(const char* value) {
  set_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    strdistrict_ = new ::std::string;
  }
  strdistrict_->assign(value);
}
inline void ProDDZGameUserLocationRequest::set_strdistrict(const void* value, size_t size) {
  set_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    strdistrict_ = new ::std::string;
  }
  strdistrict_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProDDZGameUserLocationRequest::mutable_strdistrict() {
  set_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    strdistrict_ = new ::std::string;
  }
  return strdistrict_;
}
inline ::std::string* ProDDZGameUserLocationRequest::release_strdistrict() {
  clear_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strdistrict_;
    strdistrict_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProDDZGameUserLocationRequest::set_allocated_strdistrict(::std::string* strdistrict) {
  if (strdistrict_ != &::google::protobuf::internal::kEmptyString) {
    delete strdistrict_;
  }
  if (strdistrict) {
    set_has_strdistrict();
    strdistrict_ = strdistrict;
  } else {
    clear_has_strdistrict();
    strdistrict_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes strStreetName = 5;
inline bool ProDDZGameUserLocationRequest::has_strstreetname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProDDZGameUserLocationRequest::set_has_strstreetname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProDDZGameUserLocationRequest::clear_has_strstreetname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProDDZGameUserLocationRequest::clear_strstreetname() {
  if (strstreetname_ != &::google::protobuf::internal::kEmptyString) {
    strstreetname_->clear();
  }
  clear_has_strstreetname();
}
inline const ::std::string& ProDDZGameUserLocationRequest::strstreetname() const {
  return *strstreetname_;
}
inline void ProDDZGameUserLocationRequest::set_strstreetname(const ::std::string& value) {
  set_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    strstreetname_ = new ::std::string;
  }
  strstreetname_->assign(value);
}
inline void ProDDZGameUserLocationRequest::set_strstreetname(const char* value) {
  set_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    strstreetname_ = new ::std::string;
  }
  strstreetname_->assign(value);
}
inline void ProDDZGameUserLocationRequest::set_strstreetname(const void* value, size_t size) {
  set_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    strstreetname_ = new ::std::string;
  }
  strstreetname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProDDZGameUserLocationRequest::mutable_strstreetname() {
  set_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    strstreetname_ = new ::std::string;
  }
  return strstreetname_;
}
inline ::std::string* ProDDZGameUserLocationRequest::release_strstreetname() {
  clear_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strstreetname_;
    strstreetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProDDZGameUserLocationRequest::set_allocated_strstreetname(::std::string* strstreetname) {
  if (strstreetname_ != &::google::protobuf::internal::kEmptyString) {
    delete strstreetname_;
  }
  if (strstreetname) {
    set_has_strstreetname();
    strstreetname_ = strstreetname;
  } else {
    clear_has_strstreetname();
    strstreetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProDDZGameSyncCardResponse

// optional int32 seat = 2;
inline bool ProDDZGameSyncCardResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameSyncCardResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameSyncCardResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameSyncCardResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameSyncCardResponse::seat() const {
  return seat_;
}
inline void ProDDZGameSyncCardResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 handmahs = 3;
inline int ProDDZGameSyncCardResponse::handmahs_size() const {
  return handmahs_.size();
}
inline void ProDDZGameSyncCardResponse::clear_handmahs() {
  handmahs_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameSyncCardResponse::handmahs(int index) const {
  return handmahs_.Get(index);
}
inline void ProDDZGameSyncCardResponse::set_handmahs(int index, ::google::protobuf::int32 value) {
  handmahs_.Set(index, value);
}
inline void ProDDZGameSyncCardResponse::add_handmahs(::google::protobuf::int32 value) {
  handmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameSyncCardResponse::handmahs() const {
  return handmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameSyncCardResponse::mutable_handmahs() {
  return &handmahs_;
}

// -------------------------------------------------------------------

// ProDDZGameUserPhoneStatusRequest

// optional int32 seat_id = 1;
inline bool ProDDZGameUserPhoneStatusRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameUserPhoneStatusRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameUserPhoneStatusRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameUserPhoneStatusRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProDDZGameUserPhoneStatusRequest::seat_id() const {
  return seat_id_;
}
inline void ProDDZGameUserPhoneStatusRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional int32 userstatus = 2;
inline bool ProDDZGameUserPhoneStatusRequest::has_userstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameUserPhoneStatusRequest::set_has_userstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameUserPhoneStatusRequest::clear_has_userstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameUserPhoneStatusRequest::clear_userstatus() {
  userstatus_ = 0;
  clear_has_userstatus();
}
inline ::google::protobuf::int32 ProDDZGameUserPhoneStatusRequest::userstatus() const {
  return userstatus_;
}
inline void ProDDZGameUserPhoneStatusRequest::set_userstatus(::google::protobuf::int32 value) {
  set_has_userstatus();
  userstatus_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameUserGiveUpRequest

// optional int32 seat_id = 1;
inline bool ProDDZGameUserGiveUpRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameUserGiveUpRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameUserGiveUpRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameUserGiveUpRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProDDZGameUserGiveUpRequest::seat_id() const {
  return seat_id_;
}
inline void ProDDZGameUserGiveUpRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameUserHintRequest

// -------------------------------------------------------------------

// ProDDZGameUserHintResponse

// optional int32 lenth = 1;
inline bool ProDDZGameUserHintResponse::has_lenth() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameUserHintResponse::set_has_lenth() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameUserHintResponse::clear_has_lenth() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameUserHintResponse::clear_lenth() {
  lenth_ = 0;
  clear_has_lenth();
}
inline ::google::protobuf::int32 ProDDZGameUserHintResponse::lenth() const {
  return lenth_;
}
inline void ProDDZGameUserHintResponse::set_lenth(::google::protobuf::int32 value) {
  set_has_lenth();
  lenth_ = value;
}

// repeated int32 outMahs = 2;
inline int ProDDZGameUserHintResponse::outmahs_size() const {
  return outmahs_.size();
}
inline void ProDDZGameUserHintResponse::clear_outmahs() {
  outmahs_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameUserHintResponse::outmahs(int index) const {
  return outmahs_.Get(index);
}
inline void ProDDZGameUserHintResponse::set_outmahs(int index, ::google::protobuf::int32 value) {
  outmahs_.Set(index, value);
}
inline void ProDDZGameUserHintResponse::add_outmahs(::google::protobuf::int32 value) {
  outmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameUserHintResponse::outmahs() const {
  return outmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameUserHintResponse::mutable_outmahs() {
  return &outmahs_;
}

// -------------------------------------------------------------------

// ProDDZGameUserCallScoreResponse

// optional int32 seat = 1;
inline bool ProDDZGameUserCallScoreResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameUserCallScoreResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameUserCallScoreResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameUserCallScoreResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameUserCallScoreResponse::seat() const {
  return seat_;
}
inline void ProDDZGameUserCallScoreResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 usercallscore = 2;
inline bool ProDDZGameUserCallScoreResponse::has_usercallscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameUserCallScoreResponse::set_has_usercallscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameUserCallScoreResponse::clear_has_usercallscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameUserCallScoreResponse::clear_usercallscore() {
  usercallscore_ = 0;
  clear_has_usercallscore();
}
inline ::google::protobuf::int32 ProDDZGameUserCallScoreResponse::usercallscore() const {
  return usercallscore_;
}
inline void ProDDZGameUserCallScoreResponse::set_usercallscore(::google::protobuf::int32 value) {
  set_has_usercallscore();
  usercallscore_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameUserCallScoreRequest

// optional int32 seat = 1;
inline bool ProDDZGameUserCallScoreRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameUserCallScoreRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameUserCallScoreRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameUserCallScoreRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameUserCallScoreRequest::seat() const {
  return seat_;
}
inline void ProDDZGameUserCallScoreRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 usercallscore = 2;
inline bool ProDDZGameUserCallScoreRequest::has_usercallscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameUserCallScoreRequest::set_has_usercallscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameUserCallScoreRequest::clear_has_usercallscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameUserCallScoreRequest::clear_usercallscore() {
  usercallscore_ = 0;
  clear_has_usercallscore();
}
inline ::google::protobuf::int32 ProDDZGameUserCallScoreRequest::usercallscore() const {
  return usercallscore_;
}
inline void ProDDZGameUserCallScoreRequest::set_usercallscore(::google::protobuf::int32 value) {
  set_has_usercallscore();
  usercallscore_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameCallNotify

// optional int32 seat = 1;
inline bool ProDDZGameCallNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameCallNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameCallNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameCallNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameCallNotify::seat() const {
  return seat_;
}
inline void ProDDZGameCallNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameQiangNotify

// optional int32 seat = 1;
inline bool ProDDZGameQiangNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameQiangNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameQiangNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameQiangNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameQiangNotify::seat() const {
  return seat_;
}
inline void ProDDZGameQiangNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameUserCallLandlordResponse

// optional int32 iscallandlord = 1;
inline bool ProDDZGameUserCallLandlordResponse::has_iscallandlord() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameUserCallLandlordResponse::set_has_iscallandlord() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameUserCallLandlordResponse::clear_has_iscallandlord() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameUserCallLandlordResponse::clear_iscallandlord() {
  iscallandlord_ = 0;
  clear_has_iscallandlord();
}
inline ::google::protobuf::int32 ProDDZGameUserCallLandlordResponse::iscallandlord() const {
  return iscallandlord_;
}
inline void ProDDZGameUserCallLandlordResponse::set_iscallandlord(::google::protobuf::int32 value) {
  set_has_iscallandlord();
  iscallandlord_ = value;
}

// optional int32 score = 2;
inline bool ProDDZGameUserCallLandlordResponse::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameUserCallLandlordResponse::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameUserCallLandlordResponse::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameUserCallLandlordResponse::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 ProDDZGameUserCallLandlordResponse::score() const {
  return score_;
}
inline void ProDDZGameUserCallLandlordResponse::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// optional int32 landlordSeat = 3;
inline bool ProDDZGameUserCallLandlordResponse::has_landlordseat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameUserCallLandlordResponse::set_has_landlordseat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameUserCallLandlordResponse::clear_has_landlordseat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameUserCallLandlordResponse::clear_landlordseat() {
  landlordseat_ = 0;
  clear_has_landlordseat();
}
inline ::google::protobuf::int32 ProDDZGameUserCallLandlordResponse::landlordseat() const {
  return landlordseat_;
}
inline void ProDDZGameUserCallLandlordResponse::set_landlordseat(::google::protobuf::int32 value) {
  set_has_landlordseat();
  landlordseat_ = value;
}

// optional int32 seat = 4;
inline bool ProDDZGameUserCallLandlordResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProDDZGameUserCallLandlordResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProDDZGameUserCallLandlordResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProDDZGameUserCallLandlordResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameUserCallLandlordResponse::seat() const {
  return seat_;
}
inline void ProDDZGameUserCallLandlordResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool isSoundCall = 5;
inline bool ProDDZGameUserCallLandlordResponse::has_issoundcall() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProDDZGameUserCallLandlordResponse::set_has_issoundcall() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProDDZGameUserCallLandlordResponse::clear_has_issoundcall() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProDDZGameUserCallLandlordResponse::clear_issoundcall() {
  issoundcall_ = false;
  clear_has_issoundcall();
}
inline bool ProDDZGameUserCallLandlordResponse::issoundcall() const {
  return issoundcall_;
}
inline void ProDDZGameUserCallLandlordResponse::set_issoundcall(bool value) {
  set_has_issoundcall();
  issoundcall_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameUserCallLandlordRequest

// optional int32 seat = 1;
inline bool ProDDZGameUserCallLandlordRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameUserCallLandlordRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameUserCallLandlordRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameUserCallLandlordRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameUserCallLandlordRequest::seat() const {
  return seat_;
}
inline void ProDDZGameUserCallLandlordRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 iscallandlord = 2;
inline bool ProDDZGameUserCallLandlordRequest::has_iscallandlord() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameUserCallLandlordRequest::set_has_iscallandlord() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameUserCallLandlordRequest::clear_has_iscallandlord() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameUserCallLandlordRequest::clear_iscallandlord() {
  iscallandlord_ = 0;
  clear_has_iscallandlord();
}
inline ::google::protobuf::int32 ProDDZGameUserCallLandlordRequest::iscallandlord() const {
  return iscallandlord_;
}
inline void ProDDZGameUserCallLandlordRequest::set_iscallandlord(::google::protobuf::int32 value) {
  set_has_iscallandlord();
  iscallandlord_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameUserQinagLandlordResponse

// optional int32 isQiangLandlord = 1;
inline bool ProDDZGameUserQinagLandlordResponse::has_isqianglandlord() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameUserQinagLandlordResponse::set_has_isqianglandlord() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameUserQinagLandlordResponse::clear_has_isqianglandlord() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameUserQinagLandlordResponse::clear_isqianglandlord() {
  isqianglandlord_ = 0;
  clear_has_isqianglandlord();
}
inline ::google::protobuf::int32 ProDDZGameUserQinagLandlordResponse::isqianglandlord() const {
  return isqianglandlord_;
}
inline void ProDDZGameUserQinagLandlordResponse::set_isqianglandlord(::google::protobuf::int32 value) {
  set_has_isqianglandlord();
  isqianglandlord_ = value;
}

// optional int32 score = 2;
inline bool ProDDZGameUserQinagLandlordResponse::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameUserQinagLandlordResponse::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameUserQinagLandlordResponse::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameUserQinagLandlordResponse::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 ProDDZGameUserQinagLandlordResponse::score() const {
  return score_;
}
inline void ProDDZGameUserQinagLandlordResponse::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// optional int32 landlordSeat = 3;
inline bool ProDDZGameUserQinagLandlordResponse::has_landlordseat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameUserQinagLandlordResponse::set_has_landlordseat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameUserQinagLandlordResponse::clear_has_landlordseat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameUserQinagLandlordResponse::clear_landlordseat() {
  landlordseat_ = 0;
  clear_has_landlordseat();
}
inline ::google::protobuf::int32 ProDDZGameUserQinagLandlordResponse::landlordseat() const {
  return landlordseat_;
}
inline void ProDDZGameUserQinagLandlordResponse::set_landlordseat(::google::protobuf::int32 value) {
  set_has_landlordseat();
  landlordseat_ = value;
}

// optional int32 seat = 4;
inline bool ProDDZGameUserQinagLandlordResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProDDZGameUserQinagLandlordResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProDDZGameUserQinagLandlordResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProDDZGameUserQinagLandlordResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameUserQinagLandlordResponse::seat() const {
  return seat_;
}
inline void ProDDZGameUserQinagLandlordResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameUserQiangLandlordRequest

// optional int32 seat = 1;
inline bool ProDDZGameUserQiangLandlordRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameUserQiangLandlordRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameUserQiangLandlordRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameUserQiangLandlordRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameUserQiangLandlordRequest::seat() const {
  return seat_;
}
inline void ProDDZGameUserQiangLandlordRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 isQiangLandlord = 2;
inline bool ProDDZGameUserQiangLandlordRequest::has_isqianglandlord() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameUserQiangLandlordRequest::set_has_isqianglandlord() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameUserQiangLandlordRequest::clear_has_isqianglandlord() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameUserQiangLandlordRequest::clear_isqianglandlord() {
  isqianglandlord_ = 0;
  clear_has_isqianglandlord();
}
inline ::google::protobuf::int32 ProDDZGameUserQiangLandlordRequest::isqianglandlord() const {
  return isqianglandlord_;
}
inline void ProDDZGameUserQiangLandlordRequest::set_isqianglandlord(::google::protobuf::int32 value) {
  set_has_isqianglandlord();
  isqianglandlord_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameSendLastCard

// optional int32 seat = 1;
inline bool ProDDZGameSendLastCard::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameSendLastCard::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameSendLastCard::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameSendLastCard::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameSendLastCard::seat() const {
  return seat_;
}
inline void ProDDZGameSendLastCard::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated .DDZMahList cbHandCardData = 2;
inline int ProDDZGameSendLastCard::cbhandcarddata_size() const {
  return cbhandcarddata_.size();
}
inline void ProDDZGameSendLastCard::clear_cbhandcarddata() {
  cbhandcarddata_.Clear();
}
inline const ::DDZMahList& ProDDZGameSendLastCard::cbhandcarddata(int index) const {
  return cbhandcarddata_.Get(index);
}
inline ::DDZMahList* ProDDZGameSendLastCard::mutable_cbhandcarddata(int index) {
  return cbhandcarddata_.Mutable(index);
}
inline ::DDZMahList* ProDDZGameSendLastCard::add_cbhandcarddata() {
  return cbhandcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DDZMahList >&
ProDDZGameSendLastCard::cbhandcarddata() const {
  return cbhandcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::DDZMahList >*
ProDDZGameSendLastCard::mutable_cbhandcarddata() {
  return &cbhandcarddata_;
}

// repeated int32 lastmahs = 3;
inline int ProDDZGameSendLastCard::lastmahs_size() const {
  return lastmahs_.size();
}
inline void ProDDZGameSendLastCard::clear_lastmahs() {
  lastmahs_.Clear();
}
inline ::google::protobuf::int32 ProDDZGameSendLastCard::lastmahs(int index) const {
  return lastmahs_.Get(index);
}
inline void ProDDZGameSendLastCard::set_lastmahs(int index, ::google::protobuf::int32 value) {
  lastmahs_.Set(index, value);
}
inline void ProDDZGameSendLastCard::add_lastmahs(::google::protobuf::int32 value) {
  lastmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProDDZGameSendLastCard::lastmahs() const {
  return lastmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProDDZGameSendLastCard::mutable_lastmahs() {
  return &lastmahs_;
}

// optional int32 laizi = 4;
inline bool ProDDZGameSendLastCard::has_laizi() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProDDZGameSendLastCard::set_has_laizi() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProDDZGameSendLastCard::clear_has_laizi() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProDDZGameSendLastCard::clear_laizi() {
  laizi_ = 0;
  clear_has_laizi();
}
inline ::google::protobuf::int32 ProDDZGameSendLastCard::laizi() const {
  return laizi_;
}
inline void ProDDZGameSendLastCard::set_laizi(::google::protobuf::int32 value) {
  set_has_laizi();
  laizi_ = value;
}

// optional bool isReCome = 5;
inline bool ProDDZGameSendLastCard::has_isrecome() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProDDZGameSendLastCard::set_has_isrecome() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProDDZGameSendLastCard::clear_has_isrecome() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProDDZGameSendLastCard::clear_isrecome() {
  isrecome_ = false;
  clear_has_isrecome();
}
inline bool ProDDZGameSendLastCard::isrecome() const {
  return isrecome_;
}
inline void ProDDZGameSendLastCard::set_isrecome(bool value) {
  set_has_isrecome();
  isrecome_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameUserMingPaiRequest

// optional int32 seat = 1;
inline bool ProDDZGameUserMingPaiRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameUserMingPaiRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameUserMingPaiRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameUserMingPaiRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameUserMingPaiRequest::seat() const {
  return seat_;
}
inline void ProDDZGameUserMingPaiRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool isMingPai = 2;
inline bool ProDDZGameUserMingPaiRequest::has_ismingpai() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameUserMingPaiRequest::set_has_ismingpai() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameUserMingPaiRequest::clear_has_ismingpai() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameUserMingPaiRequest::clear_ismingpai() {
  ismingpai_ = false;
  clear_has_ismingpai();
}
inline bool ProDDZGameUserMingPaiRequest::ismingpai() const {
  return ismingpai_;
}
inline void ProDDZGameUserMingPaiRequest::set_ismingpai(bool value) {
  set_has_ismingpai();
  ismingpai_ = value;
}

// optional int32 beilv = 3;
inline bool ProDDZGameUserMingPaiRequest::has_beilv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameUserMingPaiRequest::set_has_beilv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameUserMingPaiRequest::clear_has_beilv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameUserMingPaiRequest::clear_beilv() {
  beilv_ = 0;
  clear_has_beilv();
}
inline ::google::protobuf::int32 ProDDZGameUserMingPaiRequest::beilv() const {
  return beilv_;
}
inline void ProDDZGameUserMingPaiRequest::set_beilv(::google::protobuf::int32 value) {
  set_has_beilv();
  beilv_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameUserMingPaiResponse

// optional int32 seat = 1;
inline bool ProDDZGameUserMingPaiResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameUserMingPaiResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameUserMingPaiResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameUserMingPaiResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameUserMingPaiResponse::seat() const {
  return seat_;
}
inline void ProDDZGameUserMingPaiResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool isMingPai = 2;
inline bool ProDDZGameUserMingPaiResponse::has_ismingpai() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameUserMingPaiResponse::set_has_ismingpai() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameUserMingPaiResponse::clear_has_ismingpai() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameUserMingPaiResponse::clear_ismingpai() {
  ismingpai_ = false;
  clear_has_ismingpai();
}
inline bool ProDDZGameUserMingPaiResponse::ismingpai() const {
  return ismingpai_;
}
inline void ProDDZGameUserMingPaiResponse::set_ismingpai(bool value) {
  set_has_ismingpai();
  ismingpai_ = value;
}

// optional int32 score = 3;
inline bool ProDDZGameUserMingPaiResponse::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameUserMingPaiResponse::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameUserMingPaiResponse::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameUserMingPaiResponse::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 ProDDZGameUserMingPaiResponse::score() const {
  return score_;
}
inline void ProDDZGameUserMingPaiResponse::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// optional int32 mingtag = 4;
inline bool ProDDZGameUserMingPaiResponse::has_mingtag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProDDZGameUserMingPaiResponse::set_has_mingtag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProDDZGameUserMingPaiResponse::clear_has_mingtag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProDDZGameUserMingPaiResponse::clear_mingtag() {
  mingtag_ = 0;
  clear_has_mingtag();
}
inline ::google::protobuf::int32 ProDDZGameUserMingPaiResponse::mingtag() const {
  return mingtag_;
}
inline void ProDDZGameUserMingPaiResponse::set_mingtag(::google::protobuf::int32 value) {
  set_has_mingtag();
  mingtag_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameMingNotify

// optional int32 seat = 1;
inline bool ProDDZGameMingNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProDDZGameMingNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProDDZGameMingNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProDDZGameMingNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProDDZGameMingNotify::seat() const {
  return seat_;
}
inline void ProDDZGameMingNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 tag = 2;
inline bool ProDDZGameMingNotify::has_tag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProDDZGameMingNotify::set_has_tag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProDDZGameMingNotify::clear_has_tag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProDDZGameMingNotify::clear_tag() {
  tag_ = 0;
  clear_has_tag();
}
inline ::google::protobuf::int32 ProDDZGameMingNotify::tag() const {
  return tag_;
}
inline void ProDDZGameMingNotify::set_tag(::google::protobuf::int32 value) {
  set_has_tag();
  tag_ = value;
}

// optional float time = 3;
inline bool ProDDZGameMingNotify::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProDDZGameMingNotify::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProDDZGameMingNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProDDZGameMingNotify::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline float ProDDZGameMingNotify::time() const {
  return time_;
}
inline void ProDDZGameMingNotify::set_time(float value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// ProDDZGameStartAgain


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameStatusResponse_MSGID>() {
  return ::ProDDZGameStatusResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameDeskInfoResponse_MSGID>() {
  return ::ProDDZGameDeskInfoResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameReadyNotify_MSGID>() {
  return ::ProDDZGameReadyNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameReadyRequest_MSGID>() {
  return ::ProDDZGameReadyRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameReadyResponse_MSGID>() {
  return ::ProDDZGameReadyResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameStart_MSGID>() {
  return ::ProDDZGameStart_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameDiceNotify_MSGID>() {
  return ::ProDDZGameDiceNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameDiceRequest_MSGID>() {
  return ::ProDDZGameDiceRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameDiceResult_MSGID>() {
  return ::ProDDZGameDiceResult_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameSendMahs_MSGID>() {
  return ::ProDDZGameSendMahs_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameKingData_MSGID>() {
  return ::ProDDZGameKingData_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameOutMahsResponse_MSGID>() {
  return ::ProDDZGameOutMahsResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameTimerPower_MSGID>() {
  return ::ProDDZGameTimerPower_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameOperateNotify_MSGID>() {
  return ::ProDDZGameOperateNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameOperateResult_MSGID>() {
  return ::ProDDZGameOperateResult_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameOperateRequest_MSGID>() {
  return ::ProDDZGameOperateRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameTrust_MSGID>() {
  return ::ProDDZGameTrust_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameOutMahRequest_MSGID>() {
  return ::ProDDZGameOutMahRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameCatchCard_MSGID>() {
  return ::ProDDZGameCatchCard_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameEnd_MSGID>() {
  return ::ProDDZGameEnd_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameQuickSoundRequest_MSGID>() {
  return ::ProDDZGameQuickSoundRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameQuickSoundResponse_MSGID>() {
  return ::ProDDZGameQuickSoundResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameSendDiscardMahs_MSGID>() {
  return ::ProDDZGameSendDiscardMahs_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameSendActionMahs_MSGID>() {
  return ::ProDDZGameSendActionMahs_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameBrokenRequest_MSGID>() {
  return ::ProDDZGameBrokenRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameBrokenOperate_MSGID>() {
  return ::ProDDZGameBrokenOperate_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameBrokenNotify_MSGID>() {
  return ::ProDDZGameBrokenNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameRuleConfig_MSGID>() {
  return ::ProDDZGameRuleConfig_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameBrokenStatus_MSGID>() {
  return ::ProDDZGameBrokenStatus_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameDataResp_MSGID>() {
  return ::ProDDZGameDataResp_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameRecordRequest_MSGID>() {
  return ::ProDDZGameRecordRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameRecordResponse_MSGID>() {
  return ::ProDDZGameRecordResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameUserLocationRequest_MSGID>() {
  return ::ProDDZGameUserLocationRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameSyncCardResponse_MSGID>() {
  return ::ProDDZGameSyncCardResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameUserPhoneStatusRequest_MSGID>() {
  return ::ProDDZGameUserPhoneStatusRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameUserGiveUpRequest_MSGID>() {
  return ::ProDDZGameUserGiveUpRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameUserHintRequest_MSGID>() {
  return ::ProDDZGameUserHintRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameUserHintResponse_MSGID>() {
  return ::ProDDZGameUserHintResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameUserCallScoreResponse_MSGID>() {
  return ::ProDDZGameUserCallScoreResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameUserCallScoreRequest_MSGID>() {
  return ::ProDDZGameUserCallScoreRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameCallNotify_MSGID>() {
  return ::ProDDZGameCallNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameQiangNotify_MSGID>() {
  return ::ProDDZGameQiangNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameUserCallLandlordResponse_MSGID>() {
  return ::ProDDZGameUserCallLandlordResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameUserCallLandlordRequest_MSGID>() {
  return ::ProDDZGameUserCallLandlordRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameUserQinagLandlordResponse_MSGID>() {
  return ::ProDDZGameUserQinagLandlordResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameUserQiangLandlordRequest_MSGID>() {
  return ::ProDDZGameUserQiangLandlordRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameSendLastCard_MSGID>() {
  return ::ProDDZGameSendLastCard_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameUserMingPaiRequest_MSGID>() {
  return ::ProDDZGameUserMingPaiRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameUserMingPaiResponse_MSGID>() {
  return ::ProDDZGameUserMingPaiResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameMingNotify_MSGID>() {
  return ::ProDDZGameMingNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProDDZGameStartAgain_MSGID>() {
  return ::ProDDZGameStartAgain_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DDZGameState>() {
  return ::DDZGameState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DDZSEND_TYPE>() {
  return ::DDZSEND_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DDZKIGN_TYPE>() {
  return ::DDZKIGN_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DDZBROKEN_TYPE>() {
  return ::DDZBROKEN_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DDZBROKEN_OPERATE>() {
  return ::DDZBROKEN_OPERATE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DDZBROKEN_CODE>() {
  return ::DDZBROKEN_CODE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ddzpk_2eproto__INCLUDED
