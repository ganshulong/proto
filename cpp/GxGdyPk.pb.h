// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GxGdyPk.proto

#ifndef PROTOBUF_GxGdyPk_2eproto__INCLUDED
#define PROTOBUF_GxGdyPk_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "base.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GxGdyPk_2eproto();
void protobuf_AssignDesc_GxGdyPk_2eproto();
void protobuf_ShutdownFile_GxGdyPk_2eproto();

class ProGXGDYGameStatusResponse;
class ProGXGDYGameDeskInfoResponse;
class ProGXGDYGameReadyNotify;
class ProGXGDYGameReadyRequest;
class ProGXGDYGameReadyResponse;
class ProGXGDYGameStart;
class ProGXGDYGameDiceNotify;
class ProGXGDYGameDiceRequest;
class ProGXGDYGameDiceResult;
class ProGXGDYGameSendMahs;
class ProGXGDYGameKingData;
class ProGXGDYGameOutMahsResponse;
class ProGXGDYGameTimerPower;
class ProGXGDYGameOperateNotify;
class ProGXGDYGameOperateResult;
class ProGXGDYGameOperateRequest;
class ProGXGDYGameTrust;
class ProGXGDYGameOutMahRequest;
class ProGXGDYGameCatchCard;
class GXGDYMahList;
class GXGDYScoreList;
class GXGDYAwardList;
class ProGXGDYGameEnd;
class ProGXGDYGameQuickSoundRequest;
class ProGXGDYGameQuickSoundResponse;
class ProGXGDYGameSendDiscardMahs;
class GXGDYWeaveItem;
class GXGDYWeaveItems;
class ProGXGDYGameSendActionMahs;
class ProGXGDYGameBrokenRequest;
class ProGXGDYGameBrokenOperate;
class ProGXGDYGameBrokenNotify;
class ProGXGDYGameRuleConfig;
class ProGXGDYGameBrokenStatus;
class ProGXGDYGameDataResp;
class ProGXGDYGameRecordRequest;
class ProGXGDYGameRecordResponse;
class ProGXGDYGameUserLocationRequest;
class ProGXGDYGameSyncCardResponse;
class ProGXGDYGameUserPhoneStatusRequest;
class ProGXGDYGameUserGiveUpRequest;
class ProGXGDYGameUserHintRequest;
class ProGXGDYGameUserHintResponse;
class ProGXGDYGameUserDaTuNotify;
class ProGXGDYGameUserTeammateRequest;
class ProGXGDYGameUserDaTuRequest;
class ProGXGDYGameUserDaTuResponse;
class ProGXGDYGameUserDaTuResult;
class ProGXGDYGameShangYouResult;
class ProGXGDYGameShowFriendNotify;
class ProGXGDYGameBoomNumNotify;
class ProGXGDYGameShowBoomDataRequest;
class ProGXGDYGameShowBoomDataResponse;
class ProGXGDYGameCardTypeSelect;
class ProGXGDYGameIsSurrenderSelect;
class ProGXGDYGameIsSurrenderOperate;
class ProGXGDYGameIsAgreeSurrenderSelect;
class ProGXGDYGameIsAgreeSurrenderOperate;
class ProGXGDYGameIsAgreeSurrenderStatus;
class ProGXGDYGameSurrenderResult;
class ProGXGDYGameShowBoomNotify;
class ProGXGDYGameShowBoomOperate;
class ProGXGDYGameShowBoomResponse;

enum ProGXGDYGameStatusResponse_MSGID {
  ProGXGDYGameStatusResponse_MSGID_ID = 2200
};
bool ProGXGDYGameStatusResponse_MSGID_IsValid(int value);
const ProGXGDYGameStatusResponse_MSGID ProGXGDYGameStatusResponse_MSGID_MSGID_MIN = ProGXGDYGameStatusResponse_MSGID_ID;
const ProGXGDYGameStatusResponse_MSGID ProGXGDYGameStatusResponse_MSGID_MSGID_MAX = ProGXGDYGameStatusResponse_MSGID_ID;
const int ProGXGDYGameStatusResponse_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameStatusResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameStatusResponse_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameStatusResponse_MSGID_Name(ProGXGDYGameStatusResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameStatusResponse_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameStatusResponse_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameStatusResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameStatusResponse_MSGID>(
    ProGXGDYGameStatusResponse_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameDeskInfoResponse_MSGID {
  ProGXGDYGameDeskInfoResponse_MSGID_ID = 2201
};
bool ProGXGDYGameDeskInfoResponse_MSGID_IsValid(int value);
const ProGXGDYGameDeskInfoResponse_MSGID ProGXGDYGameDeskInfoResponse_MSGID_MSGID_MIN = ProGXGDYGameDeskInfoResponse_MSGID_ID;
const ProGXGDYGameDeskInfoResponse_MSGID ProGXGDYGameDeskInfoResponse_MSGID_MSGID_MAX = ProGXGDYGameDeskInfoResponse_MSGID_ID;
const int ProGXGDYGameDeskInfoResponse_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameDeskInfoResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameDeskInfoResponse_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameDeskInfoResponse_MSGID_Name(ProGXGDYGameDeskInfoResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameDeskInfoResponse_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameDeskInfoResponse_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameDeskInfoResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameDeskInfoResponse_MSGID>(
    ProGXGDYGameDeskInfoResponse_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameReadyNotify_MSGID {
  ProGXGDYGameReadyNotify_MSGID_ID = 2202
};
bool ProGXGDYGameReadyNotify_MSGID_IsValid(int value);
const ProGXGDYGameReadyNotify_MSGID ProGXGDYGameReadyNotify_MSGID_MSGID_MIN = ProGXGDYGameReadyNotify_MSGID_ID;
const ProGXGDYGameReadyNotify_MSGID ProGXGDYGameReadyNotify_MSGID_MSGID_MAX = ProGXGDYGameReadyNotify_MSGID_ID;
const int ProGXGDYGameReadyNotify_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameReadyNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameReadyNotify_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameReadyNotify_MSGID_Name(ProGXGDYGameReadyNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameReadyNotify_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameReadyNotify_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameReadyNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameReadyNotify_MSGID>(
    ProGXGDYGameReadyNotify_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameReadyRequest_MSGID {
  ProGXGDYGameReadyRequest_MSGID_ID = 2203
};
bool ProGXGDYGameReadyRequest_MSGID_IsValid(int value);
const ProGXGDYGameReadyRequest_MSGID ProGXGDYGameReadyRequest_MSGID_MSGID_MIN = ProGXGDYGameReadyRequest_MSGID_ID;
const ProGXGDYGameReadyRequest_MSGID ProGXGDYGameReadyRequest_MSGID_MSGID_MAX = ProGXGDYGameReadyRequest_MSGID_ID;
const int ProGXGDYGameReadyRequest_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameReadyRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameReadyRequest_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameReadyRequest_MSGID_Name(ProGXGDYGameReadyRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameReadyRequest_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameReadyRequest_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameReadyRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameReadyRequest_MSGID>(
    ProGXGDYGameReadyRequest_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameReadyResponse_MSGID {
  ProGXGDYGameReadyResponse_MSGID_ID = 2204
};
bool ProGXGDYGameReadyResponse_MSGID_IsValid(int value);
const ProGXGDYGameReadyResponse_MSGID ProGXGDYGameReadyResponse_MSGID_MSGID_MIN = ProGXGDYGameReadyResponse_MSGID_ID;
const ProGXGDYGameReadyResponse_MSGID ProGXGDYGameReadyResponse_MSGID_MSGID_MAX = ProGXGDYGameReadyResponse_MSGID_ID;
const int ProGXGDYGameReadyResponse_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameReadyResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameReadyResponse_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameReadyResponse_MSGID_Name(ProGXGDYGameReadyResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameReadyResponse_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameReadyResponse_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameReadyResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameReadyResponse_MSGID>(
    ProGXGDYGameReadyResponse_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameStart_MSGID {
  ProGXGDYGameStart_MSGID_ID = 2205
};
bool ProGXGDYGameStart_MSGID_IsValid(int value);
const ProGXGDYGameStart_MSGID ProGXGDYGameStart_MSGID_MSGID_MIN = ProGXGDYGameStart_MSGID_ID;
const ProGXGDYGameStart_MSGID ProGXGDYGameStart_MSGID_MSGID_MAX = ProGXGDYGameStart_MSGID_ID;
const int ProGXGDYGameStart_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameStart_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameStart_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameStart_MSGID_Name(ProGXGDYGameStart_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameStart_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameStart_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameStart_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameStart_MSGID>(
    ProGXGDYGameStart_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameDiceNotify_MSGID {
  ProGXGDYGameDiceNotify_MSGID_ID = 2206
};
bool ProGXGDYGameDiceNotify_MSGID_IsValid(int value);
const ProGXGDYGameDiceNotify_MSGID ProGXGDYGameDiceNotify_MSGID_MSGID_MIN = ProGXGDYGameDiceNotify_MSGID_ID;
const ProGXGDYGameDiceNotify_MSGID ProGXGDYGameDiceNotify_MSGID_MSGID_MAX = ProGXGDYGameDiceNotify_MSGID_ID;
const int ProGXGDYGameDiceNotify_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameDiceNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameDiceNotify_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameDiceNotify_MSGID_Name(ProGXGDYGameDiceNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameDiceNotify_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameDiceNotify_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameDiceNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameDiceNotify_MSGID>(
    ProGXGDYGameDiceNotify_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameDiceRequest_MSGID {
  ProGXGDYGameDiceRequest_MSGID_ID = 2207
};
bool ProGXGDYGameDiceRequest_MSGID_IsValid(int value);
const ProGXGDYGameDiceRequest_MSGID ProGXGDYGameDiceRequest_MSGID_MSGID_MIN = ProGXGDYGameDiceRequest_MSGID_ID;
const ProGXGDYGameDiceRequest_MSGID ProGXGDYGameDiceRequest_MSGID_MSGID_MAX = ProGXGDYGameDiceRequest_MSGID_ID;
const int ProGXGDYGameDiceRequest_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameDiceRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameDiceRequest_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameDiceRequest_MSGID_Name(ProGXGDYGameDiceRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameDiceRequest_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameDiceRequest_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameDiceRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameDiceRequest_MSGID>(
    ProGXGDYGameDiceRequest_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameDiceResult_MSGID {
  ProGXGDYGameDiceResult_MSGID_ID = 2208
};
bool ProGXGDYGameDiceResult_MSGID_IsValid(int value);
const ProGXGDYGameDiceResult_MSGID ProGXGDYGameDiceResult_MSGID_MSGID_MIN = ProGXGDYGameDiceResult_MSGID_ID;
const ProGXGDYGameDiceResult_MSGID ProGXGDYGameDiceResult_MSGID_MSGID_MAX = ProGXGDYGameDiceResult_MSGID_ID;
const int ProGXGDYGameDiceResult_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameDiceResult_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameDiceResult_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameDiceResult_MSGID_Name(ProGXGDYGameDiceResult_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameDiceResult_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameDiceResult_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameDiceResult_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameDiceResult_MSGID>(
    ProGXGDYGameDiceResult_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameSendMahs_MSGID {
  ProGXGDYGameSendMahs_MSGID_ID = 2209
};
bool ProGXGDYGameSendMahs_MSGID_IsValid(int value);
const ProGXGDYGameSendMahs_MSGID ProGXGDYGameSendMahs_MSGID_MSGID_MIN = ProGXGDYGameSendMahs_MSGID_ID;
const ProGXGDYGameSendMahs_MSGID ProGXGDYGameSendMahs_MSGID_MSGID_MAX = ProGXGDYGameSendMahs_MSGID_ID;
const int ProGXGDYGameSendMahs_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameSendMahs_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameSendMahs_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameSendMahs_MSGID_Name(ProGXGDYGameSendMahs_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameSendMahs_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameSendMahs_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameSendMahs_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameSendMahs_MSGID>(
    ProGXGDYGameSendMahs_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameKingData_MSGID {
  ProGXGDYGameKingData_MSGID_ID = 2210
};
bool ProGXGDYGameKingData_MSGID_IsValid(int value);
const ProGXGDYGameKingData_MSGID ProGXGDYGameKingData_MSGID_MSGID_MIN = ProGXGDYGameKingData_MSGID_ID;
const ProGXGDYGameKingData_MSGID ProGXGDYGameKingData_MSGID_MSGID_MAX = ProGXGDYGameKingData_MSGID_ID;
const int ProGXGDYGameKingData_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameKingData_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameKingData_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameKingData_MSGID_Name(ProGXGDYGameKingData_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameKingData_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameKingData_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameKingData_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameKingData_MSGID>(
    ProGXGDYGameKingData_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameOutMahsResponse_MSGID {
  ProGXGDYGameOutMahsResponse_MSGID_ID = 2211
};
bool ProGXGDYGameOutMahsResponse_MSGID_IsValid(int value);
const ProGXGDYGameOutMahsResponse_MSGID ProGXGDYGameOutMahsResponse_MSGID_MSGID_MIN = ProGXGDYGameOutMahsResponse_MSGID_ID;
const ProGXGDYGameOutMahsResponse_MSGID ProGXGDYGameOutMahsResponse_MSGID_MSGID_MAX = ProGXGDYGameOutMahsResponse_MSGID_ID;
const int ProGXGDYGameOutMahsResponse_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameOutMahsResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameOutMahsResponse_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameOutMahsResponse_MSGID_Name(ProGXGDYGameOutMahsResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameOutMahsResponse_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameOutMahsResponse_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameOutMahsResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameOutMahsResponse_MSGID>(
    ProGXGDYGameOutMahsResponse_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameTimerPower_MSGID {
  ProGXGDYGameTimerPower_MSGID_ID = 2212
};
bool ProGXGDYGameTimerPower_MSGID_IsValid(int value);
const ProGXGDYGameTimerPower_MSGID ProGXGDYGameTimerPower_MSGID_MSGID_MIN = ProGXGDYGameTimerPower_MSGID_ID;
const ProGXGDYGameTimerPower_MSGID ProGXGDYGameTimerPower_MSGID_MSGID_MAX = ProGXGDYGameTimerPower_MSGID_ID;
const int ProGXGDYGameTimerPower_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameTimerPower_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameTimerPower_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameTimerPower_MSGID_Name(ProGXGDYGameTimerPower_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameTimerPower_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameTimerPower_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameTimerPower_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameTimerPower_MSGID>(
    ProGXGDYGameTimerPower_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameOperateNotify_MSGID {
  ProGXGDYGameOperateNotify_MSGID_ID = 2213
};
bool ProGXGDYGameOperateNotify_MSGID_IsValid(int value);
const ProGXGDYGameOperateNotify_MSGID ProGXGDYGameOperateNotify_MSGID_MSGID_MIN = ProGXGDYGameOperateNotify_MSGID_ID;
const ProGXGDYGameOperateNotify_MSGID ProGXGDYGameOperateNotify_MSGID_MSGID_MAX = ProGXGDYGameOperateNotify_MSGID_ID;
const int ProGXGDYGameOperateNotify_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameOperateNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameOperateNotify_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameOperateNotify_MSGID_Name(ProGXGDYGameOperateNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameOperateNotify_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameOperateNotify_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameOperateNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameOperateNotify_MSGID>(
    ProGXGDYGameOperateNotify_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameOperateResult_MSGID {
  ProGXGDYGameOperateResult_MSGID_ID = 2214
};
bool ProGXGDYGameOperateResult_MSGID_IsValid(int value);
const ProGXGDYGameOperateResult_MSGID ProGXGDYGameOperateResult_MSGID_MSGID_MIN = ProGXGDYGameOperateResult_MSGID_ID;
const ProGXGDYGameOperateResult_MSGID ProGXGDYGameOperateResult_MSGID_MSGID_MAX = ProGXGDYGameOperateResult_MSGID_ID;
const int ProGXGDYGameOperateResult_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameOperateResult_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameOperateResult_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameOperateResult_MSGID_Name(ProGXGDYGameOperateResult_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameOperateResult_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameOperateResult_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameOperateResult_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameOperateResult_MSGID>(
    ProGXGDYGameOperateResult_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameOperateRequest_MSGID {
  ProGXGDYGameOperateRequest_MSGID_ID = 2215
};
bool ProGXGDYGameOperateRequest_MSGID_IsValid(int value);
const ProGXGDYGameOperateRequest_MSGID ProGXGDYGameOperateRequest_MSGID_MSGID_MIN = ProGXGDYGameOperateRequest_MSGID_ID;
const ProGXGDYGameOperateRequest_MSGID ProGXGDYGameOperateRequest_MSGID_MSGID_MAX = ProGXGDYGameOperateRequest_MSGID_ID;
const int ProGXGDYGameOperateRequest_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameOperateRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameOperateRequest_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameOperateRequest_MSGID_Name(ProGXGDYGameOperateRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameOperateRequest_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameOperateRequest_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameOperateRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameOperateRequest_MSGID>(
    ProGXGDYGameOperateRequest_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameTrust_MSGID {
  ProGXGDYGameTrust_MSGID_ID = 2216
};
bool ProGXGDYGameTrust_MSGID_IsValid(int value);
const ProGXGDYGameTrust_MSGID ProGXGDYGameTrust_MSGID_MSGID_MIN = ProGXGDYGameTrust_MSGID_ID;
const ProGXGDYGameTrust_MSGID ProGXGDYGameTrust_MSGID_MSGID_MAX = ProGXGDYGameTrust_MSGID_ID;
const int ProGXGDYGameTrust_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameTrust_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameTrust_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameTrust_MSGID_Name(ProGXGDYGameTrust_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameTrust_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameTrust_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameTrust_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameTrust_MSGID>(
    ProGXGDYGameTrust_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameOutMahRequest_MSGID {
  ProGXGDYGameOutMahRequest_MSGID_ID = 2217
};
bool ProGXGDYGameOutMahRequest_MSGID_IsValid(int value);
const ProGXGDYGameOutMahRequest_MSGID ProGXGDYGameOutMahRequest_MSGID_MSGID_MIN = ProGXGDYGameOutMahRequest_MSGID_ID;
const ProGXGDYGameOutMahRequest_MSGID ProGXGDYGameOutMahRequest_MSGID_MSGID_MAX = ProGXGDYGameOutMahRequest_MSGID_ID;
const int ProGXGDYGameOutMahRequest_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameOutMahRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameOutMahRequest_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameOutMahRequest_MSGID_Name(ProGXGDYGameOutMahRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameOutMahRequest_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameOutMahRequest_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameOutMahRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameOutMahRequest_MSGID>(
    ProGXGDYGameOutMahRequest_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameCatchCard_MSGID {
  ProGXGDYGameCatchCard_MSGID_ID = 2218
};
bool ProGXGDYGameCatchCard_MSGID_IsValid(int value);
const ProGXGDYGameCatchCard_MSGID ProGXGDYGameCatchCard_MSGID_MSGID_MIN = ProGXGDYGameCatchCard_MSGID_ID;
const ProGXGDYGameCatchCard_MSGID ProGXGDYGameCatchCard_MSGID_MSGID_MAX = ProGXGDYGameCatchCard_MSGID_ID;
const int ProGXGDYGameCatchCard_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameCatchCard_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameCatchCard_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameCatchCard_MSGID_Name(ProGXGDYGameCatchCard_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameCatchCard_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameCatchCard_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameCatchCard_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameCatchCard_MSGID>(
    ProGXGDYGameCatchCard_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameEnd_MSGID {
  ProGXGDYGameEnd_MSGID_ID = 2219
};
bool ProGXGDYGameEnd_MSGID_IsValid(int value);
const ProGXGDYGameEnd_MSGID ProGXGDYGameEnd_MSGID_MSGID_MIN = ProGXGDYGameEnd_MSGID_ID;
const ProGXGDYGameEnd_MSGID ProGXGDYGameEnd_MSGID_MSGID_MAX = ProGXGDYGameEnd_MSGID_ID;
const int ProGXGDYGameEnd_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameEnd_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameEnd_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameEnd_MSGID_Name(ProGXGDYGameEnd_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameEnd_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameEnd_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameEnd_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameEnd_MSGID>(
    ProGXGDYGameEnd_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameQuickSoundRequest_MSGID {
  ProGXGDYGameQuickSoundRequest_MSGID_ID = 2220
};
bool ProGXGDYGameQuickSoundRequest_MSGID_IsValid(int value);
const ProGXGDYGameQuickSoundRequest_MSGID ProGXGDYGameQuickSoundRequest_MSGID_MSGID_MIN = ProGXGDYGameQuickSoundRequest_MSGID_ID;
const ProGXGDYGameQuickSoundRequest_MSGID ProGXGDYGameQuickSoundRequest_MSGID_MSGID_MAX = ProGXGDYGameQuickSoundRequest_MSGID_ID;
const int ProGXGDYGameQuickSoundRequest_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameQuickSoundRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameQuickSoundRequest_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameQuickSoundRequest_MSGID_Name(ProGXGDYGameQuickSoundRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameQuickSoundRequest_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameQuickSoundRequest_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameQuickSoundRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameQuickSoundRequest_MSGID>(
    ProGXGDYGameQuickSoundRequest_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameQuickSoundResponse_MSGID {
  ProGXGDYGameQuickSoundResponse_MSGID_ID = 2221
};
bool ProGXGDYGameQuickSoundResponse_MSGID_IsValid(int value);
const ProGXGDYGameQuickSoundResponse_MSGID ProGXGDYGameQuickSoundResponse_MSGID_MSGID_MIN = ProGXGDYGameQuickSoundResponse_MSGID_ID;
const ProGXGDYGameQuickSoundResponse_MSGID ProGXGDYGameQuickSoundResponse_MSGID_MSGID_MAX = ProGXGDYGameQuickSoundResponse_MSGID_ID;
const int ProGXGDYGameQuickSoundResponse_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameQuickSoundResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameQuickSoundResponse_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameQuickSoundResponse_MSGID_Name(ProGXGDYGameQuickSoundResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameQuickSoundResponse_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameQuickSoundResponse_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameQuickSoundResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameQuickSoundResponse_MSGID>(
    ProGXGDYGameQuickSoundResponse_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameSendDiscardMahs_MSGID {
  ProGXGDYGameSendDiscardMahs_MSGID_ID = 2222
};
bool ProGXGDYGameSendDiscardMahs_MSGID_IsValid(int value);
const ProGXGDYGameSendDiscardMahs_MSGID ProGXGDYGameSendDiscardMahs_MSGID_MSGID_MIN = ProGXGDYGameSendDiscardMahs_MSGID_ID;
const ProGXGDYGameSendDiscardMahs_MSGID ProGXGDYGameSendDiscardMahs_MSGID_MSGID_MAX = ProGXGDYGameSendDiscardMahs_MSGID_ID;
const int ProGXGDYGameSendDiscardMahs_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameSendDiscardMahs_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameSendDiscardMahs_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameSendDiscardMahs_MSGID_Name(ProGXGDYGameSendDiscardMahs_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameSendDiscardMahs_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameSendDiscardMahs_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameSendDiscardMahs_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameSendDiscardMahs_MSGID>(
    ProGXGDYGameSendDiscardMahs_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameSendActionMahs_MSGID {
  ProGXGDYGameSendActionMahs_MSGID_ID = 2223
};
bool ProGXGDYGameSendActionMahs_MSGID_IsValid(int value);
const ProGXGDYGameSendActionMahs_MSGID ProGXGDYGameSendActionMahs_MSGID_MSGID_MIN = ProGXGDYGameSendActionMahs_MSGID_ID;
const ProGXGDYGameSendActionMahs_MSGID ProGXGDYGameSendActionMahs_MSGID_MSGID_MAX = ProGXGDYGameSendActionMahs_MSGID_ID;
const int ProGXGDYGameSendActionMahs_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameSendActionMahs_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameSendActionMahs_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameSendActionMahs_MSGID_Name(ProGXGDYGameSendActionMahs_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameSendActionMahs_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameSendActionMahs_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameSendActionMahs_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameSendActionMahs_MSGID>(
    ProGXGDYGameSendActionMahs_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameBrokenRequest_MSGID {
  ProGXGDYGameBrokenRequest_MSGID_ID = 2224
};
bool ProGXGDYGameBrokenRequest_MSGID_IsValid(int value);
const ProGXGDYGameBrokenRequest_MSGID ProGXGDYGameBrokenRequest_MSGID_MSGID_MIN = ProGXGDYGameBrokenRequest_MSGID_ID;
const ProGXGDYGameBrokenRequest_MSGID ProGXGDYGameBrokenRequest_MSGID_MSGID_MAX = ProGXGDYGameBrokenRequest_MSGID_ID;
const int ProGXGDYGameBrokenRequest_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameBrokenRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameBrokenRequest_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameBrokenRequest_MSGID_Name(ProGXGDYGameBrokenRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameBrokenRequest_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameBrokenRequest_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameBrokenRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameBrokenRequest_MSGID>(
    ProGXGDYGameBrokenRequest_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameBrokenOperate_MSGID {
  ProGXGDYGameBrokenOperate_MSGID_ID = 2225
};
bool ProGXGDYGameBrokenOperate_MSGID_IsValid(int value);
const ProGXGDYGameBrokenOperate_MSGID ProGXGDYGameBrokenOperate_MSGID_MSGID_MIN = ProGXGDYGameBrokenOperate_MSGID_ID;
const ProGXGDYGameBrokenOperate_MSGID ProGXGDYGameBrokenOperate_MSGID_MSGID_MAX = ProGXGDYGameBrokenOperate_MSGID_ID;
const int ProGXGDYGameBrokenOperate_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameBrokenOperate_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameBrokenOperate_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameBrokenOperate_MSGID_Name(ProGXGDYGameBrokenOperate_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameBrokenOperate_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameBrokenOperate_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameBrokenOperate_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameBrokenOperate_MSGID>(
    ProGXGDYGameBrokenOperate_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameBrokenNotify_MSGID {
  ProGXGDYGameBrokenNotify_MSGID_ID = 2226
};
bool ProGXGDYGameBrokenNotify_MSGID_IsValid(int value);
const ProGXGDYGameBrokenNotify_MSGID ProGXGDYGameBrokenNotify_MSGID_MSGID_MIN = ProGXGDYGameBrokenNotify_MSGID_ID;
const ProGXGDYGameBrokenNotify_MSGID ProGXGDYGameBrokenNotify_MSGID_MSGID_MAX = ProGXGDYGameBrokenNotify_MSGID_ID;
const int ProGXGDYGameBrokenNotify_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameBrokenNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameBrokenNotify_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameBrokenNotify_MSGID_Name(ProGXGDYGameBrokenNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameBrokenNotify_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameBrokenNotify_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameBrokenNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameBrokenNotify_MSGID>(
    ProGXGDYGameBrokenNotify_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameRuleConfig_MSGID {
  ProGXGDYGameRuleConfig_MSGID_ID = 2227
};
bool ProGXGDYGameRuleConfig_MSGID_IsValid(int value);
const ProGXGDYGameRuleConfig_MSGID ProGXGDYGameRuleConfig_MSGID_MSGID_MIN = ProGXGDYGameRuleConfig_MSGID_ID;
const ProGXGDYGameRuleConfig_MSGID ProGXGDYGameRuleConfig_MSGID_MSGID_MAX = ProGXGDYGameRuleConfig_MSGID_ID;
const int ProGXGDYGameRuleConfig_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameRuleConfig_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameRuleConfig_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameRuleConfig_MSGID_Name(ProGXGDYGameRuleConfig_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameRuleConfig_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameRuleConfig_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameRuleConfig_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameRuleConfig_MSGID>(
    ProGXGDYGameRuleConfig_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameBrokenStatus_MSGID {
  ProGXGDYGameBrokenStatus_MSGID_ID = 2228
};
bool ProGXGDYGameBrokenStatus_MSGID_IsValid(int value);
const ProGXGDYGameBrokenStatus_MSGID ProGXGDYGameBrokenStatus_MSGID_MSGID_MIN = ProGXGDYGameBrokenStatus_MSGID_ID;
const ProGXGDYGameBrokenStatus_MSGID ProGXGDYGameBrokenStatus_MSGID_MSGID_MAX = ProGXGDYGameBrokenStatus_MSGID_ID;
const int ProGXGDYGameBrokenStatus_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameBrokenStatus_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameBrokenStatus_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameBrokenStatus_MSGID_Name(ProGXGDYGameBrokenStatus_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameBrokenStatus_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameBrokenStatus_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameBrokenStatus_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameBrokenStatus_MSGID>(
    ProGXGDYGameBrokenStatus_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameDataResp_MSGID {
  ProGXGDYGameDataResp_MSGID_ID = 2229
};
bool ProGXGDYGameDataResp_MSGID_IsValid(int value);
const ProGXGDYGameDataResp_MSGID ProGXGDYGameDataResp_MSGID_MSGID_MIN = ProGXGDYGameDataResp_MSGID_ID;
const ProGXGDYGameDataResp_MSGID ProGXGDYGameDataResp_MSGID_MSGID_MAX = ProGXGDYGameDataResp_MSGID_ID;
const int ProGXGDYGameDataResp_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameDataResp_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameDataResp_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameDataResp_MSGID_Name(ProGXGDYGameDataResp_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameDataResp_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameDataResp_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameDataResp_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameDataResp_MSGID>(
    ProGXGDYGameDataResp_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameRecordRequest_MSGID {
  ProGXGDYGameRecordRequest_MSGID_ID = 2230
};
bool ProGXGDYGameRecordRequest_MSGID_IsValid(int value);
const ProGXGDYGameRecordRequest_MSGID ProGXGDYGameRecordRequest_MSGID_MSGID_MIN = ProGXGDYGameRecordRequest_MSGID_ID;
const ProGXGDYGameRecordRequest_MSGID ProGXGDYGameRecordRequest_MSGID_MSGID_MAX = ProGXGDYGameRecordRequest_MSGID_ID;
const int ProGXGDYGameRecordRequest_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameRecordRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameRecordRequest_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameRecordRequest_MSGID_Name(ProGXGDYGameRecordRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameRecordRequest_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameRecordRequest_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameRecordRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameRecordRequest_MSGID>(
    ProGXGDYGameRecordRequest_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameRecordResponse_MSGID {
  ProGXGDYGameRecordResponse_MSGID_ID = 2231
};
bool ProGXGDYGameRecordResponse_MSGID_IsValid(int value);
const ProGXGDYGameRecordResponse_MSGID ProGXGDYGameRecordResponse_MSGID_MSGID_MIN = ProGXGDYGameRecordResponse_MSGID_ID;
const ProGXGDYGameRecordResponse_MSGID ProGXGDYGameRecordResponse_MSGID_MSGID_MAX = ProGXGDYGameRecordResponse_MSGID_ID;
const int ProGXGDYGameRecordResponse_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameRecordResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameRecordResponse_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameRecordResponse_MSGID_Name(ProGXGDYGameRecordResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameRecordResponse_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameRecordResponse_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameRecordResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameRecordResponse_MSGID>(
    ProGXGDYGameRecordResponse_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameUserLocationRequest_MSGID {
  ProGXGDYGameUserLocationRequest_MSGID_ID = 2232
};
bool ProGXGDYGameUserLocationRequest_MSGID_IsValid(int value);
const ProGXGDYGameUserLocationRequest_MSGID ProGXGDYGameUserLocationRequest_MSGID_MSGID_MIN = ProGXGDYGameUserLocationRequest_MSGID_ID;
const ProGXGDYGameUserLocationRequest_MSGID ProGXGDYGameUserLocationRequest_MSGID_MSGID_MAX = ProGXGDYGameUserLocationRequest_MSGID_ID;
const int ProGXGDYGameUserLocationRequest_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameUserLocationRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameUserLocationRequest_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameUserLocationRequest_MSGID_Name(ProGXGDYGameUserLocationRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameUserLocationRequest_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameUserLocationRequest_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameUserLocationRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameUserLocationRequest_MSGID>(
    ProGXGDYGameUserLocationRequest_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameSyncCardResponse_MSGID {
  ProGXGDYGameSyncCardResponse_MSGID_ID = 2233
};
bool ProGXGDYGameSyncCardResponse_MSGID_IsValid(int value);
const ProGXGDYGameSyncCardResponse_MSGID ProGXGDYGameSyncCardResponse_MSGID_MSGID_MIN = ProGXGDYGameSyncCardResponse_MSGID_ID;
const ProGXGDYGameSyncCardResponse_MSGID ProGXGDYGameSyncCardResponse_MSGID_MSGID_MAX = ProGXGDYGameSyncCardResponse_MSGID_ID;
const int ProGXGDYGameSyncCardResponse_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameSyncCardResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameSyncCardResponse_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameSyncCardResponse_MSGID_Name(ProGXGDYGameSyncCardResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameSyncCardResponse_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameSyncCardResponse_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameSyncCardResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameSyncCardResponse_MSGID>(
    ProGXGDYGameSyncCardResponse_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameUserPhoneStatusRequest_MSGID {
  ProGXGDYGameUserPhoneStatusRequest_MSGID_ID = 2234
};
bool ProGXGDYGameUserPhoneStatusRequest_MSGID_IsValid(int value);
const ProGXGDYGameUserPhoneStatusRequest_MSGID ProGXGDYGameUserPhoneStatusRequest_MSGID_MSGID_MIN = ProGXGDYGameUserPhoneStatusRequest_MSGID_ID;
const ProGXGDYGameUserPhoneStatusRequest_MSGID ProGXGDYGameUserPhoneStatusRequest_MSGID_MSGID_MAX = ProGXGDYGameUserPhoneStatusRequest_MSGID_ID;
const int ProGXGDYGameUserPhoneStatusRequest_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameUserPhoneStatusRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameUserPhoneStatusRequest_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameUserPhoneStatusRequest_MSGID_Name(ProGXGDYGameUserPhoneStatusRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameUserPhoneStatusRequest_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameUserPhoneStatusRequest_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameUserPhoneStatusRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameUserPhoneStatusRequest_MSGID>(
    ProGXGDYGameUserPhoneStatusRequest_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameUserGiveUpRequest_MSGID {
  ProGXGDYGameUserGiveUpRequest_MSGID_ID = 2235
};
bool ProGXGDYGameUserGiveUpRequest_MSGID_IsValid(int value);
const ProGXGDYGameUserGiveUpRequest_MSGID ProGXGDYGameUserGiveUpRequest_MSGID_MSGID_MIN = ProGXGDYGameUserGiveUpRequest_MSGID_ID;
const ProGXGDYGameUserGiveUpRequest_MSGID ProGXGDYGameUserGiveUpRequest_MSGID_MSGID_MAX = ProGXGDYGameUserGiveUpRequest_MSGID_ID;
const int ProGXGDYGameUserGiveUpRequest_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameUserGiveUpRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameUserGiveUpRequest_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameUserGiveUpRequest_MSGID_Name(ProGXGDYGameUserGiveUpRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameUserGiveUpRequest_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameUserGiveUpRequest_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameUserGiveUpRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameUserGiveUpRequest_MSGID>(
    ProGXGDYGameUserGiveUpRequest_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameUserHintRequest_MSGID {
  ProGXGDYGameUserHintRequest_MSGID_ID = 2236
};
bool ProGXGDYGameUserHintRequest_MSGID_IsValid(int value);
const ProGXGDYGameUserHintRequest_MSGID ProGXGDYGameUserHintRequest_MSGID_MSGID_MIN = ProGXGDYGameUserHintRequest_MSGID_ID;
const ProGXGDYGameUserHintRequest_MSGID ProGXGDYGameUserHintRequest_MSGID_MSGID_MAX = ProGXGDYGameUserHintRequest_MSGID_ID;
const int ProGXGDYGameUserHintRequest_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameUserHintRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameUserHintRequest_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameUserHintRequest_MSGID_Name(ProGXGDYGameUserHintRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameUserHintRequest_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameUserHintRequest_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameUserHintRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameUserHintRequest_MSGID>(
    ProGXGDYGameUserHintRequest_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameUserHintResponse_MSGID {
  ProGXGDYGameUserHintResponse_MSGID_ID = 2237
};
bool ProGXGDYGameUserHintResponse_MSGID_IsValid(int value);
const ProGXGDYGameUserHintResponse_MSGID ProGXGDYGameUserHintResponse_MSGID_MSGID_MIN = ProGXGDYGameUserHintResponse_MSGID_ID;
const ProGXGDYGameUserHintResponse_MSGID ProGXGDYGameUserHintResponse_MSGID_MSGID_MAX = ProGXGDYGameUserHintResponse_MSGID_ID;
const int ProGXGDYGameUserHintResponse_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameUserHintResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameUserHintResponse_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameUserHintResponse_MSGID_Name(ProGXGDYGameUserHintResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameUserHintResponse_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameUserHintResponse_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameUserHintResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameUserHintResponse_MSGID>(
    ProGXGDYGameUserHintResponse_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameUserDaTuNotify_MSGID {
  ProGXGDYGameUserDaTuNotify_MSGID_ID = 2238
};
bool ProGXGDYGameUserDaTuNotify_MSGID_IsValid(int value);
const ProGXGDYGameUserDaTuNotify_MSGID ProGXGDYGameUserDaTuNotify_MSGID_MSGID_MIN = ProGXGDYGameUserDaTuNotify_MSGID_ID;
const ProGXGDYGameUserDaTuNotify_MSGID ProGXGDYGameUserDaTuNotify_MSGID_MSGID_MAX = ProGXGDYGameUserDaTuNotify_MSGID_ID;
const int ProGXGDYGameUserDaTuNotify_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameUserDaTuNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameUserDaTuNotify_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameUserDaTuNotify_MSGID_Name(ProGXGDYGameUserDaTuNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameUserDaTuNotify_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameUserDaTuNotify_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameUserDaTuNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameUserDaTuNotify_MSGID>(
    ProGXGDYGameUserDaTuNotify_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameUserTeammateRequest_MSGID {
  ProGXGDYGameUserTeammateRequest_MSGID_ID = 2239
};
bool ProGXGDYGameUserTeammateRequest_MSGID_IsValid(int value);
const ProGXGDYGameUserTeammateRequest_MSGID ProGXGDYGameUserTeammateRequest_MSGID_MSGID_MIN = ProGXGDYGameUserTeammateRequest_MSGID_ID;
const ProGXGDYGameUserTeammateRequest_MSGID ProGXGDYGameUserTeammateRequest_MSGID_MSGID_MAX = ProGXGDYGameUserTeammateRequest_MSGID_ID;
const int ProGXGDYGameUserTeammateRequest_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameUserTeammateRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameUserTeammateRequest_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameUserTeammateRequest_MSGID_Name(ProGXGDYGameUserTeammateRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameUserTeammateRequest_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameUserTeammateRequest_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameUserTeammateRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameUserTeammateRequest_MSGID>(
    ProGXGDYGameUserTeammateRequest_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameUserDaTuRequest_MSGID {
  ProGXGDYGameUserDaTuRequest_MSGID_ID = 2240
};
bool ProGXGDYGameUserDaTuRequest_MSGID_IsValid(int value);
const ProGXGDYGameUserDaTuRequest_MSGID ProGXGDYGameUserDaTuRequest_MSGID_MSGID_MIN = ProGXGDYGameUserDaTuRequest_MSGID_ID;
const ProGXGDYGameUserDaTuRequest_MSGID ProGXGDYGameUserDaTuRequest_MSGID_MSGID_MAX = ProGXGDYGameUserDaTuRequest_MSGID_ID;
const int ProGXGDYGameUserDaTuRequest_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameUserDaTuRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameUserDaTuRequest_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameUserDaTuRequest_MSGID_Name(ProGXGDYGameUserDaTuRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameUserDaTuRequest_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameUserDaTuRequest_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameUserDaTuRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameUserDaTuRequest_MSGID>(
    ProGXGDYGameUserDaTuRequest_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameUserDaTuResponse_MSGID {
  ProGXGDYGameUserDaTuResponse_MSGID_ID = 2241
};
bool ProGXGDYGameUserDaTuResponse_MSGID_IsValid(int value);
const ProGXGDYGameUserDaTuResponse_MSGID ProGXGDYGameUserDaTuResponse_MSGID_MSGID_MIN = ProGXGDYGameUserDaTuResponse_MSGID_ID;
const ProGXGDYGameUserDaTuResponse_MSGID ProGXGDYGameUserDaTuResponse_MSGID_MSGID_MAX = ProGXGDYGameUserDaTuResponse_MSGID_ID;
const int ProGXGDYGameUserDaTuResponse_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameUserDaTuResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameUserDaTuResponse_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameUserDaTuResponse_MSGID_Name(ProGXGDYGameUserDaTuResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameUserDaTuResponse_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameUserDaTuResponse_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameUserDaTuResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameUserDaTuResponse_MSGID>(
    ProGXGDYGameUserDaTuResponse_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameUserDaTuResult_MSGID {
  ProGXGDYGameUserDaTuResult_MSGID_ID = 2242
};
bool ProGXGDYGameUserDaTuResult_MSGID_IsValid(int value);
const ProGXGDYGameUserDaTuResult_MSGID ProGXGDYGameUserDaTuResult_MSGID_MSGID_MIN = ProGXGDYGameUserDaTuResult_MSGID_ID;
const ProGXGDYGameUserDaTuResult_MSGID ProGXGDYGameUserDaTuResult_MSGID_MSGID_MAX = ProGXGDYGameUserDaTuResult_MSGID_ID;
const int ProGXGDYGameUserDaTuResult_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameUserDaTuResult_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameUserDaTuResult_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameUserDaTuResult_MSGID_Name(ProGXGDYGameUserDaTuResult_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameUserDaTuResult_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameUserDaTuResult_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameUserDaTuResult_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameUserDaTuResult_MSGID>(
    ProGXGDYGameUserDaTuResult_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameShangYouResult_MSGID {
  ProGXGDYGameShangYouResult_MSGID_ID = 2243
};
bool ProGXGDYGameShangYouResult_MSGID_IsValid(int value);
const ProGXGDYGameShangYouResult_MSGID ProGXGDYGameShangYouResult_MSGID_MSGID_MIN = ProGXGDYGameShangYouResult_MSGID_ID;
const ProGXGDYGameShangYouResult_MSGID ProGXGDYGameShangYouResult_MSGID_MSGID_MAX = ProGXGDYGameShangYouResult_MSGID_ID;
const int ProGXGDYGameShangYouResult_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameShangYouResult_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameShangYouResult_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameShangYouResult_MSGID_Name(ProGXGDYGameShangYouResult_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameShangYouResult_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameShangYouResult_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameShangYouResult_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameShangYouResult_MSGID>(
    ProGXGDYGameShangYouResult_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameShowFriendNotify_MSGID {
  ProGXGDYGameShowFriendNotify_MSGID_ID = 2244
};
bool ProGXGDYGameShowFriendNotify_MSGID_IsValid(int value);
const ProGXGDYGameShowFriendNotify_MSGID ProGXGDYGameShowFriendNotify_MSGID_MSGID_MIN = ProGXGDYGameShowFriendNotify_MSGID_ID;
const ProGXGDYGameShowFriendNotify_MSGID ProGXGDYGameShowFriendNotify_MSGID_MSGID_MAX = ProGXGDYGameShowFriendNotify_MSGID_ID;
const int ProGXGDYGameShowFriendNotify_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameShowFriendNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameShowFriendNotify_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameShowFriendNotify_MSGID_Name(ProGXGDYGameShowFriendNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameShowFriendNotify_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameShowFriendNotify_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameShowFriendNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameShowFriendNotify_MSGID>(
    ProGXGDYGameShowFriendNotify_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameBoomNumNotify_MSGID {
  ProGXGDYGameBoomNumNotify_MSGID_ID = 2245
};
bool ProGXGDYGameBoomNumNotify_MSGID_IsValid(int value);
const ProGXGDYGameBoomNumNotify_MSGID ProGXGDYGameBoomNumNotify_MSGID_MSGID_MIN = ProGXGDYGameBoomNumNotify_MSGID_ID;
const ProGXGDYGameBoomNumNotify_MSGID ProGXGDYGameBoomNumNotify_MSGID_MSGID_MAX = ProGXGDYGameBoomNumNotify_MSGID_ID;
const int ProGXGDYGameBoomNumNotify_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameBoomNumNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameBoomNumNotify_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameBoomNumNotify_MSGID_Name(ProGXGDYGameBoomNumNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameBoomNumNotify_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameBoomNumNotify_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameBoomNumNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameBoomNumNotify_MSGID>(
    ProGXGDYGameBoomNumNotify_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameShowBoomDataRequest_MSGID {
  ProGXGDYGameShowBoomDataRequest_MSGID_ID = 2246
};
bool ProGXGDYGameShowBoomDataRequest_MSGID_IsValid(int value);
const ProGXGDYGameShowBoomDataRequest_MSGID ProGXGDYGameShowBoomDataRequest_MSGID_MSGID_MIN = ProGXGDYGameShowBoomDataRequest_MSGID_ID;
const ProGXGDYGameShowBoomDataRequest_MSGID ProGXGDYGameShowBoomDataRequest_MSGID_MSGID_MAX = ProGXGDYGameShowBoomDataRequest_MSGID_ID;
const int ProGXGDYGameShowBoomDataRequest_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameShowBoomDataRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameShowBoomDataRequest_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameShowBoomDataRequest_MSGID_Name(ProGXGDYGameShowBoomDataRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameShowBoomDataRequest_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameShowBoomDataRequest_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameShowBoomDataRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameShowBoomDataRequest_MSGID>(
    ProGXGDYGameShowBoomDataRequest_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameShowBoomDataResponse_MSGID {
  ProGXGDYGameShowBoomDataResponse_MSGID_ID = 2247
};
bool ProGXGDYGameShowBoomDataResponse_MSGID_IsValid(int value);
const ProGXGDYGameShowBoomDataResponse_MSGID ProGXGDYGameShowBoomDataResponse_MSGID_MSGID_MIN = ProGXGDYGameShowBoomDataResponse_MSGID_ID;
const ProGXGDYGameShowBoomDataResponse_MSGID ProGXGDYGameShowBoomDataResponse_MSGID_MSGID_MAX = ProGXGDYGameShowBoomDataResponse_MSGID_ID;
const int ProGXGDYGameShowBoomDataResponse_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameShowBoomDataResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameShowBoomDataResponse_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameShowBoomDataResponse_MSGID_Name(ProGXGDYGameShowBoomDataResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameShowBoomDataResponse_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameShowBoomDataResponse_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameShowBoomDataResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameShowBoomDataResponse_MSGID>(
    ProGXGDYGameShowBoomDataResponse_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameCardTypeSelect_MSGID {
  ProGXGDYGameCardTypeSelect_MSGID_ID = 2248
};
bool ProGXGDYGameCardTypeSelect_MSGID_IsValid(int value);
const ProGXGDYGameCardTypeSelect_MSGID ProGXGDYGameCardTypeSelect_MSGID_MSGID_MIN = ProGXGDYGameCardTypeSelect_MSGID_ID;
const ProGXGDYGameCardTypeSelect_MSGID ProGXGDYGameCardTypeSelect_MSGID_MSGID_MAX = ProGXGDYGameCardTypeSelect_MSGID_ID;
const int ProGXGDYGameCardTypeSelect_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameCardTypeSelect_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameCardTypeSelect_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameCardTypeSelect_MSGID_Name(ProGXGDYGameCardTypeSelect_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameCardTypeSelect_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameCardTypeSelect_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameCardTypeSelect_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameCardTypeSelect_MSGID>(
    ProGXGDYGameCardTypeSelect_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameIsSurrenderSelect_MSGID {
  ProGXGDYGameIsSurrenderSelect_MSGID_ID = 2249
};
bool ProGXGDYGameIsSurrenderSelect_MSGID_IsValid(int value);
const ProGXGDYGameIsSurrenderSelect_MSGID ProGXGDYGameIsSurrenderSelect_MSGID_MSGID_MIN = ProGXGDYGameIsSurrenderSelect_MSGID_ID;
const ProGXGDYGameIsSurrenderSelect_MSGID ProGXGDYGameIsSurrenderSelect_MSGID_MSGID_MAX = ProGXGDYGameIsSurrenderSelect_MSGID_ID;
const int ProGXGDYGameIsSurrenderSelect_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameIsSurrenderSelect_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameIsSurrenderSelect_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameIsSurrenderSelect_MSGID_Name(ProGXGDYGameIsSurrenderSelect_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameIsSurrenderSelect_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameIsSurrenderSelect_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameIsSurrenderSelect_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameIsSurrenderSelect_MSGID>(
    ProGXGDYGameIsSurrenderSelect_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameIsSurrenderOperate_MSGID {
  ProGXGDYGameIsSurrenderOperate_MSGID_ID = 2250
};
bool ProGXGDYGameIsSurrenderOperate_MSGID_IsValid(int value);
const ProGXGDYGameIsSurrenderOperate_MSGID ProGXGDYGameIsSurrenderOperate_MSGID_MSGID_MIN = ProGXGDYGameIsSurrenderOperate_MSGID_ID;
const ProGXGDYGameIsSurrenderOperate_MSGID ProGXGDYGameIsSurrenderOperate_MSGID_MSGID_MAX = ProGXGDYGameIsSurrenderOperate_MSGID_ID;
const int ProGXGDYGameIsSurrenderOperate_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameIsSurrenderOperate_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameIsSurrenderOperate_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameIsSurrenderOperate_MSGID_Name(ProGXGDYGameIsSurrenderOperate_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameIsSurrenderOperate_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameIsSurrenderOperate_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameIsSurrenderOperate_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameIsSurrenderOperate_MSGID>(
    ProGXGDYGameIsSurrenderOperate_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameIsAgreeSurrenderSelect_MSGID {
  ProGXGDYGameIsAgreeSurrenderSelect_MSGID_ID = 2251
};
bool ProGXGDYGameIsAgreeSurrenderSelect_MSGID_IsValid(int value);
const ProGXGDYGameIsAgreeSurrenderSelect_MSGID ProGXGDYGameIsAgreeSurrenderSelect_MSGID_MSGID_MIN = ProGXGDYGameIsAgreeSurrenderSelect_MSGID_ID;
const ProGXGDYGameIsAgreeSurrenderSelect_MSGID ProGXGDYGameIsAgreeSurrenderSelect_MSGID_MSGID_MAX = ProGXGDYGameIsAgreeSurrenderSelect_MSGID_ID;
const int ProGXGDYGameIsAgreeSurrenderSelect_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameIsAgreeSurrenderSelect_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameIsAgreeSurrenderSelect_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameIsAgreeSurrenderSelect_MSGID_Name(ProGXGDYGameIsAgreeSurrenderSelect_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameIsAgreeSurrenderSelect_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameIsAgreeSurrenderSelect_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameIsAgreeSurrenderSelect_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameIsAgreeSurrenderSelect_MSGID>(
    ProGXGDYGameIsAgreeSurrenderSelect_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameIsAgreeSurrenderOperate_MSGID {
  ProGXGDYGameIsAgreeSurrenderOperate_MSGID_ID = 2252
};
bool ProGXGDYGameIsAgreeSurrenderOperate_MSGID_IsValid(int value);
const ProGXGDYGameIsAgreeSurrenderOperate_MSGID ProGXGDYGameIsAgreeSurrenderOperate_MSGID_MSGID_MIN = ProGXGDYGameIsAgreeSurrenderOperate_MSGID_ID;
const ProGXGDYGameIsAgreeSurrenderOperate_MSGID ProGXGDYGameIsAgreeSurrenderOperate_MSGID_MSGID_MAX = ProGXGDYGameIsAgreeSurrenderOperate_MSGID_ID;
const int ProGXGDYGameIsAgreeSurrenderOperate_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameIsAgreeSurrenderOperate_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameIsAgreeSurrenderOperate_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameIsAgreeSurrenderOperate_MSGID_Name(ProGXGDYGameIsAgreeSurrenderOperate_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameIsAgreeSurrenderOperate_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameIsAgreeSurrenderOperate_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameIsAgreeSurrenderOperate_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameIsAgreeSurrenderOperate_MSGID>(
    ProGXGDYGameIsAgreeSurrenderOperate_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameIsAgreeSurrenderStatus_MSGID {
  ProGXGDYGameIsAgreeSurrenderStatus_MSGID_ID = 2253
};
bool ProGXGDYGameIsAgreeSurrenderStatus_MSGID_IsValid(int value);
const ProGXGDYGameIsAgreeSurrenderStatus_MSGID ProGXGDYGameIsAgreeSurrenderStatus_MSGID_MSGID_MIN = ProGXGDYGameIsAgreeSurrenderStatus_MSGID_ID;
const ProGXGDYGameIsAgreeSurrenderStatus_MSGID ProGXGDYGameIsAgreeSurrenderStatus_MSGID_MSGID_MAX = ProGXGDYGameIsAgreeSurrenderStatus_MSGID_ID;
const int ProGXGDYGameIsAgreeSurrenderStatus_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameIsAgreeSurrenderStatus_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameIsAgreeSurrenderStatus_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameIsAgreeSurrenderStatus_MSGID_Name(ProGXGDYGameIsAgreeSurrenderStatus_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameIsAgreeSurrenderStatus_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameIsAgreeSurrenderStatus_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameIsAgreeSurrenderStatus_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameIsAgreeSurrenderStatus_MSGID>(
    ProGXGDYGameIsAgreeSurrenderStatus_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameSurrenderResult_MSGID {
  ProGXGDYGameSurrenderResult_MSGID_ID = 2254
};
bool ProGXGDYGameSurrenderResult_MSGID_IsValid(int value);
const ProGXGDYGameSurrenderResult_MSGID ProGXGDYGameSurrenderResult_MSGID_MSGID_MIN = ProGXGDYGameSurrenderResult_MSGID_ID;
const ProGXGDYGameSurrenderResult_MSGID ProGXGDYGameSurrenderResult_MSGID_MSGID_MAX = ProGXGDYGameSurrenderResult_MSGID_ID;
const int ProGXGDYGameSurrenderResult_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameSurrenderResult_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameSurrenderResult_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameSurrenderResult_MSGID_Name(ProGXGDYGameSurrenderResult_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameSurrenderResult_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameSurrenderResult_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameSurrenderResult_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameSurrenderResult_MSGID>(
    ProGXGDYGameSurrenderResult_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameShowBoomNotify_MSGID {
  ProGXGDYGameShowBoomNotify_MSGID_ID = 2255
};
bool ProGXGDYGameShowBoomNotify_MSGID_IsValid(int value);
const ProGXGDYGameShowBoomNotify_MSGID ProGXGDYGameShowBoomNotify_MSGID_MSGID_MIN = ProGXGDYGameShowBoomNotify_MSGID_ID;
const ProGXGDYGameShowBoomNotify_MSGID ProGXGDYGameShowBoomNotify_MSGID_MSGID_MAX = ProGXGDYGameShowBoomNotify_MSGID_ID;
const int ProGXGDYGameShowBoomNotify_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameShowBoomNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameShowBoomNotify_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameShowBoomNotify_MSGID_Name(ProGXGDYGameShowBoomNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameShowBoomNotify_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameShowBoomNotify_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameShowBoomNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameShowBoomNotify_MSGID>(
    ProGXGDYGameShowBoomNotify_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameShowBoomOperate_MSGID {
  ProGXGDYGameShowBoomOperate_MSGID_ID = 2256
};
bool ProGXGDYGameShowBoomOperate_MSGID_IsValid(int value);
const ProGXGDYGameShowBoomOperate_MSGID ProGXGDYGameShowBoomOperate_MSGID_MSGID_MIN = ProGXGDYGameShowBoomOperate_MSGID_ID;
const ProGXGDYGameShowBoomOperate_MSGID ProGXGDYGameShowBoomOperate_MSGID_MSGID_MAX = ProGXGDYGameShowBoomOperate_MSGID_ID;
const int ProGXGDYGameShowBoomOperate_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameShowBoomOperate_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameShowBoomOperate_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameShowBoomOperate_MSGID_Name(ProGXGDYGameShowBoomOperate_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameShowBoomOperate_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameShowBoomOperate_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameShowBoomOperate_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameShowBoomOperate_MSGID>(
    ProGXGDYGameShowBoomOperate_MSGID_descriptor(), name, value);
}
enum ProGXGDYGameShowBoomResponse_MSGID {
  ProGXGDYGameShowBoomResponse_MSGID_ID = 2257
};
bool ProGXGDYGameShowBoomResponse_MSGID_IsValid(int value);
const ProGXGDYGameShowBoomResponse_MSGID ProGXGDYGameShowBoomResponse_MSGID_MSGID_MIN = ProGXGDYGameShowBoomResponse_MSGID_ID;
const ProGXGDYGameShowBoomResponse_MSGID ProGXGDYGameShowBoomResponse_MSGID_MSGID_MAX = ProGXGDYGameShowBoomResponse_MSGID_ID;
const int ProGXGDYGameShowBoomResponse_MSGID_MSGID_ARRAYSIZE = ProGXGDYGameShowBoomResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProGXGDYGameShowBoomResponse_MSGID_descriptor();
inline const ::std::string& ProGXGDYGameShowBoomResponse_MSGID_Name(ProGXGDYGameShowBoomResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProGXGDYGameShowBoomResponse_MSGID_descriptor(), value);
}
inline bool ProGXGDYGameShowBoomResponse_MSGID_Parse(
    const ::std::string& name, ProGXGDYGameShowBoomResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProGXGDYGameShowBoomResponse_MSGID>(
    ProGXGDYGameShowBoomResponse_MSGID_descriptor(), name, value);
}
enum GXGDYGameState {
  GXGDY_GAME_IDLE = 1,
  GXGDY_GAME_DICE_BANK = 2,
  GXGDY_GAME_SEND = 3,
  GXGDY_GAME_DATU = 4,
  GXGDY_GAME_PLAY = 6,
  GXGDY_GAME_END = 7
};
bool GXGDYGameState_IsValid(int value);
const GXGDYGameState GXGDYGameState_MIN = GXGDY_GAME_IDLE;
const GXGDYGameState GXGDYGameState_MAX = GXGDY_GAME_END;
const int GXGDYGameState_ARRAYSIZE = GXGDYGameState_MAX + 1;

const ::google::protobuf::EnumDescriptor* GXGDYGameState_descriptor();
inline const ::std::string& GXGDYGameState_Name(GXGDYGameState value) {
  return ::google::protobuf::internal::NameOfEnum(
    GXGDYGameState_descriptor(), value);
}
inline bool GXGDYGameState_Parse(
    const ::std::string& name, GXGDYGameState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GXGDYGameState>(
    GXGDYGameState_descriptor(), name, value);
}
enum GXGDYSEND_TYPE {
  GXGDY_NORMAL_SEND = 1,
  GXGDY_RECOME_SEND = 2
};
bool GXGDYSEND_TYPE_IsValid(int value);
const GXGDYSEND_TYPE GXGDYSEND_TYPE_MIN = GXGDY_NORMAL_SEND;
const GXGDYSEND_TYPE GXGDYSEND_TYPE_MAX = GXGDY_RECOME_SEND;
const int GXGDYSEND_TYPE_ARRAYSIZE = GXGDYSEND_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* GXGDYSEND_TYPE_descriptor();
inline const ::std::string& GXGDYSEND_TYPE_Name(GXGDYSEND_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    GXGDYSEND_TYPE_descriptor(), value);
}
inline bool GXGDYSEND_TYPE_Parse(
    const ::std::string& name, GXGDYSEND_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GXGDYSEND_TYPE>(
    GXGDYSEND_TYPE_descriptor(), name, value);
}
enum GXGDYKING_TYPE {
  GXGDY_KING_UP = 1,
  GXGDY_KING_HUITOU = 2,
  GXGDY_KING_MAILEI = 3
};
bool GXGDYKING_TYPE_IsValid(int value);
const GXGDYKING_TYPE GXGDYKING_TYPE_MIN = GXGDY_KING_UP;
const GXGDYKING_TYPE GXGDYKING_TYPE_MAX = GXGDY_KING_MAILEI;
const int GXGDYKING_TYPE_ARRAYSIZE = GXGDYKING_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* GXGDYKING_TYPE_descriptor();
inline const ::std::string& GXGDYKING_TYPE_Name(GXGDYKING_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    GXGDYKING_TYPE_descriptor(), value);
}
inline bool GXGDYKING_TYPE_Parse(
    const ::std::string& name, GXGDYKING_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GXGDYKING_TYPE>(
    GXGDYKING_TYPE_descriptor(), name, value);
}
enum GXGDYBROKEN_TYPE {
  GXGDY_BT_MASTER_QUIT = 0,
  GXGDY_BT_USER_QUIT = 1,
  GXGDY_BT_BROKEN = 2
};
bool GXGDYBROKEN_TYPE_IsValid(int value);
const GXGDYBROKEN_TYPE GXGDYBROKEN_TYPE_MIN = GXGDY_BT_MASTER_QUIT;
const GXGDYBROKEN_TYPE GXGDYBROKEN_TYPE_MAX = GXGDY_BT_BROKEN;
const int GXGDYBROKEN_TYPE_ARRAYSIZE = GXGDYBROKEN_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* GXGDYBROKEN_TYPE_descriptor();
inline const ::std::string& GXGDYBROKEN_TYPE_Name(GXGDYBROKEN_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    GXGDYBROKEN_TYPE_descriptor(), value);
}
inline bool GXGDYBROKEN_TYPE_Parse(
    const ::std::string& name, GXGDYBROKEN_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GXGDYBROKEN_TYPE>(
    GXGDYBROKEN_TYPE_descriptor(), name, value);
}
enum GXGDYBROKEN_OPERATE {
  GXGDY_BO_DISAGREE = 0,
  GXGDY_BO_AGREE = 1
};
bool GXGDYBROKEN_OPERATE_IsValid(int value);
const GXGDYBROKEN_OPERATE GXGDYBROKEN_OPERATE_MIN = GXGDY_BO_DISAGREE;
const GXGDYBROKEN_OPERATE GXGDYBROKEN_OPERATE_MAX = GXGDY_BO_AGREE;
const int GXGDYBROKEN_OPERATE_ARRAYSIZE = GXGDYBROKEN_OPERATE_MAX + 1;

const ::google::protobuf::EnumDescriptor* GXGDYBROKEN_OPERATE_descriptor();
inline const ::std::string& GXGDYBROKEN_OPERATE_Name(GXGDYBROKEN_OPERATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    GXGDYBROKEN_OPERATE_descriptor(), value);
}
inline bool GXGDYBROKEN_OPERATE_Parse(
    const ::std::string& name, GXGDYBROKEN_OPERATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GXGDYBROKEN_OPERATE>(
    GXGDYBROKEN_OPERATE_descriptor(), name, value);
}
enum GXGDYBROKEN_CODE {
  GXGDY_BC_SUCCESS = 0,
  GXGDY_BC_DISAGREE = 1,
  GXGDY_BC_QUIT_SUCCESS = 2,
  GXGDY_BC_EXCEPTION = 3
};
bool GXGDYBROKEN_CODE_IsValid(int value);
const GXGDYBROKEN_CODE GXGDYBROKEN_CODE_MIN = GXGDY_BC_SUCCESS;
const GXGDYBROKEN_CODE GXGDYBROKEN_CODE_MAX = GXGDY_BC_EXCEPTION;
const int GXGDYBROKEN_CODE_ARRAYSIZE = GXGDYBROKEN_CODE_MAX + 1;

const ::google::protobuf::EnumDescriptor* GXGDYBROKEN_CODE_descriptor();
inline const ::std::string& GXGDYBROKEN_CODE_Name(GXGDYBROKEN_CODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    GXGDYBROKEN_CODE_descriptor(), value);
}
inline bool GXGDYBROKEN_CODE_Parse(
    const ::std::string& name, GXGDYBROKEN_CODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GXGDYBROKEN_CODE>(
    GXGDYBROKEN_CODE_descriptor(), name, value);
}
// ===================================================================

class ProGXGDYGameStatusResponse : public ::google::protobuf::Message {
 public:
  ProGXGDYGameStatusResponse();
  virtual ~ProGXGDYGameStatusResponse();

  ProGXGDYGameStatusResponse(const ProGXGDYGameStatusResponse& from);

  inline ProGXGDYGameStatusResponse& operator=(const ProGXGDYGameStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameStatusResponse& default_instance();

  void Swap(ProGXGDYGameStatusResponse* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameStatusResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameStatusResponse& from);
  void MergeFrom(const ProGXGDYGameStatusResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameStatusResponse_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameStatusResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameStatusResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameStatusResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameStatusResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameStatusResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameStatusResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameStatusResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameStatusResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .GXGDYGameState status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::GXGDYGameState status() const;
  inline void set_status(::GXGDYGameState value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameStatusResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameStatusResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameDeskInfoResponse : public ::google::protobuf::Message {
 public:
  ProGXGDYGameDeskInfoResponse();
  virtual ~ProGXGDYGameDeskInfoResponse();

  ProGXGDYGameDeskInfoResponse(const ProGXGDYGameDeskInfoResponse& from);

  inline ProGXGDYGameDeskInfoResponse& operator=(const ProGXGDYGameDeskInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameDeskInfoResponse& default_instance();

  void Swap(ProGXGDYGameDeskInfoResponse* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameDeskInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameDeskInfoResponse& from);
  void MergeFrom(const ProGXGDYGameDeskInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameDeskInfoResponse_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameDeskInfoResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameDeskInfoResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameDeskInfoResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameDeskInfoResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameDeskInfoResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameDeskInfoResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameDeskInfoResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameDeskInfoResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 CellScore = 2;
  inline bool has_cellscore() const;
  inline void clear_cellscore();
  static const int kCellScoreFieldNumber = 2;
  inline ::google::protobuf::int32 cellscore() const;
  inline void set_cellscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameDeskInfoResponse)
 private:
  inline void set_has_cellscore();
  inline void clear_has_cellscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 cellscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameDeskInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameReadyNotify : public ::google::protobuf::Message {
 public:
  ProGXGDYGameReadyNotify();
  virtual ~ProGXGDYGameReadyNotify();

  ProGXGDYGameReadyNotify(const ProGXGDYGameReadyNotify& from);

  inline ProGXGDYGameReadyNotify& operator=(const ProGXGDYGameReadyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameReadyNotify& default_instance();

  void Swap(ProGXGDYGameReadyNotify* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameReadyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameReadyNotify& from);
  void MergeFrom(const ProGXGDYGameReadyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameReadyNotify_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameReadyNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameReadyNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameReadyNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameReadyNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameReadyNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameReadyNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameReadyNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameReadyNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameReadyNotify)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameReadyNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameReadyRequest : public ::google::protobuf::Message {
 public:
  ProGXGDYGameReadyRequest();
  virtual ~ProGXGDYGameReadyRequest();

  ProGXGDYGameReadyRequest(const ProGXGDYGameReadyRequest& from);

  inline ProGXGDYGameReadyRequest& operator=(const ProGXGDYGameReadyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameReadyRequest& default_instance();

  void Swap(ProGXGDYGameReadyRequest* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameReadyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameReadyRequest& from);
  void MergeFrom(const ProGXGDYGameReadyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameReadyRequest_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameReadyRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameReadyRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameReadyRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameReadyRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameReadyRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameReadyRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameReadyRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameReadyRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameReadyRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameReadyRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameReadyResponse : public ::google::protobuf::Message {
 public:
  ProGXGDYGameReadyResponse();
  virtual ~ProGXGDYGameReadyResponse();

  ProGXGDYGameReadyResponse(const ProGXGDYGameReadyResponse& from);

  inline ProGXGDYGameReadyResponse& operator=(const ProGXGDYGameReadyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameReadyResponse& default_instance();

  void Swap(ProGXGDYGameReadyResponse* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameReadyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameReadyResponse& from);
  void MergeFrom(const ProGXGDYGameReadyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameReadyResponse_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameReadyResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameReadyResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameReadyResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameReadyResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameReadyResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameReadyResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameReadyResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameReadyResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameReadyResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameReadyResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameStart : public ::google::protobuf::Message {
 public:
  ProGXGDYGameStart();
  virtual ~ProGXGDYGameStart();

  ProGXGDYGameStart(const ProGXGDYGameStart& from);

  inline ProGXGDYGameStart& operator=(const ProGXGDYGameStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameStart& default_instance();

  void Swap(ProGXGDYGameStart* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameStart& from);
  void MergeFrom(const ProGXGDYGameStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameStart_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameStart_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameStart_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameStart_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameStart_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameStart_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameStart_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameStart_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameStart_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 bankerseat = 2;
  inline bool has_bankerseat() const;
  inline void clear_bankerseat();
  static const int kBankerseatFieldNumber = 2;
  inline ::google::protobuf::int32 bankerseat() const;
  inline void set_bankerseat(::google::protobuf::int32 value);

  // optional int32 gamecount = 3;
  inline bool has_gamecount() const;
  inline void clear_gamecount();
  static const int kGamecountFieldNumber = 3;
  inline ::google::protobuf::int32 gamecount() const;
  inline void set_gamecount(::google::protobuf::int32 value);

  // optional int32 outCardtimes = 4;
  inline bool has_outcardtimes() const;
  inline void clear_outcardtimes();
  static const int kOutCardtimesFieldNumber = 4;
  inline ::google::protobuf::int32 outcardtimes() const;
  inline void set_outcardtimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameStart)
 private:
  inline void set_has_bankerseat();
  inline void clear_has_bankerseat();
  inline void set_has_gamecount();
  inline void clear_has_gamecount();
  inline void set_has_outcardtimes();
  inline void clear_has_outcardtimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bankerseat_;
  ::google::protobuf::int32 gamecount_;
  ::google::protobuf::int32 outcardtimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameStart* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameDiceNotify : public ::google::protobuf::Message {
 public:
  ProGXGDYGameDiceNotify();
  virtual ~ProGXGDYGameDiceNotify();

  ProGXGDYGameDiceNotify(const ProGXGDYGameDiceNotify& from);

  inline ProGXGDYGameDiceNotify& operator=(const ProGXGDYGameDiceNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameDiceNotify& default_instance();

  void Swap(ProGXGDYGameDiceNotify* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameDiceNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameDiceNotify& from);
  void MergeFrom(const ProGXGDYGameDiceNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameDiceNotify_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameDiceNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameDiceNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameDiceNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameDiceNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameDiceNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameDiceNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameDiceNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameDiceNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 dicecount = 4;
  inline bool has_dicecount() const;
  inline void clear_dicecount();
  static const int kDicecountFieldNumber = 4;
  inline ::google::protobuf::int32 dicecount() const;
  inline void set_dicecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameDiceNotify)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_dicecount();
  inline void clear_has_dicecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 dicecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameDiceNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameDiceRequest : public ::google::protobuf::Message {
 public:
  ProGXGDYGameDiceRequest();
  virtual ~ProGXGDYGameDiceRequest();

  ProGXGDYGameDiceRequest(const ProGXGDYGameDiceRequest& from);

  inline ProGXGDYGameDiceRequest& operator=(const ProGXGDYGameDiceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameDiceRequest& default_instance();

  void Swap(ProGXGDYGameDiceRequest* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameDiceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameDiceRequest& from);
  void MergeFrom(const ProGXGDYGameDiceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameDiceRequest_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameDiceRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameDiceRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameDiceRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameDiceRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameDiceRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameDiceRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameDiceRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameDiceRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 dicecount = 3;
  inline bool has_dicecount() const;
  inline void clear_dicecount();
  static const int kDicecountFieldNumber = 3;
  inline ::google::protobuf::int32 dicecount() const;
  inline void set_dicecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameDiceRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_dicecount();
  inline void clear_has_dicecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 dicecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameDiceRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameDiceResult : public ::google::protobuf::Message {
 public:
  ProGXGDYGameDiceResult();
  virtual ~ProGXGDYGameDiceResult();

  ProGXGDYGameDiceResult(const ProGXGDYGameDiceResult& from);

  inline ProGXGDYGameDiceResult& operator=(const ProGXGDYGameDiceResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameDiceResult& default_instance();

  void Swap(ProGXGDYGameDiceResult* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameDiceResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameDiceResult& from);
  void MergeFrom(const ProGXGDYGameDiceResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameDiceResult_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameDiceResult_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameDiceResult_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameDiceResult_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameDiceResult_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameDiceResult_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameDiceResult_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameDiceResult_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameDiceResult_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 result = 3;
  inline int result_size() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::int32 result(int index) const;
  inline void set_result(int index, ::google::protobuf::int32 value);
  inline void add_result(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      result() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_result();

  // optional int32 dicecount = 4;
  inline bool has_dicecount() const;
  inline void clear_dicecount();
  static const int kDicecountFieldNumber = 4;
  inline ::google::protobuf::int32 dicecount() const;
  inline void set_dicecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameDiceResult)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_dicecount();
  inline void clear_has_dicecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > result_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 dicecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameDiceResult* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameSendMahs : public ::google::protobuf::Message {
 public:
  ProGXGDYGameSendMahs();
  virtual ~ProGXGDYGameSendMahs();

  ProGXGDYGameSendMahs(const ProGXGDYGameSendMahs& from);

  inline ProGXGDYGameSendMahs& operator=(const ProGXGDYGameSendMahs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameSendMahs& default_instance();

  void Swap(ProGXGDYGameSendMahs* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameSendMahs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameSendMahs& from);
  void MergeFrom(const ProGXGDYGameSendMahs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameSendMahs_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameSendMahs_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameSendMahs_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameSendMahs_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameSendMahs_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameSendMahs_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameSendMahs_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameSendMahs_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameSendMahs_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 mahs = 3;
  inline int mahs_size() const;
  inline void clear_mahs();
  static const int kMahsFieldNumber = 3;
  inline ::google::protobuf::int32 mahs(int index) const;
  inline void set_mahs(int index, ::google::protobuf::int32 value);
  inline void add_mahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mahs();

  // repeated int32 mahscount = 4;
  inline int mahscount_size() const;
  inline void clear_mahscount();
  static const int kMahscountFieldNumber = 4;
  inline ::google::protobuf::int32 mahscount(int index) const;
  inline void set_mahscount(int index, ::google::protobuf::int32 value);
  inline void add_mahscount(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mahscount() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mahscount();

  // optional int32 cbLeftCount = 5;
  inline bool has_cbleftcount() const;
  inline void clear_cbleftcount();
  static const int kCbLeftCountFieldNumber = 5;
  inline ::google::protobuf::int32 cbleftcount() const;
  inline void set_cbleftcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameSendMahs)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_cbleftcount();
  inline void clear_has_cbleftcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mahs_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 cbleftcount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mahscount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameSendMahs* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameKingData : public ::google::protobuf::Message {
 public:
  ProGXGDYGameKingData();
  virtual ~ProGXGDYGameKingData();

  ProGXGDYGameKingData(const ProGXGDYGameKingData& from);

  inline ProGXGDYGameKingData& operator=(const ProGXGDYGameKingData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameKingData& default_instance();

  void Swap(ProGXGDYGameKingData* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameKingData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameKingData& from);
  void MergeFrom(const ProGXGDYGameKingData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameKingData_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameKingData_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameKingData_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameKingData_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameKingData_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameKingData_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameKingData_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameKingData_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameKingData_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 mahs = 3;
  inline int mahs_size() const;
  inline void clear_mahs();
  static const int kMahsFieldNumber = 3;
  inline ::google::protobuf::int32 mahs(int index) const;
  inline void set_mahs(int index, ::google::protobuf::int32 value);
  inline void add_mahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mahs();

  // repeated int32 downKingScore = 4;
  inline int downkingscore_size() const;
  inline void clear_downkingscore();
  static const int kDownKingScoreFieldNumber = 4;
  inline ::google::protobuf::int32 downkingscore(int index) const;
  inline void set_downkingscore(int index, ::google::protobuf::int32 value);
  inline void add_downkingscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      downkingscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_downkingscore();

  // repeated int32 kingcount = 5;
  inline int kingcount_size() const;
  inline void clear_kingcount();
  static const int kKingcountFieldNumber = 5;
  inline ::google::protobuf::int32 kingcount(int index) const;
  inline void set_kingcount(int index, ::google::protobuf::int32 value);
  inline void add_kingcount(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      kingcount() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_kingcount();

  // repeated int32 viceking = 6;
  inline int viceking_size() const;
  inline void clear_viceking();
  static const int kVicekingFieldNumber = 6;
  inline ::google::protobuf::int32 viceking(int index) const;
  inline void set_viceking(int index, ::google::protobuf::int32 value);
  inline void add_viceking(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      viceking() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_viceking();

  // optional .GXGDYSEND_TYPE notify_type = 7 [default = GXGDY_NORMAL_SEND];
  inline bool has_notify_type() const;
  inline void clear_notify_type();
  static const int kNotifyTypeFieldNumber = 7;
  inline ::GXGDYSEND_TYPE notify_type() const;
  inline void set_notify_type(::GXGDYSEND_TYPE value);

  // optional .GXGDYKING_TYPE king_type = 8 [default = GXGDY_KING_UP];
  inline bool has_king_type() const;
  inline void clear_king_type();
  static const int kKingTypeFieldNumber = 8;
  inline ::GXGDYKING_TYPE king_type() const;
  inline void set_king_type(::GXGDYKING_TYPE value);

  // repeated int32 cbChongGuang = 9;
  inline int cbchongguang_size() const;
  inline void clear_cbchongguang();
  static const int kCbChongGuangFieldNumber = 9;
  inline ::google::protobuf::int32 cbchongguang(int index) const;
  inline void set_cbchongguang(int index, ::google::protobuf::int32 value);
  inline void add_cbchongguang(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbchongguang() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbchongguang();

  // repeated int32 cbBaWangKing = 10;
  inline int cbbawangking_size() const;
  inline void clear_cbbawangking();
  static const int kCbBaWangKingFieldNumber = 10;
  inline ::google::protobuf::int32 cbbawangking(int index) const;
  inline void set_cbbawangking(int index, ::google::protobuf::int32 value);
  inline void add_cbbawangking(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbbawangking() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbbawangking();

  // @@protoc_insertion_point(class_scope:ProGXGDYGameKingData)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_notify_type();
  inline void clear_has_notify_type();
  inline void set_has_king_type();
  inline void clear_has_king_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mahs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > downkingscore_;
  ::google::protobuf::int32 seat_;
  int notify_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > kingcount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > viceking_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbchongguang_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbbawangking_;
  int king_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameKingData* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameOutMahsResponse : public ::google::protobuf::Message {
 public:
  ProGXGDYGameOutMahsResponse();
  virtual ~ProGXGDYGameOutMahsResponse();

  ProGXGDYGameOutMahsResponse(const ProGXGDYGameOutMahsResponse& from);

  inline ProGXGDYGameOutMahsResponse& operator=(const ProGXGDYGameOutMahsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameOutMahsResponse& default_instance();

  void Swap(ProGXGDYGameOutMahsResponse* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameOutMahsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameOutMahsResponse& from);
  void MergeFrom(const ProGXGDYGameOutMahsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameOutMahsResponse_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameOutMahsResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameOutMahsResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameOutMahsResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameOutMahsResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameOutMahsResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameOutMahsResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameOutMahsResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameOutMahsResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 outMahs = 3;
  inline int outmahs_size() const;
  inline void clear_outmahs();
  static const int kOutMahsFieldNumber = 3;
  inline ::google::protobuf::int32 outmahs(int index) const;
  inline void set_outmahs(int index, ::google::protobuf::int32 value);
  inline void add_outmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      outmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_outmahs();

  // repeated int32 handmahs = 4;
  inline int handmahs_size() const;
  inline void clear_handmahs();
  static const int kHandmahsFieldNumber = 4;
  inline ::google::protobuf::int32 handmahs(int index) const;
  inline void set_handmahs(int index, ::google::protobuf::int32 value);
  inline void add_handmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      handmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_handmahs();

  // optional int32 cardCount = 5;
  inline bool has_cardcount() const;
  inline void clear_cardcount();
  static const int kCardCountFieldNumber = 5;
  inline ::google::protobuf::int32 cardcount() const;
  inline void set_cardcount(::google::protobuf::int32 value);

  // optional int32 cardType = 6;
  inline bool has_cardtype() const;
  inline void clear_cardtype();
  static const int kCardTypeFieldNumber = 6;
  inline ::google::protobuf::int32 cardtype() const;
  inline void set_cardtype(::google::protobuf::int32 value);

  // optional int32 cardtypeflg = 7;
  inline bool has_cardtypeflg() const;
  inline void clear_cardtypeflg();
  static const int kCardtypeflgFieldNumber = 7;
  inline ::google::protobuf::int32 cardtypeflg() const;
  inline void set_cardtypeflg(::google::protobuf::int32 value);

  // optional int32 cardPoint = 8;
  inline bool has_cardpoint() const;
  inline void clear_cardpoint();
  static const int kCardPointFieldNumber = 8;
  inline ::google::protobuf::int32 cardpoint() const;
  inline void set_cardpoint(::google::protobuf::int32 value);

  // optional int32 seriesFlag = 9;
  inline bool has_seriesflag() const;
  inline void clear_seriesflag();
  static const int kSeriesFlagFieldNumber = 9;
  inline ::google::protobuf::int32 seriesflag() const;
  inline void set_seriesflag(::google::protobuf::int32 value);

  // optional int32 seriesNums = 10;
  inline bool has_seriesnums() const;
  inline void clear_seriesnums();
  static const int kSeriesNumsFieldNumber = 10;
  inline ::google::protobuf::int32 seriesnums() const;
  inline void set_seriesnums(::google::protobuf::int32 value);

  // repeated int32 noChangeMahs = 11;
  inline int nochangemahs_size() const;
  inline void clear_nochangemahs();
  static const int kNoChangeMahsFieldNumber = 11;
  inline ::google::protobuf::int32 nochangemahs(int index) const;
  inline void set_nochangemahs(int index, ::google::protobuf::int32 value);
  inline void add_nochangemahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nochangemahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nochangemahs();

  // @@protoc_insertion_point(class_scope:ProGXGDYGameOutMahsResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_cardcount();
  inline void clear_has_cardcount();
  inline void set_has_cardtype();
  inline void clear_has_cardtype();
  inline void set_has_cardtypeflg();
  inline void clear_has_cardtypeflg();
  inline void set_has_cardpoint();
  inline void clear_has_cardpoint();
  inline void set_has_seriesflag();
  inline void clear_has_seriesflag();
  inline void set_has_seriesnums();
  inline void clear_has_seriesnums();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > outmahs_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 cardcount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > handmahs_;
  ::google::protobuf::int32 cardtype_;
  ::google::protobuf::int32 cardtypeflg_;
  ::google::protobuf::int32 cardpoint_;
  ::google::protobuf::int32 seriesflag_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nochangemahs_;
  ::google::protobuf::int32 seriesnums_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameOutMahsResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameTimerPower : public ::google::protobuf::Message {
 public:
  ProGXGDYGameTimerPower();
  virtual ~ProGXGDYGameTimerPower();

  ProGXGDYGameTimerPower(const ProGXGDYGameTimerPower& from);

  inline ProGXGDYGameTimerPower& operator=(const ProGXGDYGameTimerPower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameTimerPower& default_instance();

  void Swap(ProGXGDYGameTimerPower* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameTimerPower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameTimerPower& from);
  void MergeFrom(const ProGXGDYGameTimerPower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameTimerPower_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameTimerPower_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameTimerPower_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameTimerPower_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameTimerPower_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameTimerPower_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameTimerPower_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameTimerPower_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameTimerPower_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 outcardTime = 4;
  inline bool has_outcardtime() const;
  inline void clear_outcardtime();
  static const int kOutcardTimeFieldNumber = 4;
  inline ::google::protobuf::int32 outcardtime() const;
  inline void set_outcardtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameTimerPower)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_outcardtime();
  inline void clear_has_outcardtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 outcardtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameTimerPower* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameOperateNotify : public ::google::protobuf::Message {
 public:
  ProGXGDYGameOperateNotify();
  virtual ~ProGXGDYGameOperateNotify();

  ProGXGDYGameOperateNotify(const ProGXGDYGameOperateNotify& from);

  inline ProGXGDYGameOperateNotify& operator=(const ProGXGDYGameOperateNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameOperateNotify& default_instance();

  void Swap(ProGXGDYGameOperateNotify* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameOperateNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameOperateNotify& from);
  void MergeFrom(const ProGXGDYGameOperateNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameOperateNotify_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameOperateNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameOperateNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameOperateNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameOperateNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameOperateNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameOperateNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameOperateNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameOperateNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 resumeSeat = 2;
  inline bool has_resumeseat() const;
  inline void clear_resumeseat();
  static const int kResumeSeatFieldNumber = 2;
  inline ::google::protobuf::int32 resumeseat() const;
  inline void set_resumeseat(::google::protobuf::int32 value);

  // optional int32 ActionMask = 3;
  inline bool has_actionmask() const;
  inline void clear_actionmask();
  static const int kActionMaskFieldNumber = 3;
  inline ::google::protobuf::int32 actionmask() const;
  inline void set_actionmask(::google::protobuf::int32 value);

  // optional int32 ActionCard = 4;
  inline bool has_actioncard() const;
  inline void clear_actioncard();
  static const int kActionCardFieldNumber = 4;
  inline ::google::protobuf::int32 actioncard() const;
  inline void set_actioncard(::google::protobuf::int32 value);

  // optional int32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 operateseat = 6;
  inline bool has_operateseat() const;
  inline void clear_operateseat();
  static const int kOperateseatFieldNumber = 6;
  inline ::google::protobuf::int32 operateseat() const;
  inline void set_operateseat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameOperateNotify)
 private:
  inline void set_has_resumeseat();
  inline void clear_has_resumeseat();
  inline void set_has_actionmask();
  inline void clear_has_actionmask();
  inline void set_has_actioncard();
  inline void clear_has_actioncard();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_operateseat();
  inline void clear_has_operateseat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 resumeseat_;
  ::google::protobuf::int32 actionmask_;
  ::google::protobuf::int32 actioncard_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 operateseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameOperateNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameOperateResult : public ::google::protobuf::Message {
 public:
  ProGXGDYGameOperateResult();
  virtual ~ProGXGDYGameOperateResult();

  ProGXGDYGameOperateResult(const ProGXGDYGameOperateResult& from);

  inline ProGXGDYGameOperateResult& operator=(const ProGXGDYGameOperateResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameOperateResult& default_instance();

  void Swap(ProGXGDYGameOperateResult* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameOperateResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameOperateResult& from);
  void MergeFrom(const ProGXGDYGameOperateResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameOperateResult_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameOperateResult_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameOperateResult_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameOperateResult_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameOperateResult_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameOperateResult_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameOperateResult_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameOperateResult_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameOperateResult_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 wOperateUser = 2;
  inline bool has_woperateuser() const;
  inline void clear_woperateuser();
  static const int kWOperateUserFieldNumber = 2;
  inline ::google::protobuf::int32 woperateuser() const;
  inline void set_woperateuser(::google::protobuf::int32 value);

  // optional int32 wProvideUser = 3;
  inline bool has_wprovideuser() const;
  inline void clear_wprovideuser();
  static const int kWProvideUserFieldNumber = 3;
  inline ::google::protobuf::int32 wprovideuser() const;
  inline void set_wprovideuser(::google::protobuf::int32 value);

  // optional int32 wOperateCode = 4;
  inline bool has_woperatecode() const;
  inline void clear_woperatecode();
  static const int kWOperateCodeFieldNumber = 4;
  inline ::google::protobuf::int32 woperatecode() const;
  inline void set_woperatecode(::google::protobuf::int32 value);

  // optional int32 cbOperateCard = 5;
  inline bool has_cboperatecard() const;
  inline void clear_cboperatecard();
  static const int kCbOperateCardFieldNumber = 5;
  inline ::google::protobuf::int32 cboperatecard() const;
  inline void set_cboperatecard(::google::protobuf::int32 value);

  // repeated int32 handmahs = 6;
  inline int handmahs_size() const;
  inline void clear_handmahs();
  static const int kHandmahsFieldNumber = 6;
  inline ::google::protobuf::int32 handmahs(int index) const;
  inline void set_handmahs(int index, ::google::protobuf::int32 value);
  inline void add_handmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      handmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_handmahs();

  // optional int32 handcount = 7;
  inline bool has_handcount() const;
  inline void clear_handcount();
  static const int kHandcountFieldNumber = 7;
  inline ::google::protobuf::int32 handcount() const;
  inline void set_handcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameOperateResult)
 private:
  inline void set_has_woperateuser();
  inline void clear_has_woperateuser();
  inline void set_has_wprovideuser();
  inline void clear_has_wprovideuser();
  inline void set_has_woperatecode();
  inline void clear_has_woperatecode();
  inline void set_has_cboperatecard();
  inline void clear_has_cboperatecard();
  inline void set_has_handcount();
  inline void clear_has_handcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 woperateuser_;
  ::google::protobuf::int32 wprovideuser_;
  ::google::protobuf::int32 woperatecode_;
  ::google::protobuf::int32 cboperatecard_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > handmahs_;
  ::google::protobuf::int32 handcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameOperateResult* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameOperateRequest : public ::google::protobuf::Message {
 public:
  ProGXGDYGameOperateRequest();
  virtual ~ProGXGDYGameOperateRequest();

  ProGXGDYGameOperateRequest(const ProGXGDYGameOperateRequest& from);

  inline ProGXGDYGameOperateRequest& operator=(const ProGXGDYGameOperateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameOperateRequest& default_instance();

  void Swap(ProGXGDYGameOperateRequest* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameOperateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameOperateRequest& from);
  void MergeFrom(const ProGXGDYGameOperateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameOperateRequest_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameOperateRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameOperateRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameOperateRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameOperateRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameOperateRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameOperateRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameOperateRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameOperateRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 wOperateCode = 3;
  inline bool has_woperatecode() const;
  inline void clear_woperatecode();
  static const int kWOperateCodeFieldNumber = 3;
  inline ::google::protobuf::int32 woperatecode() const;
  inline void set_woperatecode(::google::protobuf::int32 value);

  // optional int32 cbOperateCard = 4;
  inline bool has_cboperatecard() const;
  inline void clear_cboperatecard();
  static const int kCbOperateCardFieldNumber = 4;
  inline ::google::protobuf::int32 cboperatecard() const;
  inline void set_cboperatecard(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameOperateRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_woperatecode();
  inline void clear_has_woperatecode();
  inline void set_has_cboperatecard();
  inline void clear_has_cboperatecard();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 woperatecode_;
  ::google::protobuf::int32 cboperatecard_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameOperateRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameTrust : public ::google::protobuf::Message {
 public:
  ProGXGDYGameTrust();
  virtual ~ProGXGDYGameTrust();

  ProGXGDYGameTrust(const ProGXGDYGameTrust& from);

  inline ProGXGDYGameTrust& operator=(const ProGXGDYGameTrust& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameTrust& default_instance();

  void Swap(ProGXGDYGameTrust* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameTrust* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameTrust& from);
  void MergeFrom(const ProGXGDYGameTrust& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameTrust_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameTrust_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameTrust_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameTrust_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameTrust_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameTrust_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameTrust_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameTrust_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameTrust_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool isTrust = 3;
  inline bool has_istrust() const;
  inline void clear_istrust();
  static const int kIsTrustFieldNumber = 3;
  inline bool istrust() const;
  inline void set_istrust(bool value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameTrust)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_istrust();
  inline void clear_has_istrust();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  bool istrust_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameTrust* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameOutMahRequest : public ::google::protobuf::Message {
 public:
  ProGXGDYGameOutMahRequest();
  virtual ~ProGXGDYGameOutMahRequest();

  ProGXGDYGameOutMahRequest(const ProGXGDYGameOutMahRequest& from);

  inline ProGXGDYGameOutMahRequest& operator=(const ProGXGDYGameOutMahRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameOutMahRequest& default_instance();

  void Swap(ProGXGDYGameOutMahRequest* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameOutMahRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameOutMahRequest& from);
  void MergeFrom(const ProGXGDYGameOutMahRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameOutMahRequest_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameOutMahRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameOutMahRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameOutMahRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameOutMahRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameOutMahRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameOutMahRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameOutMahRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameOutMahRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 outMahs = 3;
  inline int outmahs_size() const;
  inline void clear_outmahs();
  static const int kOutMahsFieldNumber = 3;
  inline ::google::protobuf::int32 outmahs(int index) const;
  inline void set_outmahs(int index, ::google::protobuf::int32 value);
  inline void add_outmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      outmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_outmahs();

  // repeated int32 nochangemahs = 4;
  inline int nochangemahs_size() const;
  inline void clear_nochangemahs();
  static const int kNochangemahsFieldNumber = 4;
  inline ::google::protobuf::int32 nochangemahs(int index) const;
  inline void set_nochangemahs(int index, ::google::protobuf::int32 value);
  inline void add_nochangemahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nochangemahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nochangemahs();

  // optional bool bIsChanged = 5;
  inline bool has_bischanged() const;
  inline void clear_bischanged();
  static const int kBIsChangedFieldNumber = 5;
  inline bool bischanged() const;
  inline void set_bischanged(bool value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameOutMahRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_bischanged();
  inline void clear_has_bischanged();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > outmahs_;
  ::google::protobuf::int32 seat_;
  bool bischanged_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nochangemahs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameOutMahRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameCatchCard : public ::google::protobuf::Message {
 public:
  ProGXGDYGameCatchCard();
  virtual ~ProGXGDYGameCatchCard();

  ProGXGDYGameCatchCard(const ProGXGDYGameCatchCard& from);

  inline ProGXGDYGameCatchCard& operator=(const ProGXGDYGameCatchCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameCatchCard& default_instance();

  void Swap(ProGXGDYGameCatchCard* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameCatchCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameCatchCard& from);
  void MergeFrom(const ProGXGDYGameCatchCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameCatchCard_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameCatchCard_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameCatchCard_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameCatchCard_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameCatchCard_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameCatchCard_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameCatchCard_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameCatchCard_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameCatchCard_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 cbCardData = 3;
  inline bool has_cbcarddata() const;
  inline void clear_cbcarddata();
  static const int kCbCardDataFieldNumber = 3;
  inline ::google::protobuf::int32 cbcarddata() const;
  inline void set_cbcarddata(::google::protobuf::int32 value);

  // optional int32 wActionMask = 4;
  inline bool has_wactionmask() const;
  inline void clear_wactionmask();
  static const int kWActionMaskFieldNumber = 4;
  inline ::google::protobuf::int32 wactionmask() const;
  inline void set_wactionmask(::google::protobuf::int32 value);

  // optional bool cbIsNotGang = 5;
  inline bool has_cbisnotgang() const;
  inline void clear_cbisnotgang();
  static const int kCbIsNotGangFieldNumber = 5;
  inline bool cbisnotgang() const;
  inline void set_cbisnotgang(bool value);

  // optional int32 cbLeftCount = 6;
  inline bool has_cbleftcount() const;
  inline void clear_cbleftcount();
  static const int kCbLeftCountFieldNumber = 6;
  inline ::google::protobuf::int32 cbleftcount() const;
  inline void set_cbleftcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameCatchCard)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_cbcarddata();
  inline void clear_has_cbcarddata();
  inline void set_has_wactionmask();
  inline void clear_has_wactionmask();
  inline void set_has_cbisnotgang();
  inline void clear_has_cbisnotgang();
  inline void set_has_cbleftcount();
  inline void clear_has_cbleftcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 cbcarddata_;
  ::google::protobuf::int32 wactionmask_;
  bool cbisnotgang_;
  ::google::protobuf::int32 cbleftcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameCatchCard* default_instance_;
};
// -------------------------------------------------------------------

class GXGDYMahList : public ::google::protobuf::Message {
 public:
  GXGDYMahList();
  virtual ~GXGDYMahList();

  GXGDYMahList(const GXGDYMahList& from);

  inline GXGDYMahList& operator=(const GXGDYMahList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GXGDYMahList& default_instance();

  void Swap(GXGDYMahList* other);

  // implements Message ----------------------------------------------

  GXGDYMahList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GXGDYMahList& from);
  void MergeFrom(const GXGDYMahList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 Mahs = 1;
  inline int mahs_size() const;
  inline void clear_mahs();
  static const int kMahsFieldNumber = 1;
  inline ::google::protobuf::int32 mahs(int index) const;
  inline void set_mahs(int index, ::google::protobuf::int32 value);
  inline void add_mahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mahs();

  // @@protoc_insertion_point(class_scope:GXGDYMahList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mahs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static GXGDYMahList* default_instance_;
};
// -------------------------------------------------------------------

class GXGDYScoreList : public ::google::protobuf::Message {
 public:
  GXGDYScoreList();
  virtual ~GXGDYScoreList();

  GXGDYScoreList(const GXGDYScoreList& from);

  inline GXGDYScoreList& operator=(const GXGDYScoreList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GXGDYScoreList& default_instance();

  void Swap(GXGDYScoreList* other);

  // implements Message ----------------------------------------------

  GXGDYScoreList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GXGDYScoreList& from);
  void MergeFrom(const GXGDYScoreList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 roundScore = 1;
  inline int roundscore_size() const;
  inline void clear_roundscore();
  static const int kRoundScoreFieldNumber = 1;
  inline ::google::protobuf::int32 roundscore(int index) const;
  inline void set_roundscore(int index, ::google::protobuf::int32 value);
  inline void add_roundscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      roundscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_roundscore();

  // @@protoc_insertion_point(class_scope:GXGDYScoreList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > roundscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static GXGDYScoreList* default_instance_;
};
// -------------------------------------------------------------------

class GXGDYAwardList : public ::google::protobuf::Message {
 public:
  GXGDYAwardList();
  virtual ~GXGDYAwardList();

  GXGDYAwardList(const GXGDYAwardList& from);

  inline GXGDYAwardList& operator=(const GXGDYAwardList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GXGDYAwardList& default_instance();

  void Swap(GXGDYAwardList* other);

  // implements Message ----------------------------------------------

  GXGDYAwardList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GXGDYAwardList& from);
  void MergeFrom(const GXGDYAwardList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 CardsData = 2;
  inline int cardsdata_size() const;
  inline void clear_cardsdata();
  static const int kCardsDataFieldNumber = 2;
  inline ::google::protobuf::int32 cardsdata(int index) const;
  inline void set_cardsdata(int index, ::google::protobuf::int32 value);
  inline void add_cardsdata(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cardsdata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cardsdata();

  // optional int32 awardScore = 3;
  inline bool has_awardscore() const;
  inline void clear_awardscore();
  static const int kAwardScoreFieldNumber = 3;
  inline ::google::protobuf::int32 awardscore() const;
  inline void set_awardscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GXGDYAwardList)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_awardscore();
  inline void clear_has_awardscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cardsdata_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 awardscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static GXGDYAwardList* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameEnd : public ::google::protobuf::Message {
 public:
  ProGXGDYGameEnd();
  virtual ~ProGXGDYGameEnd();

  ProGXGDYGameEnd(const ProGXGDYGameEnd& from);

  inline ProGXGDYGameEnd& operator=(const ProGXGDYGameEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameEnd& default_instance();

  void Swap(ProGXGDYGameEnd* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameEnd& from);
  void MergeFrom(const ProGXGDYGameEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameEnd_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameEnd_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameEnd_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameEnd_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameEnd_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameEnd_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameEnd_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameEnd_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameEnd_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 lGameTax = 2;
  inline bool has_lgametax() const;
  inline void clear_lgametax();
  static const int kLGameTaxFieldNumber = 2;
  inline ::google::protobuf::int32 lgametax() const;
  inline void set_lgametax(::google::protobuf::int32 value);

  // repeated int32 cbChongGuang = 3;
  inline int cbchongguang_size() const;
  inline void clear_cbchongguang();
  static const int kCbChongGuangFieldNumber = 3;
  inline ::google::protobuf::int32 cbchongguang(int index) const;
  inline void set_cbchongguang(int index, ::google::protobuf::int32 value);
  inline void add_cbchongguang(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbchongguang() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbchongguang();

  // repeated int32 cbBaWangKing = 4;
  inline int cbbawangking_size() const;
  inline void clear_cbbawangking();
  static const int kCbBaWangKingFieldNumber = 4;
  inline ::google::protobuf::int32 cbbawangking(int index) const;
  inline void set_cbbawangking(int index, ::google::protobuf::int32 value);
  inline void add_cbbawangking(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbbawangking() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbbawangking();

  // optional int32 wProvideUser = 5;
  inline bool has_wprovideuser() const;
  inline void clear_wprovideuser();
  static const int kWProvideUserFieldNumber = 5;
  inline ::google::protobuf::int32 wprovideuser() const;
  inline void set_wprovideuser(::google::protobuf::int32 value);

  // optional int32 cbChiHuCard = 6;
  inline bool has_cbchihucard() const;
  inline void clear_cbchihucard();
  static const int kCbChiHuCardFieldNumber = 6;
  inline ::google::protobuf::int32 cbchihucard() const;
  inline void set_cbchihucard(::google::protobuf::int32 value);

  // repeated int32 dwChiHuKind = 7;
  inline int dwchihukind_size() const;
  inline void clear_dwchihukind();
  static const int kDwChiHuKindFieldNumber = 7;
  inline ::google::protobuf::int32 dwchihukind(int index) const;
  inline void set_dwchihukind(int index, ::google::protobuf::int32 value);
  inline void add_dwchihukind(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dwchihukind() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dwchihukind();

  // repeated int32 dwChiHuRight = 8;
  inline int dwchihuright_size() const;
  inline void clear_dwchihuright();
  static const int kDwChiHuRightFieldNumber = 8;
  inline ::google::protobuf::int32 dwchihuright(int index) const;
  inline void set_dwchihuright(int index, ::google::protobuf::int32 value);
  inline void add_dwchihuright(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dwchihuright() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dwchihuright();

  // repeated int32 lTotaslGameScore = 9;
  inline int ltotaslgamescore_size() const;
  inline void clear_ltotaslgamescore();
  static const int kLTotaslGameScoreFieldNumber = 9;
  inline ::google::protobuf::int32 ltotaslgamescore(int index) const;
  inline void set_ltotaslgamescore(int index, ::google::protobuf::int32 value);
  inline void add_ltotaslgamescore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ltotaslgamescore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ltotaslgamescore();

  // repeated int32 lCurrentGameScore = 10;
  inline int lcurrentgamescore_size() const;
  inline void clear_lcurrentgamescore();
  static const int kLCurrentGameScoreFieldNumber = 10;
  inline ::google::protobuf::int32 lcurrentgamescore(int index) const;
  inline void set_lcurrentgamescore(int index, ::google::protobuf::int32 value);
  inline void add_lcurrentgamescore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lcurrentgamescore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lcurrentgamescore();

  // repeated int32 lCurrentPointScore = 11;
  inline int lcurrentpointscore_size() const;
  inline void clear_lcurrentpointscore();
  static const int kLCurrentPointScoreFieldNumber = 11;
  inline ::google::protobuf::int32 lcurrentpointscore(int index) const;
  inline void set_lcurrentpointscore(int index, ::google::protobuf::int32 value);
  inline void add_lcurrentpointscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lcurrentpointscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lcurrentpointscore();

  // repeated int32 lAttachScore = 12;
  inline int lattachscore_size() const;
  inline void clear_lattachscore();
  static const int kLAttachScoreFieldNumber = 12;
  inline ::google::protobuf::int32 lattachscore(int index) const;
  inline void set_lattachscore(int index, ::google::protobuf::int32 value);
  inline void add_lattachscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lattachscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lattachscore();

  // repeated .GXGDYMahList cbHandCardData = 13;
  inline int cbhandcarddata_size() const;
  inline void clear_cbhandcarddata();
  static const int kCbHandCardDataFieldNumber = 13;
  inline const ::GXGDYMahList& cbhandcarddata(int index) const;
  inline ::GXGDYMahList* mutable_cbhandcarddata(int index);
  inline ::GXGDYMahList* add_cbhandcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::GXGDYMahList >&
      cbhandcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GXGDYMahList >*
      mutable_cbhandcarddata();

  // repeated .GXGDYAwardList cbAwardCardData = 14;
  inline int cbawardcarddata_size() const;
  inline void clear_cbawardcarddata();
  static const int kCbAwardCardDataFieldNumber = 14;
  inline const ::GXGDYAwardList& cbawardcarddata(int index) const;
  inline ::GXGDYAwardList* mutable_cbawardcarddata(int index);
  inline ::GXGDYAwardList* add_cbawardcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::GXGDYAwardList >&
      cbawardcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GXGDYAwardList >*
      mutable_cbawardcarddata();

  // repeated int32 lOnlyWinScore = 15;
  inline int lonlywinscore_size() const;
  inline void clear_lonlywinscore();
  static const int kLOnlyWinScoreFieldNumber = 15;
  inline ::google::protobuf::int32 lonlywinscore(int index) const;
  inline void set_lonlywinscore(int index, ::google::protobuf::int32 value);
  inline void add_lonlywinscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lonlywinscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lonlywinscore();

  // optional bool bRoundEnd = 16;
  inline bool has_broundend() const;
  inline void clear_broundend();
  static const int kBRoundEndFieldNumber = 16;
  inline bool broundend() const;
  inline void set_broundend(bool value);

  // repeated int32 lHuiTouScore = 17;
  inline int lhuitouscore_size() const;
  inline void clear_lhuitouscore();
  static const int kLHuiTouScoreFieldNumber = 17;
  inline ::google::protobuf::int32 lhuitouscore(int index) const;
  inline void set_lhuitouscore(int index, ::google::protobuf::int32 value);
  inline void add_lhuitouscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lhuitouscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lhuitouscore();

  // optional bool bZhuangWin = 18;
  inline bool has_bzhuangwin() const;
  inline void clear_bzhuangwin();
  static const int kBZhuangWinFieldNumber = 18;
  inline bool bzhuangwin() const;
  inline void set_bzhuangwin(bool value);

  // repeated int32 cbJiangMaCardData = 19;
  inline int cbjiangmacarddata_size() const;
  inline void clear_cbjiangmacarddata();
  static const int kCbJiangMaCardDataFieldNumber = 19;
  inline ::google::protobuf::int32 cbjiangmacarddata(int index) const;
  inline void set_cbjiangmacarddata(int index, ::google::protobuf::int32 value);
  inline void add_cbjiangmacarddata(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbjiangmacarddata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbjiangmacarddata();

  // repeated .GXGDYScoreList detailedScores = 20;
  inline int detailedscores_size() const;
  inline void clear_detailedscores();
  static const int kDetailedScoresFieldNumber = 20;
  inline const ::GXGDYScoreList& detailedscores(int index) const;
  inline ::GXGDYScoreList* mutable_detailedscores(int index);
  inline ::GXGDYScoreList* add_detailedscores();
  inline const ::google::protobuf::RepeatedPtrField< ::GXGDYScoreList >&
      detailedscores() const;
  inline ::google::protobuf::RepeatedPtrField< ::GXGDYScoreList >*
      mutable_detailedscores();

  // optional bool bIsDaTu = 21;
  inline bool has_bisdatu() const;
  inline void clear_bisdatu();
  static const int kBIsDaTuFieldNumber = 21;
  inline bool bisdatu() const;
  inline void set_bisdatu(bool value);

  // optional bool bIsKuTong = 22;
  inline bool has_biskutong() const;
  inline void clear_biskutong();
  static const int kBIsKuTongFieldNumber = 22;
  inline bool biskutong() const;
  inline void set_biskutong(bool value);

  // optional int32 nNo1Seat = 23;
  inline bool has_nno1seat() const;
  inline void clear_nno1seat();
  static const int kNNo1SeatFieldNumber = 23;
  inline ::google::protobuf::int32 nno1seat() const;
  inline void set_nno1seat(::google::protobuf::int32 value);

  // optional int32 nWinerSeat = 24;
  inline bool has_nwinerseat() const;
  inline void clear_nwinerseat();
  static const int kNWinerSeatFieldNumber = 24;
  inline ::google::protobuf::int32 nwinerseat() const;
  inline void set_nwinerseat(::google::protobuf::int32 value);

  // optional int32 nWinersMate = 25;
  inline bool has_nwinersmate() const;
  inline void clear_nwinersmate();
  static const int kNWinersMateFieldNumber = 25;
  inline ::google::protobuf::int32 nwinersmate() const;
  inline void set_nwinersmate(::google::protobuf::int32 value);

  // optional int32 nNo2Seat = 26;
  inline bool has_nno2seat() const;
  inline void clear_nno2seat();
  static const int kNNo2SeatFieldNumber = 26;
  inline ::google::protobuf::int32 nno2seat() const;
  inline void set_nno2seat(::google::protobuf::int32 value);

  // optional int32 nNo3Seat = 27;
  inline bool has_nno3seat() const;
  inline void clear_nno3seat();
  static const int kNNo3SeatFieldNumber = 27;
  inline ::google::protobuf::int32 nno3seat() const;
  inline void set_nno3seat(::google::protobuf::int32 value);

  // optional int32 nNo4Seat = 28;
  inline bool has_nno4seat() const;
  inline void clear_nno4seat();
  static const int kNNo4SeatFieldNumber = 28;
  inline ::google::protobuf::int32 nno4seat() const;
  inline void set_nno4seat(::google::protobuf::int32 value);

  // optional bool bBroken = 29;
  inline bool has_bbroken() const;
  inline void clear_bbroken();
  static const int kBBrokenFieldNumber = 29;
  inline bool bbroken() const;
  inline void set_bbroken(bool value);

  // optional int32 nBrokenPlayerSeat = 30;
  inline bool has_nbrokenplayerseat() const;
  inline void clear_nbrokenplayerseat();
  static const int kNBrokenPlayerSeatFieldNumber = 30;
  inline ::google::protobuf::int32 nbrokenplayerseat() const;
  inline void set_nbrokenplayerseat(::google::protobuf::int32 value);

  // optional bool bSurrender = 31;
  inline bool has_bsurrender() const;
  inline void clear_bsurrender();
  static const int kBSurrenderFieldNumber = 31;
  inline bool bsurrender() const;
  inline void set_bsurrender(bool value);

  // optional int32 nSurrenderPlayerSeat = 32;
  inline bool has_nsurrenderplayerseat() const;
  inline void clear_nsurrenderplayerseat();
  static const int kNSurrenderPlayerSeatFieldNumber = 32;
  inline ::google::protobuf::int32 nsurrenderplayerseat() const;
  inline void set_nsurrenderplayerseat(::google::protobuf::int32 value);

  // repeated bool bIsSpring = 33;
  inline int bisspring_size() const;
  inline void clear_bisspring();
  static const int kBIsSpringFieldNumber = 33;
  inline bool bisspring(int index) const;
  inline void set_bisspring(int index, bool value);
  inline void add_bisspring(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      bisspring() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_bisspring();

  // repeated int32 nSurplusCardCount = 34;
  inline int nsurpluscardcount_size() const;
  inline void clear_nsurpluscardcount();
  static const int kNSurplusCardCountFieldNumber = 34;
  inline ::google::protobuf::int32 nsurpluscardcount(int index) const;
  inline void set_nsurpluscardcount(int index, ::google::protobuf::int32 value);
  inline void add_nsurpluscardcount(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nsurpluscardcount() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nsurpluscardcount();

  // @@protoc_insertion_point(class_scope:ProGXGDYGameEnd)
 private:
  inline void set_has_lgametax();
  inline void clear_has_lgametax();
  inline void set_has_wprovideuser();
  inline void clear_has_wprovideuser();
  inline void set_has_cbchihucard();
  inline void clear_has_cbchihucard();
  inline void set_has_broundend();
  inline void clear_has_broundend();
  inline void set_has_bzhuangwin();
  inline void clear_has_bzhuangwin();
  inline void set_has_bisdatu();
  inline void clear_has_bisdatu();
  inline void set_has_biskutong();
  inline void clear_has_biskutong();
  inline void set_has_nno1seat();
  inline void clear_has_nno1seat();
  inline void set_has_nwinerseat();
  inline void clear_has_nwinerseat();
  inline void set_has_nwinersmate();
  inline void clear_has_nwinersmate();
  inline void set_has_nno2seat();
  inline void clear_has_nno2seat();
  inline void set_has_nno3seat();
  inline void clear_has_nno3seat();
  inline void set_has_nno4seat();
  inline void clear_has_nno4seat();
  inline void set_has_bbroken();
  inline void clear_has_bbroken();
  inline void set_has_nbrokenplayerseat();
  inline void clear_has_nbrokenplayerseat();
  inline void set_has_bsurrender();
  inline void clear_has_bsurrender();
  inline void set_has_nsurrenderplayerseat();
  inline void clear_has_nsurrenderplayerseat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbchongguang_;
  ::google::protobuf::int32 lgametax_;
  ::google::protobuf::int32 wprovideuser_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbbawangking_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dwchihukind_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dwchihuright_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ltotaslgamescore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lcurrentgamescore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lcurrentpointscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lattachscore_;
  ::google::protobuf::RepeatedPtrField< ::GXGDYMahList > cbhandcarddata_;
  ::google::protobuf::RepeatedPtrField< ::GXGDYAwardList > cbawardcarddata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lonlywinscore_;
  ::google::protobuf::int32 cbchihucard_;
  bool broundend_;
  bool bzhuangwin_;
  bool bisdatu_;
  bool biskutong_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lhuitouscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbjiangmacarddata_;
  ::google::protobuf::RepeatedPtrField< ::GXGDYScoreList > detailedscores_;
  ::google::protobuf::int32 nno1seat_;
  ::google::protobuf::int32 nwinerseat_;
  ::google::protobuf::int32 nwinersmate_;
  ::google::protobuf::int32 nno2seat_;
  ::google::protobuf::int32 nno3seat_;
  ::google::protobuf::int32 nno4seat_;
  ::google::protobuf::int32 nbrokenplayerseat_;
  bool bbroken_;
  bool bsurrender_;
  ::google::protobuf::RepeatedField< bool > bisspring_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nsurpluscardcount_;
  ::google::protobuf::int32 nsurrenderplayerseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(33 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameEnd* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameQuickSoundRequest : public ::google::protobuf::Message {
 public:
  ProGXGDYGameQuickSoundRequest();
  virtual ~ProGXGDYGameQuickSoundRequest();

  ProGXGDYGameQuickSoundRequest(const ProGXGDYGameQuickSoundRequest& from);

  inline ProGXGDYGameQuickSoundRequest& operator=(const ProGXGDYGameQuickSoundRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameQuickSoundRequest& default_instance();

  void Swap(ProGXGDYGameQuickSoundRequest* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameQuickSoundRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameQuickSoundRequest& from);
  void MergeFrom(const ProGXGDYGameQuickSoundRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameQuickSoundRequest_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameQuickSoundRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameQuickSoundRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameQuickSoundRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameQuickSoundRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameQuickSoundRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameQuickSoundRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameQuickSoundRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameQuickSoundRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 desk_id = 2;
  inline bool has_desk_id() const;
  inline void clear_desk_id();
  static const int kDeskIdFieldNumber = 2;
  inline ::google::protobuf::int32 desk_id() const;
  inline void set_desk_id(::google::protobuf::int32 value);

  // optional int32 seat_id = 3;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 3;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional int32 sound_id = 4;
  inline bool has_sound_id() const;
  inline void clear_sound_id();
  static const int kSoundIdFieldNumber = 4;
  inline ::google::protobuf::int32 sound_id() const;
  inline void set_sound_id(::google::protobuf::int32 value);

  // optional bytes text = 5;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 5;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const void* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameQuickSoundRequest)
 private:
  inline void set_has_desk_id();
  inline void clear_has_desk_id();
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_sound_id();
  inline void clear_has_sound_id();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 desk_id_;
  ::google::protobuf::int32 seat_id_;
  ::std::string* text_;
  ::google::protobuf::int32 sound_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameQuickSoundRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameQuickSoundResponse : public ::google::protobuf::Message {
 public:
  ProGXGDYGameQuickSoundResponse();
  virtual ~ProGXGDYGameQuickSoundResponse();

  ProGXGDYGameQuickSoundResponse(const ProGXGDYGameQuickSoundResponse& from);

  inline ProGXGDYGameQuickSoundResponse& operator=(const ProGXGDYGameQuickSoundResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameQuickSoundResponse& default_instance();

  void Swap(ProGXGDYGameQuickSoundResponse* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameQuickSoundResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameQuickSoundResponse& from);
  void MergeFrom(const ProGXGDYGameQuickSoundResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameQuickSoundResponse_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameQuickSoundResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameQuickSoundResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameQuickSoundResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameQuickSoundResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameQuickSoundResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameQuickSoundResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameQuickSoundResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameQuickSoundResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 desk_id = 2;
  inline bool has_desk_id() const;
  inline void clear_desk_id();
  static const int kDeskIdFieldNumber = 2;
  inline ::google::protobuf::int32 desk_id() const;
  inline void set_desk_id(::google::protobuf::int32 value);

  // optional int32 seat_id = 3;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 3;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional int32 sound_id = 4;
  inline bool has_sound_id() const;
  inline void clear_sound_id();
  static const int kSoundIdFieldNumber = 4;
  inline ::google::protobuf::int32 sound_id() const;
  inline void set_sound_id(::google::protobuf::int32 value);

  // optional bytes text = 5;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 5;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const void* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameQuickSoundResponse)
 private:
  inline void set_has_desk_id();
  inline void clear_has_desk_id();
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_sound_id();
  inline void clear_has_sound_id();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 desk_id_;
  ::google::protobuf::int32 seat_id_;
  ::std::string* text_;
  ::google::protobuf::int32 sound_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameQuickSoundResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameSendDiscardMahs : public ::google::protobuf::Message {
 public:
  ProGXGDYGameSendDiscardMahs();
  virtual ~ProGXGDYGameSendDiscardMahs();

  ProGXGDYGameSendDiscardMahs(const ProGXGDYGameSendDiscardMahs& from);

  inline ProGXGDYGameSendDiscardMahs& operator=(const ProGXGDYGameSendDiscardMahs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameSendDiscardMahs& default_instance();

  void Swap(ProGXGDYGameSendDiscardMahs* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameSendDiscardMahs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameSendDiscardMahs& from);
  void MergeFrom(const ProGXGDYGameSendDiscardMahs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameSendDiscardMahs_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameSendDiscardMahs_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameSendDiscardMahs_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameSendDiscardMahs_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameSendDiscardMahs_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameSendDiscardMahs_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameSendDiscardMahs_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameSendDiscardMahs_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameSendDiscardMahs_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // repeated .GXGDYMahList cbCardData = 3;
  inline int cbcarddata_size() const;
  inline void clear_cbcarddata();
  static const int kCbCardDataFieldNumber = 3;
  inline const ::GXGDYMahList& cbcarddata(int index) const;
  inline ::GXGDYMahList* mutable_cbcarddata(int index);
  inline ::GXGDYMahList* add_cbcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::GXGDYMahList >&
      cbcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GXGDYMahList >*
      mutable_cbcarddata();

  // repeated .GXGDYMahList cbNoChangeCardData = 4;
  inline int cbnochangecarddata_size() const;
  inline void clear_cbnochangecarddata();
  static const int kCbNoChangeCardDataFieldNumber = 4;
  inline const ::GXGDYMahList& cbnochangecarddata(int index) const;
  inline ::GXGDYMahList* mutable_cbnochangecarddata(int index);
  inline ::GXGDYMahList* add_cbnochangecarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::GXGDYMahList >&
      cbnochangecarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GXGDYMahList >*
      mutable_cbnochangecarddata();

  // optional int32 deskCount = 5;
  inline bool has_deskcount() const;
  inline void clear_deskcount();
  static const int kDeskCountFieldNumber = 5;
  inline ::google::protobuf::int32 deskcount() const;
  inline void set_deskcount(::google::protobuf::int32 value);

  // repeated int32 outCardCount = 6;
  inline int outcardcount_size() const;
  inline void clear_outcardcount();
  static const int kOutCardCountFieldNumber = 6;
  inline ::google::protobuf::int32 outcardcount(int index) const;
  inline void set_outcardcount(int index, ::google::protobuf::int32 value);
  inline void add_outcardcount(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      outcardcount() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_outcardcount();

  // @@protoc_insertion_point(class_scope:ProGXGDYGameSendDiscardMahs)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_deskcount();
  inline void clear_has_deskcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GXGDYMahList > cbcarddata_;
  ::google::protobuf::int32 seat_id_;
  ::google::protobuf::int32 deskcount_;
  ::google::protobuf::RepeatedPtrField< ::GXGDYMahList > cbnochangecarddata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > outcardcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameSendDiscardMahs* default_instance_;
};
// -------------------------------------------------------------------

class GXGDYWeaveItem : public ::google::protobuf::Message {
 public:
  GXGDYWeaveItem();
  virtual ~GXGDYWeaveItem();

  GXGDYWeaveItem(const GXGDYWeaveItem& from);

  inline GXGDYWeaveItem& operator=(const GXGDYWeaveItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GXGDYWeaveItem& default_instance();

  void Swap(GXGDYWeaveItem* other);

  // implements Message ----------------------------------------------

  GXGDYWeaveItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GXGDYWeaveItem& from);
  void MergeFrom(const GXGDYWeaveItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 weaveKind = 1;
  inline bool has_weavekind() const;
  inline void clear_weavekind();
  static const int kWeaveKindFieldNumber = 1;
  inline ::google::protobuf::int32 weavekind() const;
  inline void set_weavekind(::google::protobuf::int32 value);

  // optional int32 centercard = 2;
  inline bool has_centercard() const;
  inline void clear_centercard();
  static const int kCentercardFieldNumber = 2;
  inline ::google::protobuf::int32 centercard() const;
  inline void set_centercard(::google::protobuf::int32 value);

  // optional int32 provideUser = 3;
  inline bool has_provideuser() const;
  inline void clear_provideuser();
  static const int kProvideUserFieldNumber = 3;
  inline ::google::protobuf::int32 provideuser() const;
  inline void set_provideuser(::google::protobuf::int32 value);

  // optional int32 cardsize = 4;
  inline bool has_cardsize() const;
  inline void clear_cardsize();
  static const int kCardsizeFieldNumber = 4;
  inline ::google::protobuf::int32 cardsize() const;
  inline void set_cardsize(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GXGDYWeaveItem)
 private:
  inline void set_has_weavekind();
  inline void clear_has_weavekind();
  inline void set_has_centercard();
  inline void clear_has_centercard();
  inline void set_has_provideuser();
  inline void clear_has_provideuser();
  inline void set_has_cardsize();
  inline void clear_has_cardsize();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 weavekind_;
  ::google::protobuf::int32 centercard_;
  ::google::protobuf::int32 provideuser_;
  ::google::protobuf::int32 cardsize_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static GXGDYWeaveItem* default_instance_;
};
// -------------------------------------------------------------------

class GXGDYWeaveItems : public ::google::protobuf::Message {
 public:
  GXGDYWeaveItems();
  virtual ~GXGDYWeaveItems();

  GXGDYWeaveItems(const GXGDYWeaveItems& from);

  inline GXGDYWeaveItems& operator=(const GXGDYWeaveItems& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GXGDYWeaveItems& default_instance();

  void Swap(GXGDYWeaveItems* other);

  // implements Message ----------------------------------------------

  GXGDYWeaveItems* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GXGDYWeaveItems& from);
  void MergeFrom(const GXGDYWeaveItems& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GXGDYWeaveItem items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::GXGDYWeaveItem& items(int index) const;
  inline ::GXGDYWeaveItem* mutable_items(int index);
  inline ::GXGDYWeaveItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::GXGDYWeaveItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::GXGDYWeaveItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:GXGDYWeaveItems)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GXGDYWeaveItem > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static GXGDYWeaveItems* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameSendActionMahs : public ::google::protobuf::Message {
 public:
  ProGXGDYGameSendActionMahs();
  virtual ~ProGXGDYGameSendActionMahs();

  ProGXGDYGameSendActionMahs(const ProGXGDYGameSendActionMahs& from);

  inline ProGXGDYGameSendActionMahs& operator=(const ProGXGDYGameSendActionMahs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameSendActionMahs& default_instance();

  void Swap(ProGXGDYGameSendActionMahs* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameSendActionMahs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameSendActionMahs& from);
  void MergeFrom(const ProGXGDYGameSendActionMahs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameSendActionMahs_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameSendActionMahs_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameSendActionMahs_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameSendActionMahs_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameSendActionMahs_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameSendActionMahs_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameSendActionMahs_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameSendActionMahs_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameSendActionMahs_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // repeated .GXGDYWeaveItems weaves = 3;
  inline int weaves_size() const;
  inline void clear_weaves();
  static const int kWeavesFieldNumber = 3;
  inline const ::GXGDYWeaveItems& weaves(int index) const;
  inline ::GXGDYWeaveItems* mutable_weaves(int index);
  inline ::GXGDYWeaveItems* add_weaves();
  inline const ::google::protobuf::RepeatedPtrField< ::GXGDYWeaveItems >&
      weaves() const;
  inline ::google::protobuf::RepeatedPtrField< ::GXGDYWeaveItems >*
      mutable_weaves();

  // @@protoc_insertion_point(class_scope:ProGXGDYGameSendActionMahs)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GXGDYWeaveItems > weaves_;
  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameSendActionMahs* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameBrokenRequest : public ::google::protobuf::Message {
 public:
  ProGXGDYGameBrokenRequest();
  virtual ~ProGXGDYGameBrokenRequest();

  ProGXGDYGameBrokenRequest(const ProGXGDYGameBrokenRequest& from);

  inline ProGXGDYGameBrokenRequest& operator=(const ProGXGDYGameBrokenRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameBrokenRequest& default_instance();

  void Swap(ProGXGDYGameBrokenRequest* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameBrokenRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameBrokenRequest& from);
  void MergeFrom(const ProGXGDYGameBrokenRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameBrokenRequest_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameBrokenRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameBrokenRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameBrokenRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameBrokenRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameBrokenRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameBrokenRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameBrokenRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameBrokenRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional .GXGDYBROKEN_TYPE type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::GXGDYBROKEN_TYPE type() const;
  inline void set_type(::GXGDYBROKEN_TYPE value);

  // optional int32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameBrokenRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;
  int type_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameBrokenRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameBrokenOperate : public ::google::protobuf::Message {
 public:
  ProGXGDYGameBrokenOperate();
  virtual ~ProGXGDYGameBrokenOperate();

  ProGXGDYGameBrokenOperate(const ProGXGDYGameBrokenOperate& from);

  inline ProGXGDYGameBrokenOperate& operator=(const ProGXGDYGameBrokenOperate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameBrokenOperate& default_instance();

  void Swap(ProGXGDYGameBrokenOperate* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameBrokenOperate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameBrokenOperate& from);
  void MergeFrom(const ProGXGDYGameBrokenOperate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameBrokenOperate_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameBrokenOperate_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameBrokenOperate_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameBrokenOperate_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameBrokenOperate_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameBrokenOperate_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameBrokenOperate_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameBrokenOperate_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameBrokenOperate_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional .GXGDYBROKEN_OPERATE result = 3 [default = GXGDY_BO_DISAGREE];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::GXGDYBROKEN_OPERATE result() const;
  inline void set_result(::GXGDYBROKEN_OPERATE value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameBrokenOperate)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameBrokenOperate* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameBrokenNotify : public ::google::protobuf::Message {
 public:
  ProGXGDYGameBrokenNotify();
  virtual ~ProGXGDYGameBrokenNotify();

  ProGXGDYGameBrokenNotify(const ProGXGDYGameBrokenNotify& from);

  inline ProGXGDYGameBrokenNotify& operator=(const ProGXGDYGameBrokenNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameBrokenNotify& default_instance();

  void Swap(ProGXGDYGameBrokenNotify* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameBrokenNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameBrokenNotify& from);
  void MergeFrom(const ProGXGDYGameBrokenNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameBrokenNotify_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameBrokenNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameBrokenNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameBrokenNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameBrokenNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameBrokenNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameBrokenNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameBrokenNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameBrokenNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional .GXGDYBROKEN_CODE operate_code = 3 [default = GXGDY_BC_SUCCESS];
  inline bool has_operate_code() const;
  inline void clear_operate_code();
  static const int kOperateCodeFieldNumber = 3;
  inline ::GXGDYBROKEN_CODE operate_code() const;
  inline void set_operate_code(::GXGDYBROKEN_CODE value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameBrokenNotify)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_operate_code();
  inline void clear_has_operate_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;
  int operate_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameBrokenNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameRuleConfig : public ::google::protobuf::Message {
 public:
  ProGXGDYGameRuleConfig();
  virtual ~ProGXGDYGameRuleConfig();

  ProGXGDYGameRuleConfig(const ProGXGDYGameRuleConfig& from);

  inline ProGXGDYGameRuleConfig& operator=(const ProGXGDYGameRuleConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameRuleConfig& default_instance();

  void Swap(ProGXGDYGameRuleConfig* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameRuleConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameRuleConfig& from);
  void MergeFrom(const ProGXGDYGameRuleConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameRuleConfig_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameRuleConfig_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameRuleConfig_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameRuleConfig_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameRuleConfig_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameRuleConfig_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameRuleConfig_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameRuleConfig_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameRuleConfig_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 game_round = 1;
  inline bool has_game_round() const;
  inline void clear_game_round();
  static const int kGameRoundFieldNumber = 1;
  inline ::google::protobuf::int32 game_round() const;
  inline void set_game_round(::google::protobuf::int32 value);

  // optional int32 need_card = 2;
  inline bool has_need_card() const;
  inline void clear_need_card();
  static const int kNeedCardFieldNumber = 2;
  inline ::google::protobuf::int32 need_card() const;
  inline void set_need_card(::google::protobuf::int32 value);

  // optional bool have_bottom_king = 3;
  inline bool has_have_bottom_king() const;
  inline void clear_have_bottom_king();
  static const int kHaveBottomKingFieldNumber = 3;
  inline bool have_bottom_king() const;
  inline void set_have_bottom_king(bool value);

  // optional bool have_mai_lei = 4;
  inline bool has_have_mai_lei() const;
  inline void clear_have_mai_lei();
  static const int kHaveMaiLeiFieldNumber = 4;
  inline bool have_mai_lei() const;
  inline void set_have_mai_lei(bool value);

  // optional bool hava_hui_tou = 5;
  inline bool has_hava_hui_tou() const;
  inline void clear_hava_hui_tou();
  static const int kHavaHuiTouFieldNumber = 5;
  inline bool hava_hui_tou() const;
  inline void set_hava_hui_tou(bool value);

  // optional int32 nMasterSeat = 6;
  inline bool has_nmasterseat() const;
  inline void clear_nmasterseat();
  static const int kNMasterSeatFieldNumber = 6;
  inline ::google::protobuf::int32 nmasterseat() const;
  inline void set_nmasterseat(::google::protobuf::int32 value);

  // optional int32 current_game_count = 7;
  inline bool has_current_game_count() const;
  inline void clear_current_game_count();
  static const int kCurrentGameCountFieldNumber = 7;
  inline ::google::protobuf::int32 current_game_count() const;
  inline void set_current_game_count(::google::protobuf::int32 value);

  // optional bool have_jianma = 8;
  inline bool has_have_jianma() const;
  inline void clear_have_jianma();
  static const int kHaveJianmaFieldNumber = 8;
  inline bool have_jianma() const;
  inline void set_have_jianma(bool value);

  // optional int32 nChongguanNum = 9;
  inline bool has_nchongguannum() const;
  inline void clear_nchongguannum();
  static const int kNChongguanNumFieldNumber = 9;
  inline ::google::protobuf::int32 nchongguannum() const;
  inline void set_nchongguannum(::google::protobuf::int32 value);

  // optional bool bbawangfanbei = 10;
  inline bool has_bbawangfanbei() const;
  inline void clear_bbawangfanbei();
  static const int kBbawangfanbeiFieldNumber = 10;
  inline bool bbawangfanbei() const;
  inline void set_bbawangfanbei(bool value);

  // optional int32 nPlayerNum = 11;
  inline bool has_nplayernum() const;
  inline void clear_nplayernum();
  static const int kNPlayerNumFieldNumber = 11;
  inline ::google::protobuf::int32 nplayernum() const;
  inline void set_nplayernum(::google::protobuf::int32 value);

  // optional bytes sRoomNum = 12;
  inline bool has_sroomnum() const;
  inline void clear_sroomnum();
  static const int kSRoomNumFieldNumber = 12;
  inline const ::std::string& sroomnum() const;
  inline void set_sroomnum(const ::std::string& value);
  inline void set_sroomnum(const char* value);
  inline void set_sroomnum(const void* value, size_t size);
  inline ::std::string* mutable_sroomnum();
  inline ::std::string* release_sroomnum();
  inline void set_allocated_sroomnum(::std::string* sroomnum);

  // optional bytes sPlayTime = 13;
  inline bool has_splaytime() const;
  inline void clear_splaytime();
  static const int kSPlayTimeFieldNumber = 13;
  inline const ::std::string& splaytime() const;
  inline void set_splaytime(const ::std::string& value);
  inline void set_splaytime(const char* value);
  inline void set_splaytime(const void* value, size_t size);
  inline ::std::string* mutable_splaytime();
  inline ::std::string* release_splaytime();
  inline void set_allocated_splaytime(::std::string* splaytime);

  // optional int32 gametype = 14;
  inline bool has_gametype() const;
  inline void clear_gametype();
  static const int kGametypeFieldNumber = 14;
  inline ::google::protobuf::int32 gametype() const;
  inline void set_gametype(::google::protobuf::int32 value);

  // optional bool isJingDian = 15;
  inline bool has_isjingdian() const;
  inline void clear_isjingdian();
  static const int kIsJingDianFieldNumber = 15;
  inline bool isjingdian() const;
  inline void set_isjingdian(bool value);

  // optional bool isOpenTeammate = 16;
  inline bool has_isopenteammate() const;
  inline void clear_isopenteammate();
  static const int kIsOpenTeammateFieldNumber = 16;
  inline bool isopenteammate() const;
  inline void set_isopenteammate(bool value);

  // optional bool bIsSendSingleCard = 17;
  inline bool has_bissendsinglecard() const;
  inline void clear_bissendsinglecard();
  static const int kBIsSendSingleCardFieldNumber = 17;
  inline bool bissendsinglecard() const;
  inline void set_bissendsinglecard(bool value);

  // optional int32 nMultipleTop = 18;
  inline bool has_nmultipletop() const;
  inline void clear_nmultipletop();
  static const int kNMultipleTopFieldNumber = 18;
  inline ::google::protobuf::int32 nmultipletop() const;
  inline void set_nmultipletop(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameRuleConfig)
 private:
  inline void set_has_game_round();
  inline void clear_has_game_round();
  inline void set_has_need_card();
  inline void clear_has_need_card();
  inline void set_has_have_bottom_king();
  inline void clear_has_have_bottom_king();
  inline void set_has_have_mai_lei();
  inline void clear_has_have_mai_lei();
  inline void set_has_hava_hui_tou();
  inline void clear_has_hava_hui_tou();
  inline void set_has_nmasterseat();
  inline void clear_has_nmasterseat();
  inline void set_has_current_game_count();
  inline void clear_has_current_game_count();
  inline void set_has_have_jianma();
  inline void clear_has_have_jianma();
  inline void set_has_nchongguannum();
  inline void clear_has_nchongguannum();
  inline void set_has_bbawangfanbei();
  inline void clear_has_bbawangfanbei();
  inline void set_has_nplayernum();
  inline void clear_has_nplayernum();
  inline void set_has_sroomnum();
  inline void clear_has_sroomnum();
  inline void set_has_splaytime();
  inline void clear_has_splaytime();
  inline void set_has_gametype();
  inline void clear_has_gametype();
  inline void set_has_isjingdian();
  inline void clear_has_isjingdian();
  inline void set_has_isopenteammate();
  inline void clear_has_isopenteammate();
  inline void set_has_bissendsinglecard();
  inline void clear_has_bissendsinglecard();
  inline void set_has_nmultipletop();
  inline void clear_has_nmultipletop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 game_round_;
  ::google::protobuf::int32 need_card_;
  bool have_bottom_king_;
  bool have_mai_lei_;
  bool hava_hui_tou_;
  bool have_jianma_;
  ::google::protobuf::int32 nmasterseat_;
  ::google::protobuf::int32 current_game_count_;
  ::google::protobuf::int32 nchongguannum_;
  ::std::string* sroomnum_;
  ::google::protobuf::int32 nplayernum_;
  ::google::protobuf::int32 gametype_;
  ::std::string* splaytime_;
  bool bbawangfanbei_;
  bool isjingdian_;
  bool isopenteammate_;
  bool bissendsinglecard_;
  ::google::protobuf::int32 nmultipletop_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameRuleConfig* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameBrokenStatus : public ::google::protobuf::Message {
 public:
  ProGXGDYGameBrokenStatus();
  virtual ~ProGXGDYGameBrokenStatus();

  ProGXGDYGameBrokenStatus(const ProGXGDYGameBrokenStatus& from);

  inline ProGXGDYGameBrokenStatus& operator=(const ProGXGDYGameBrokenStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameBrokenStatus& default_instance();

  void Swap(ProGXGDYGameBrokenStatus* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameBrokenStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameBrokenStatus& from);
  void MergeFrom(const ProGXGDYGameBrokenStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameBrokenStatus_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameBrokenStatus_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameBrokenStatus_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameBrokenStatus_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameBrokenStatus_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameBrokenStatus_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameBrokenStatus_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameBrokenStatus_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameBrokenStatus_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 broken_seat = 1;
  inline bool has_broken_seat() const;
  inline void clear_broken_seat();
  static const int kBrokenSeatFieldNumber = 1;
  inline ::google::protobuf::int32 broken_seat() const;
  inline void set_broken_seat(::google::protobuf::int32 value);

  // repeated bool broken_status = 2;
  inline int broken_status_size() const;
  inline void clear_broken_status();
  static const int kBrokenStatusFieldNumber = 2;
  inline bool broken_status(int index) const;
  inline void set_broken_status(int index, bool value);
  inline void add_broken_status(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      broken_status() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_broken_status();

  // optional int32 left_time = 3;
  inline bool has_left_time() const;
  inline void clear_left_time();
  static const int kLeftTimeFieldNumber = 3;
  inline ::google::protobuf::int32 left_time() const;
  inline void set_left_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameBrokenStatus)
 private:
  inline void set_has_broken_seat();
  inline void clear_has_broken_seat();
  inline void set_has_left_time();
  inline void clear_has_left_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< bool > broken_status_;
  ::google::protobuf::int32 broken_seat_;
  ::google::protobuf::int32 left_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameBrokenStatus* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameDataResp : public ::google::protobuf::Message {
 public:
  ProGXGDYGameDataResp();
  virtual ~ProGXGDYGameDataResp();

  ProGXGDYGameDataResp(const ProGXGDYGameDataResp& from);

  inline ProGXGDYGameDataResp& operator=(const ProGXGDYGameDataResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameDataResp& default_instance();

  void Swap(ProGXGDYGameDataResp* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameDataResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameDataResp& from);
  void MergeFrom(const ProGXGDYGameDataResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameDataResp_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameDataResp_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameDataResp_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameDataResp_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameDataResp_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameDataResp_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameDataResp_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameDataResp_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameDataResp_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 total_score = 1;
  inline int total_score_size() const;
  inline void clear_total_score();
  static const int kTotalScoreFieldNumber = 1;
  inline ::google::protobuf::int32 total_score(int index) const;
  inline void set_total_score(int index, ::google::protobuf::int32 value);
  inline void add_total_score(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      total_score() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_total_score();

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameDataResp)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > total_score_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameDataResp* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameRecordRequest : public ::google::protobuf::Message {
 public:
  ProGXGDYGameRecordRequest();
  virtual ~ProGXGDYGameRecordRequest();

  ProGXGDYGameRecordRequest(const ProGXGDYGameRecordRequest& from);

  inline ProGXGDYGameRecordRequest& operator=(const ProGXGDYGameRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameRecordRequest& default_instance();

  void Swap(ProGXGDYGameRecordRequest* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameRecordRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameRecordRequest& from);
  void MergeFrom(const ProGXGDYGameRecordRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameRecordRequest_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameRecordRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameRecordRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameRecordRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameRecordRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameRecordRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameRecordRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameRecordRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameRecordRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional bytes url = 2;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 2;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const void* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameRecordRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_url();
  inline void clear_has_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* url_;
  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameRecordRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameRecordResponse : public ::google::protobuf::Message {
 public:
  ProGXGDYGameRecordResponse();
  virtual ~ProGXGDYGameRecordResponse();

  ProGXGDYGameRecordResponse(const ProGXGDYGameRecordResponse& from);

  inline ProGXGDYGameRecordResponse& operator=(const ProGXGDYGameRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameRecordResponse& default_instance();

  void Swap(ProGXGDYGameRecordResponse* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameRecordResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameRecordResponse& from);
  void MergeFrom(const ProGXGDYGameRecordResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameRecordResponse_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameRecordResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameRecordResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameRecordResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameRecordResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameRecordResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameRecordResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameRecordResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameRecordResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional bytes url = 2;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 2;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const void* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameRecordResponse)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_url();
  inline void clear_has_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* url_;
  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameRecordResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameUserLocationRequest : public ::google::protobuf::Message {
 public:
  ProGXGDYGameUserLocationRequest();
  virtual ~ProGXGDYGameUserLocationRequest();

  ProGXGDYGameUserLocationRequest(const ProGXGDYGameUserLocationRequest& from);

  inline ProGXGDYGameUserLocationRequest& operator=(const ProGXGDYGameUserLocationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameUserLocationRequest& default_instance();

  void Swap(ProGXGDYGameUserLocationRequest* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameUserLocationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameUserLocationRequest& from);
  void MergeFrom(const ProGXGDYGameUserLocationRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameUserLocationRequest_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameUserLocationRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameUserLocationRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameUserLocationRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameUserLocationRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameUserLocationRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameUserLocationRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameUserLocationRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameUserLocationRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional double dwlongitude = 2;
  inline bool has_dwlongitude() const;
  inline void clear_dwlongitude();
  static const int kDwlongitudeFieldNumber = 2;
  inline double dwlongitude() const;
  inline void set_dwlongitude(double value);

  // optional double dwlatitude = 3;
  inline bool has_dwlatitude() const;
  inline void clear_dwlatitude();
  static const int kDwlatitudeFieldNumber = 3;
  inline double dwlatitude() const;
  inline void set_dwlatitude(double value);

  // optional bytes strDistrict = 4;
  inline bool has_strdistrict() const;
  inline void clear_strdistrict();
  static const int kStrDistrictFieldNumber = 4;
  inline const ::std::string& strdistrict() const;
  inline void set_strdistrict(const ::std::string& value);
  inline void set_strdistrict(const char* value);
  inline void set_strdistrict(const void* value, size_t size);
  inline ::std::string* mutable_strdistrict();
  inline ::std::string* release_strdistrict();
  inline void set_allocated_strdistrict(::std::string* strdistrict);

  // optional bytes strStreetName = 5;
  inline bool has_strstreetname() const;
  inline void clear_strstreetname();
  static const int kStrStreetNameFieldNumber = 5;
  inline const ::std::string& strstreetname() const;
  inline void set_strstreetname(const ::std::string& value);
  inline void set_strstreetname(const char* value);
  inline void set_strstreetname(const void* value, size_t size);
  inline ::std::string* mutable_strstreetname();
  inline ::std::string* release_strstreetname();
  inline void set_allocated_strstreetname(::std::string* strstreetname);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameUserLocationRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_dwlongitude();
  inline void clear_has_dwlongitude();
  inline void set_has_dwlatitude();
  inline void clear_has_dwlatitude();
  inline void set_has_strdistrict();
  inline void clear_has_strdistrict();
  inline void set_has_strstreetname();
  inline void clear_has_strstreetname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  double dwlongitude_;
  double dwlatitude_;
  ::std::string* strdistrict_;
  ::std::string* strstreetname_;
  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameUserLocationRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameSyncCardResponse : public ::google::protobuf::Message {
 public:
  ProGXGDYGameSyncCardResponse();
  virtual ~ProGXGDYGameSyncCardResponse();

  ProGXGDYGameSyncCardResponse(const ProGXGDYGameSyncCardResponse& from);

  inline ProGXGDYGameSyncCardResponse& operator=(const ProGXGDYGameSyncCardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameSyncCardResponse& default_instance();

  void Swap(ProGXGDYGameSyncCardResponse* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameSyncCardResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameSyncCardResponse& from);
  void MergeFrom(const ProGXGDYGameSyncCardResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameSyncCardResponse_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameSyncCardResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameSyncCardResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameSyncCardResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameSyncCardResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameSyncCardResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameSyncCardResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameSyncCardResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameSyncCardResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 handmahs = 3;
  inline int handmahs_size() const;
  inline void clear_handmahs();
  static const int kHandmahsFieldNumber = 3;
  inline ::google::protobuf::int32 handmahs(int index) const;
  inline void set_handmahs(int index, ::google::protobuf::int32 value);
  inline void add_handmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      handmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_handmahs();

  // @@protoc_insertion_point(class_scope:ProGXGDYGameSyncCardResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > handmahs_;
  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameSyncCardResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameUserPhoneStatusRequest : public ::google::protobuf::Message {
 public:
  ProGXGDYGameUserPhoneStatusRequest();
  virtual ~ProGXGDYGameUserPhoneStatusRequest();

  ProGXGDYGameUserPhoneStatusRequest(const ProGXGDYGameUserPhoneStatusRequest& from);

  inline ProGXGDYGameUserPhoneStatusRequest& operator=(const ProGXGDYGameUserPhoneStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameUserPhoneStatusRequest& default_instance();

  void Swap(ProGXGDYGameUserPhoneStatusRequest* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameUserPhoneStatusRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameUserPhoneStatusRequest& from);
  void MergeFrom(const ProGXGDYGameUserPhoneStatusRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameUserPhoneStatusRequest_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameUserPhoneStatusRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameUserPhoneStatusRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameUserPhoneStatusRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameUserPhoneStatusRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameUserPhoneStatusRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameUserPhoneStatusRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameUserPhoneStatusRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameUserPhoneStatusRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional int32 userstatus = 2;
  inline bool has_userstatus() const;
  inline void clear_userstatus();
  static const int kUserstatusFieldNumber = 2;
  inline ::google::protobuf::int32 userstatus() const;
  inline void set_userstatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameUserPhoneStatusRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_userstatus();
  inline void clear_has_userstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;
  ::google::protobuf::int32 userstatus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameUserPhoneStatusRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameUserGiveUpRequest : public ::google::protobuf::Message {
 public:
  ProGXGDYGameUserGiveUpRequest();
  virtual ~ProGXGDYGameUserGiveUpRequest();

  ProGXGDYGameUserGiveUpRequest(const ProGXGDYGameUserGiveUpRequest& from);

  inline ProGXGDYGameUserGiveUpRequest& operator=(const ProGXGDYGameUserGiveUpRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameUserGiveUpRequest& default_instance();

  void Swap(ProGXGDYGameUserGiveUpRequest* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameUserGiveUpRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameUserGiveUpRequest& from);
  void MergeFrom(const ProGXGDYGameUserGiveUpRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameUserGiveUpRequest_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameUserGiveUpRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameUserGiveUpRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameUserGiveUpRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameUserGiveUpRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameUserGiveUpRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameUserGiveUpRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameUserGiveUpRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameUserGiveUpRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameUserGiveUpRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameUserGiveUpRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameUserHintRequest : public ::google::protobuf::Message {
 public:
  ProGXGDYGameUserHintRequest();
  virtual ~ProGXGDYGameUserHintRequest();

  ProGXGDYGameUserHintRequest(const ProGXGDYGameUserHintRequest& from);

  inline ProGXGDYGameUserHintRequest& operator=(const ProGXGDYGameUserHintRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameUserHintRequest& default_instance();

  void Swap(ProGXGDYGameUserHintRequest* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameUserHintRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameUserHintRequest& from);
  void MergeFrom(const ProGXGDYGameUserHintRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameUserHintRequest_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameUserHintRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameUserHintRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameUserHintRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameUserHintRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameUserHintRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameUserHintRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameUserHintRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameUserHintRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bool bIsUserRequest = 1;
  inline bool has_bisuserrequest() const;
  inline void clear_bisuserrequest();
  static const int kBIsUserRequestFieldNumber = 1;
  inline bool bisuserrequest() const;
  inline void set_bisuserrequest(bool value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameUserHintRequest)
 private:
  inline void set_has_bisuserrequest();
  inline void clear_has_bisuserrequest();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bisuserrequest_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameUserHintRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameUserHintResponse : public ::google::protobuf::Message {
 public:
  ProGXGDYGameUserHintResponse();
  virtual ~ProGXGDYGameUserHintResponse();

  ProGXGDYGameUserHintResponse(const ProGXGDYGameUserHintResponse& from);

  inline ProGXGDYGameUserHintResponse& operator=(const ProGXGDYGameUserHintResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameUserHintResponse& default_instance();

  void Swap(ProGXGDYGameUserHintResponse* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameUserHintResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameUserHintResponse& from);
  void MergeFrom(const ProGXGDYGameUserHintResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameUserHintResponse_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameUserHintResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameUserHintResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameUserHintResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameUserHintResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameUserHintResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameUserHintResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameUserHintResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameUserHintResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 lenth = 1;
  inline bool has_lenth() const;
  inline void clear_lenth();
  static const int kLenthFieldNumber = 1;
  inline ::google::protobuf::int32 lenth() const;
  inline void set_lenth(::google::protobuf::int32 value);

  // repeated int32 outMahs = 2;
  inline int outmahs_size() const;
  inline void clear_outmahs();
  static const int kOutMahsFieldNumber = 2;
  inline ::google::protobuf::int32 outmahs(int index) const;
  inline void set_outmahs(int index, ::google::protobuf::int32 value);
  inline void add_outmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      outmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_outmahs();

  // @@protoc_insertion_point(class_scope:ProGXGDYGameUserHintResponse)
 private:
  inline void set_has_lenth();
  inline void clear_has_lenth();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > outmahs_;
  ::google::protobuf::int32 lenth_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameUserHintResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameUserDaTuNotify : public ::google::protobuf::Message {
 public:
  ProGXGDYGameUserDaTuNotify();
  virtual ~ProGXGDYGameUserDaTuNotify();

  ProGXGDYGameUserDaTuNotify(const ProGXGDYGameUserDaTuNotify& from);

  inline ProGXGDYGameUserDaTuNotify& operator=(const ProGXGDYGameUserDaTuNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameUserDaTuNotify& default_instance();

  void Swap(ProGXGDYGameUserDaTuNotify* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameUserDaTuNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameUserDaTuNotify& from);
  void MergeFrom(const ProGXGDYGameUserDaTuNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameUserDaTuNotify_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameUserDaTuNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameUserDaTuNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameUserDaTuNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameUserDaTuNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameUserDaTuNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameUserDaTuNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameUserDaTuNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameUserDaTuNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameUserDaTuNotify)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameUserDaTuNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameUserTeammateRequest : public ::google::protobuf::Message {
 public:
  ProGXGDYGameUserTeammateRequest();
  virtual ~ProGXGDYGameUserTeammateRequest();

  ProGXGDYGameUserTeammateRequest(const ProGXGDYGameUserTeammateRequest& from);

  inline ProGXGDYGameUserTeammateRequest& operator=(const ProGXGDYGameUserTeammateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameUserTeammateRequest& default_instance();

  void Swap(ProGXGDYGameUserTeammateRequest* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameUserTeammateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameUserTeammateRequest& from);
  void MergeFrom(const ProGXGDYGameUserTeammateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameUserTeammateRequest_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameUserTeammateRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameUserTeammateRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameUserTeammateRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameUserTeammateRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameUserTeammateRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameUserTeammateRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameUserTeammateRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameUserTeammateRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 bankerMateSeat = 1;
  inline bool has_bankermateseat() const;
  inline void clear_bankermateseat();
  static const int kBankerMateSeatFieldNumber = 1;
  inline ::google::protobuf::int32 bankermateseat() const;
  inline void set_bankermateseat(::google::protobuf::int32 value);

  // optional int32 mateCard = 2;
  inline bool has_matecard() const;
  inline void clear_matecard();
  static const int kMateCardFieldNumber = 2;
  inline ::google::protobuf::int32 matecard() const;
  inline void set_matecard(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameUserTeammateRequest)
 private:
  inline void set_has_bankermateseat();
  inline void clear_has_bankermateseat();
  inline void set_has_matecard();
  inline void clear_has_matecard();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bankermateseat_;
  ::google::protobuf::int32 matecard_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameUserTeammateRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameUserDaTuRequest : public ::google::protobuf::Message {
 public:
  ProGXGDYGameUserDaTuRequest();
  virtual ~ProGXGDYGameUserDaTuRequest();

  ProGXGDYGameUserDaTuRequest(const ProGXGDYGameUserDaTuRequest& from);

  inline ProGXGDYGameUserDaTuRequest& operator=(const ProGXGDYGameUserDaTuRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameUserDaTuRequest& default_instance();

  void Swap(ProGXGDYGameUserDaTuRequest* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameUserDaTuRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameUserDaTuRequest& from);
  void MergeFrom(const ProGXGDYGameUserDaTuRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameUserDaTuRequest_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameUserDaTuRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameUserDaTuRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameUserDaTuRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameUserDaTuRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameUserDaTuRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameUserDaTuRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameUserDaTuRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameUserDaTuRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool bIsDaTu = 2;
  inline bool has_bisdatu() const;
  inline void clear_bisdatu();
  static const int kBIsDaTuFieldNumber = 2;
  inline bool bisdatu() const;
  inline void set_bisdatu(bool value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameUserDaTuRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_bisdatu();
  inline void clear_has_bisdatu();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  bool bisdatu_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameUserDaTuRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameUserDaTuResponse : public ::google::protobuf::Message {
 public:
  ProGXGDYGameUserDaTuResponse();
  virtual ~ProGXGDYGameUserDaTuResponse();

  ProGXGDYGameUserDaTuResponse(const ProGXGDYGameUserDaTuResponse& from);

  inline ProGXGDYGameUserDaTuResponse& operator=(const ProGXGDYGameUserDaTuResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameUserDaTuResponse& default_instance();

  void Swap(ProGXGDYGameUserDaTuResponse* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameUserDaTuResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameUserDaTuResponse& from);
  void MergeFrom(const ProGXGDYGameUserDaTuResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameUserDaTuResponse_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameUserDaTuResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameUserDaTuResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameUserDaTuResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameUserDaTuResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameUserDaTuResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameUserDaTuResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameUserDaTuResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameUserDaTuResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool bIsDaTu = 2;
  inline bool has_bisdatu() const;
  inline void clear_bisdatu();
  static const int kBIsDaTuFieldNumber = 2;
  inline bool bisdatu() const;
  inline void set_bisdatu(bool value);

  // optional int32 nextSeat = 3;
  inline bool has_nextseat() const;
  inline void clear_nextseat();
  static const int kNextSeatFieldNumber = 3;
  inline ::google::protobuf::int32 nextseat() const;
  inline void set_nextseat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameUserDaTuResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_bisdatu();
  inline void clear_has_bisdatu();
  inline void set_has_nextseat();
  inline void clear_has_nextseat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  bool bisdatu_;
  ::google::protobuf::int32 nextseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameUserDaTuResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameUserDaTuResult : public ::google::protobuf::Message {
 public:
  ProGXGDYGameUserDaTuResult();
  virtual ~ProGXGDYGameUserDaTuResult();

  ProGXGDYGameUserDaTuResult(const ProGXGDYGameUserDaTuResult& from);

  inline ProGXGDYGameUserDaTuResult& operator=(const ProGXGDYGameUserDaTuResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameUserDaTuResult& default_instance();

  void Swap(ProGXGDYGameUserDaTuResult* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameUserDaTuResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameUserDaTuResult& from);
  void MergeFrom(const ProGXGDYGameUserDaTuResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameUserDaTuResult_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameUserDaTuResult_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameUserDaTuResult_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameUserDaTuResult_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameUserDaTuResult_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameUserDaTuResult_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameUserDaTuResult_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameUserDaTuResult_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameUserDaTuResult_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool bIsDaTu = 2;
  inline bool has_bisdatu() const;
  inline void clear_bisdatu();
  static const int kBIsDaTuFieldNumber = 2;
  inline bool bisdatu() const;
  inline void set_bisdatu(bool value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameUserDaTuResult)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_bisdatu();
  inline void clear_has_bisdatu();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  bool bisdatu_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameUserDaTuResult* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameShangYouResult : public ::google::protobuf::Message {
 public:
  ProGXGDYGameShangYouResult();
  virtual ~ProGXGDYGameShangYouResult();

  ProGXGDYGameShangYouResult(const ProGXGDYGameShangYouResult& from);

  inline ProGXGDYGameShangYouResult& operator=(const ProGXGDYGameShangYouResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameShangYouResult& default_instance();

  void Swap(ProGXGDYGameShangYouResult* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameShangYouResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameShangYouResult& from);
  void MergeFrom(const ProGXGDYGameShangYouResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameShangYouResult_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameShangYouResult_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameShangYouResult_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameShangYouResult_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameShangYouResult_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameShangYouResult_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameShangYouResult_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameShangYouResult_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameShangYouResult_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 shangyouSeat = 1;
  inline int shangyouseat_size() const;
  inline void clear_shangyouseat();
  static const int kShangyouSeatFieldNumber = 1;
  inline ::google::protobuf::int32 shangyouseat(int index) const;
  inline void set_shangyouseat(int index, ::google::protobuf::int32 value);
  inline void add_shangyouseat(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shangyouseat() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shangyouseat();

  // @@protoc_insertion_point(class_scope:ProGXGDYGameShangYouResult)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shangyouseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameShangYouResult* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameShowFriendNotify : public ::google::protobuf::Message {
 public:
  ProGXGDYGameShowFriendNotify();
  virtual ~ProGXGDYGameShowFriendNotify();

  ProGXGDYGameShowFriendNotify(const ProGXGDYGameShowFriendNotify& from);

  inline ProGXGDYGameShowFriendNotify& operator=(const ProGXGDYGameShowFriendNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameShowFriendNotify& default_instance();

  void Swap(ProGXGDYGameShowFriendNotify* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameShowFriendNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameShowFriendNotify& from);
  void MergeFrom(const ProGXGDYGameShowFriendNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameShowFriendNotify_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameShowFriendNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameShowFriendNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameShowFriendNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameShowFriendNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameShowFriendNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameShowFriendNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameShowFriendNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameShowFriendNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bool bShow = 1;
  inline bool has_bshow() const;
  inline void clear_bshow();
  static const int kBShowFieldNumber = 1;
  inline bool bshow() const;
  inline void set_bshow(bool value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameShowFriendNotify)
 private:
  inline void set_has_bshow();
  inline void clear_has_bshow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bshow_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameShowFriendNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameBoomNumNotify : public ::google::protobuf::Message {
 public:
  ProGXGDYGameBoomNumNotify();
  virtual ~ProGXGDYGameBoomNumNotify();

  ProGXGDYGameBoomNumNotify(const ProGXGDYGameBoomNumNotify& from);

  inline ProGXGDYGameBoomNumNotify& operator=(const ProGXGDYGameBoomNumNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameBoomNumNotify& default_instance();

  void Swap(ProGXGDYGameBoomNumNotify* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameBoomNumNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameBoomNumNotify& from);
  void MergeFrom(const ProGXGDYGameBoomNumNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameBoomNumNotify_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameBoomNumNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameBoomNumNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameBoomNumNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameBoomNumNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameBoomNumNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameBoomNumNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameBoomNumNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameBoomNumNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 nSeat = 1;
  inline bool has_nseat() const;
  inline void clear_nseat();
  static const int kNSeatFieldNumber = 1;
  inline ::google::protobuf::int32 nseat() const;
  inline void set_nseat(::google::protobuf::int32 value);

  // optional int32 nBoomNum = 2;
  inline bool has_nboomnum() const;
  inline void clear_nboomnum();
  static const int kNBoomNumFieldNumber = 2;
  inline ::google::protobuf::int32 nboomnum() const;
  inline void set_nboomnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameBoomNumNotify)
 private:
  inline void set_has_nseat();
  inline void clear_has_nseat();
  inline void set_has_nboomnum();
  inline void clear_has_nboomnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nseat_;
  ::google::protobuf::int32 nboomnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameBoomNumNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameShowBoomDataRequest : public ::google::protobuf::Message {
 public:
  ProGXGDYGameShowBoomDataRequest();
  virtual ~ProGXGDYGameShowBoomDataRequest();

  ProGXGDYGameShowBoomDataRequest(const ProGXGDYGameShowBoomDataRequest& from);

  inline ProGXGDYGameShowBoomDataRequest& operator=(const ProGXGDYGameShowBoomDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameShowBoomDataRequest& default_instance();

  void Swap(ProGXGDYGameShowBoomDataRequest* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameShowBoomDataRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameShowBoomDataRequest& from);
  void MergeFrom(const ProGXGDYGameShowBoomDataRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameShowBoomDataRequest_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameShowBoomDataRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameShowBoomDataRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameShowBoomDataRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameShowBoomDataRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameShowBoomDataRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameShowBoomDataRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameShowBoomDataRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameShowBoomDataRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 nSeat = 1;
  inline bool has_nseat() const;
  inline void clear_nseat();
  static const int kNSeatFieldNumber = 1;
  inline ::google::protobuf::int32 nseat() const;
  inline void set_nseat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameShowBoomDataRequest)
 private:
  inline void set_has_nseat();
  inline void clear_has_nseat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameShowBoomDataRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameShowBoomDataResponse : public ::google::protobuf::Message {
 public:
  ProGXGDYGameShowBoomDataResponse();
  virtual ~ProGXGDYGameShowBoomDataResponse();

  ProGXGDYGameShowBoomDataResponse(const ProGXGDYGameShowBoomDataResponse& from);

  inline ProGXGDYGameShowBoomDataResponse& operator=(const ProGXGDYGameShowBoomDataResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameShowBoomDataResponse& default_instance();

  void Swap(ProGXGDYGameShowBoomDataResponse* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameShowBoomDataResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameShowBoomDataResponse& from);
  void MergeFrom(const ProGXGDYGameShowBoomDataResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameShowBoomDataResponse_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameShowBoomDataResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameShowBoomDataResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameShowBoomDataResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameShowBoomDataResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameShowBoomDataResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameShowBoomDataResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameShowBoomDataResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameShowBoomDataResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 nSeat = 1;
  inline bool has_nseat() const;
  inline void clear_nseat();
  static const int kNSeatFieldNumber = 1;
  inline ::google::protobuf::int32 nseat() const;
  inline void set_nseat(::google::protobuf::int32 value);

  // optional bool bIsSendToAll = 2;
  inline bool has_bissendtoall() const;
  inline void clear_bissendtoall();
  static const int kBIsSendToAllFieldNumber = 2;
  inline bool bissendtoall() const;
  inline void set_bissendtoall(bool value);

  // repeated .GXGDYAwardList cbAwardCardData = 3;
  inline int cbawardcarddata_size() const;
  inline void clear_cbawardcarddata();
  static const int kCbAwardCardDataFieldNumber = 3;
  inline const ::GXGDYAwardList& cbawardcarddata(int index) const;
  inline ::GXGDYAwardList* mutable_cbawardcarddata(int index);
  inline ::GXGDYAwardList* add_cbawardcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::GXGDYAwardList >&
      cbawardcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GXGDYAwardList >*
      mutable_cbawardcarddata();

  // @@protoc_insertion_point(class_scope:ProGXGDYGameShowBoomDataResponse)
 private:
  inline void set_has_nseat();
  inline void clear_has_nseat();
  inline void set_has_bissendtoall();
  inline void clear_has_bissendtoall();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nseat_;
  bool bissendtoall_;
  ::google::protobuf::RepeatedPtrField< ::GXGDYAwardList > cbawardcarddata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameShowBoomDataResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameCardTypeSelect : public ::google::protobuf::Message {
 public:
  ProGXGDYGameCardTypeSelect();
  virtual ~ProGXGDYGameCardTypeSelect();

  ProGXGDYGameCardTypeSelect(const ProGXGDYGameCardTypeSelect& from);

  inline ProGXGDYGameCardTypeSelect& operator=(const ProGXGDYGameCardTypeSelect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameCardTypeSelect& default_instance();

  void Swap(ProGXGDYGameCardTypeSelect* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameCardTypeSelect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameCardTypeSelect& from);
  void MergeFrom(const ProGXGDYGameCardTypeSelect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameCardTypeSelect_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameCardTypeSelect_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameCardTypeSelect_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameCardTypeSelect_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameCardTypeSelect_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameCardTypeSelect_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameCardTypeSelect_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameCardTypeSelect_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameCardTypeSelect_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 nSeat = 1;
  inline bool has_nseat() const;
  inline void clear_nseat();
  static const int kNSeatFieldNumber = 1;
  inline ::google::protobuf::int32 nseat() const;
  inline void set_nseat(::google::protobuf::int32 value);

  // repeated .GXGDYMahList CardTypeSelectData = 2;
  inline int cardtypeselectdata_size() const;
  inline void clear_cardtypeselectdata();
  static const int kCardTypeSelectDataFieldNumber = 2;
  inline const ::GXGDYMahList& cardtypeselectdata(int index) const;
  inline ::GXGDYMahList* mutable_cardtypeselectdata(int index);
  inline ::GXGDYMahList* add_cardtypeselectdata();
  inline const ::google::protobuf::RepeatedPtrField< ::GXGDYMahList >&
      cardtypeselectdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GXGDYMahList >*
      mutable_cardtypeselectdata();

  // @@protoc_insertion_point(class_scope:ProGXGDYGameCardTypeSelect)
 private:
  inline void set_has_nseat();
  inline void clear_has_nseat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GXGDYMahList > cardtypeselectdata_;
  ::google::protobuf::int32 nseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameCardTypeSelect* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameIsSurrenderSelect : public ::google::protobuf::Message {
 public:
  ProGXGDYGameIsSurrenderSelect();
  virtual ~ProGXGDYGameIsSurrenderSelect();

  ProGXGDYGameIsSurrenderSelect(const ProGXGDYGameIsSurrenderSelect& from);

  inline ProGXGDYGameIsSurrenderSelect& operator=(const ProGXGDYGameIsSurrenderSelect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameIsSurrenderSelect& default_instance();

  void Swap(ProGXGDYGameIsSurrenderSelect* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameIsSurrenderSelect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameIsSurrenderSelect& from);
  void MergeFrom(const ProGXGDYGameIsSurrenderSelect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameIsSurrenderSelect_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameIsSurrenderSelect_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameIsSurrenderSelect_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameIsSurrenderSelect_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameIsSurrenderSelect_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameIsSurrenderSelect_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameIsSurrenderSelect_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameIsSurrenderSelect_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameIsSurrenderSelect_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 nSeat = 1;
  inline bool has_nseat() const;
  inline void clear_nseat();
  static const int kNSeatFieldNumber = 1;
  inline ::google::protobuf::int32 nseat() const;
  inline void set_nseat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameIsSurrenderSelect)
 private:
  inline void set_has_nseat();
  inline void clear_has_nseat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameIsSurrenderSelect* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameIsSurrenderOperate : public ::google::protobuf::Message {
 public:
  ProGXGDYGameIsSurrenderOperate();
  virtual ~ProGXGDYGameIsSurrenderOperate();

  ProGXGDYGameIsSurrenderOperate(const ProGXGDYGameIsSurrenderOperate& from);

  inline ProGXGDYGameIsSurrenderOperate& operator=(const ProGXGDYGameIsSurrenderOperate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameIsSurrenderOperate& default_instance();

  void Swap(ProGXGDYGameIsSurrenderOperate* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameIsSurrenderOperate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameIsSurrenderOperate& from);
  void MergeFrom(const ProGXGDYGameIsSurrenderOperate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameIsSurrenderOperate_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameIsSurrenderOperate_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameIsSurrenderOperate_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameIsSurrenderOperate_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameIsSurrenderOperate_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameIsSurrenderOperate_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameIsSurrenderOperate_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameIsSurrenderOperate_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameIsSurrenderOperate_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 nSeat = 1;
  inline bool has_nseat() const;
  inline void clear_nseat();
  static const int kNSeatFieldNumber = 1;
  inline ::google::protobuf::int32 nseat() const;
  inline void set_nseat(::google::protobuf::int32 value);

  // optional bool bIsSurrender = 2;
  inline bool has_bissurrender() const;
  inline void clear_bissurrender();
  static const int kBIsSurrenderFieldNumber = 2;
  inline bool bissurrender() const;
  inline void set_bissurrender(bool value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameIsSurrenderOperate)
 private:
  inline void set_has_nseat();
  inline void clear_has_nseat();
  inline void set_has_bissurrender();
  inline void clear_has_bissurrender();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nseat_;
  bool bissurrender_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameIsSurrenderOperate* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameIsAgreeSurrenderSelect : public ::google::protobuf::Message {
 public:
  ProGXGDYGameIsAgreeSurrenderSelect();
  virtual ~ProGXGDYGameIsAgreeSurrenderSelect();

  ProGXGDYGameIsAgreeSurrenderSelect(const ProGXGDYGameIsAgreeSurrenderSelect& from);

  inline ProGXGDYGameIsAgreeSurrenderSelect& operator=(const ProGXGDYGameIsAgreeSurrenderSelect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameIsAgreeSurrenderSelect& default_instance();

  void Swap(ProGXGDYGameIsAgreeSurrenderSelect* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameIsAgreeSurrenderSelect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameIsAgreeSurrenderSelect& from);
  void MergeFrom(const ProGXGDYGameIsAgreeSurrenderSelect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameIsAgreeSurrenderSelect_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameIsAgreeSurrenderSelect_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameIsAgreeSurrenderSelect_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameIsAgreeSurrenderSelect_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameIsAgreeSurrenderSelect_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameIsAgreeSurrenderSelect_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameIsAgreeSurrenderSelect_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameIsAgreeSurrenderSelect_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameIsAgreeSurrenderSelect_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 nSurrenderSeat = 1;
  inline bool has_nsurrenderseat() const;
  inline void clear_nsurrenderseat();
  static const int kNSurrenderSeatFieldNumber = 1;
  inline ::google::protobuf::int32 nsurrenderseat() const;
  inline void set_nsurrenderseat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameIsAgreeSurrenderSelect)
 private:
  inline void set_has_nsurrenderseat();
  inline void clear_has_nsurrenderseat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nsurrenderseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameIsAgreeSurrenderSelect* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameIsAgreeSurrenderOperate : public ::google::protobuf::Message {
 public:
  ProGXGDYGameIsAgreeSurrenderOperate();
  virtual ~ProGXGDYGameIsAgreeSurrenderOperate();

  ProGXGDYGameIsAgreeSurrenderOperate(const ProGXGDYGameIsAgreeSurrenderOperate& from);

  inline ProGXGDYGameIsAgreeSurrenderOperate& operator=(const ProGXGDYGameIsAgreeSurrenderOperate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameIsAgreeSurrenderOperate& default_instance();

  void Swap(ProGXGDYGameIsAgreeSurrenderOperate* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameIsAgreeSurrenderOperate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameIsAgreeSurrenderOperate& from);
  void MergeFrom(const ProGXGDYGameIsAgreeSurrenderOperate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameIsAgreeSurrenderOperate_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameIsAgreeSurrenderOperate_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameIsAgreeSurrenderOperate_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameIsAgreeSurrenderOperate_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameIsAgreeSurrenderOperate_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameIsAgreeSurrenderOperate_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameIsAgreeSurrenderOperate_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameIsAgreeSurrenderOperate_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameIsAgreeSurrenderOperate_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 nSeat = 1;
  inline bool has_nseat() const;
  inline void clear_nseat();
  static const int kNSeatFieldNumber = 1;
  inline ::google::protobuf::int32 nseat() const;
  inline void set_nseat(::google::protobuf::int32 value);

  // optional bool bIsAgreeSurrender = 2;
  inline bool has_bisagreesurrender() const;
  inline void clear_bisagreesurrender();
  static const int kBIsAgreeSurrenderFieldNumber = 2;
  inline bool bisagreesurrender() const;
  inline void set_bisagreesurrender(bool value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameIsAgreeSurrenderOperate)
 private:
  inline void set_has_nseat();
  inline void clear_has_nseat();
  inline void set_has_bisagreesurrender();
  inline void clear_has_bisagreesurrender();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nseat_;
  bool bisagreesurrender_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameIsAgreeSurrenderOperate* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameIsAgreeSurrenderStatus : public ::google::protobuf::Message {
 public:
  ProGXGDYGameIsAgreeSurrenderStatus();
  virtual ~ProGXGDYGameIsAgreeSurrenderStatus();

  ProGXGDYGameIsAgreeSurrenderStatus(const ProGXGDYGameIsAgreeSurrenderStatus& from);

  inline ProGXGDYGameIsAgreeSurrenderStatus& operator=(const ProGXGDYGameIsAgreeSurrenderStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameIsAgreeSurrenderStatus& default_instance();

  void Swap(ProGXGDYGameIsAgreeSurrenderStatus* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameIsAgreeSurrenderStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameIsAgreeSurrenderStatus& from);
  void MergeFrom(const ProGXGDYGameIsAgreeSurrenderStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameIsAgreeSurrenderStatus_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameIsAgreeSurrenderStatus_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameIsAgreeSurrenderStatus_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameIsAgreeSurrenderStatus_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameIsAgreeSurrenderStatus_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameIsAgreeSurrenderStatus_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameIsAgreeSurrenderStatus_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameIsAgreeSurrenderStatus_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameIsAgreeSurrenderStatus_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 nSeat = 1;
  inline bool has_nseat() const;
  inline void clear_nseat();
  static const int kNSeatFieldNumber = 1;
  inline ::google::protobuf::int32 nseat() const;
  inline void set_nseat(::google::protobuf::int32 value);

  // optional bool bIsAgreeSurrender = 2;
  inline bool has_bisagreesurrender() const;
  inline void clear_bisagreesurrender();
  static const int kBIsAgreeSurrenderFieldNumber = 2;
  inline bool bisagreesurrender() const;
  inline void set_bisagreesurrender(bool value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameIsAgreeSurrenderStatus)
 private:
  inline void set_has_nseat();
  inline void clear_has_nseat();
  inline void set_has_bisagreesurrender();
  inline void clear_has_bisagreesurrender();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nseat_;
  bool bisagreesurrender_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameIsAgreeSurrenderStatus* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameSurrenderResult : public ::google::protobuf::Message {
 public:
  ProGXGDYGameSurrenderResult();
  virtual ~ProGXGDYGameSurrenderResult();

  ProGXGDYGameSurrenderResult(const ProGXGDYGameSurrenderResult& from);

  inline ProGXGDYGameSurrenderResult& operator=(const ProGXGDYGameSurrenderResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameSurrenderResult& default_instance();

  void Swap(ProGXGDYGameSurrenderResult* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameSurrenderResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameSurrenderResult& from);
  void MergeFrom(const ProGXGDYGameSurrenderResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameSurrenderResult_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameSurrenderResult_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameSurrenderResult_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameSurrenderResult_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameSurrenderResult_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameSurrenderResult_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameSurrenderResult_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameSurrenderResult_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameSurrenderResult_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bool bSurrenderResult = 1;
  inline bool has_bsurrenderresult() const;
  inline void clear_bsurrenderresult();
  static const int kBSurrenderResultFieldNumber = 1;
  inline bool bsurrenderresult() const;
  inline void set_bsurrenderresult(bool value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameSurrenderResult)
 private:
  inline void set_has_bsurrenderresult();
  inline void clear_has_bsurrenderresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bsurrenderresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameSurrenderResult* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameShowBoomNotify : public ::google::protobuf::Message {
 public:
  ProGXGDYGameShowBoomNotify();
  virtual ~ProGXGDYGameShowBoomNotify();

  ProGXGDYGameShowBoomNotify(const ProGXGDYGameShowBoomNotify& from);

  inline ProGXGDYGameShowBoomNotify& operator=(const ProGXGDYGameShowBoomNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameShowBoomNotify& default_instance();

  void Swap(ProGXGDYGameShowBoomNotify* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameShowBoomNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameShowBoomNotify& from);
  void MergeFrom(const ProGXGDYGameShowBoomNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameShowBoomNotify_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameShowBoomNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameShowBoomNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameShowBoomNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameShowBoomNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameShowBoomNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameShowBoomNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameShowBoomNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameShowBoomNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProGXGDYGameShowBoomNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameShowBoomNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameShowBoomOperate : public ::google::protobuf::Message {
 public:
  ProGXGDYGameShowBoomOperate();
  virtual ~ProGXGDYGameShowBoomOperate();

  ProGXGDYGameShowBoomOperate(const ProGXGDYGameShowBoomOperate& from);

  inline ProGXGDYGameShowBoomOperate& operator=(const ProGXGDYGameShowBoomOperate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameShowBoomOperate& default_instance();

  void Swap(ProGXGDYGameShowBoomOperate* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameShowBoomOperate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameShowBoomOperate& from);
  void MergeFrom(const ProGXGDYGameShowBoomOperate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameShowBoomOperate_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameShowBoomOperate_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameShowBoomOperate_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameShowBoomOperate_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameShowBoomOperate_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameShowBoomOperate_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameShowBoomOperate_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameShowBoomOperate_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameShowBoomOperate_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 nSeat = 1;
  inline bool has_nseat() const;
  inline void clear_nseat();
  static const int kNSeatFieldNumber = 1;
  inline ::google::protobuf::int32 nseat() const;
  inline void set_nseat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameShowBoomOperate)
 private:
  inline void set_has_nseat();
  inline void clear_has_nseat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameShowBoomOperate* default_instance_;
};
// -------------------------------------------------------------------

class ProGXGDYGameShowBoomResponse : public ::google::protobuf::Message {
 public:
  ProGXGDYGameShowBoomResponse();
  virtual ~ProGXGDYGameShowBoomResponse();

  ProGXGDYGameShowBoomResponse(const ProGXGDYGameShowBoomResponse& from);

  inline ProGXGDYGameShowBoomResponse& operator=(const ProGXGDYGameShowBoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProGXGDYGameShowBoomResponse& default_instance();

  void Swap(ProGXGDYGameShowBoomResponse* other);

  // implements Message ----------------------------------------------

  ProGXGDYGameShowBoomResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProGXGDYGameShowBoomResponse& from);
  void MergeFrom(const ProGXGDYGameShowBoomResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProGXGDYGameShowBoomResponse_MSGID MSGID;
  static const MSGID ID = ProGXGDYGameShowBoomResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProGXGDYGameShowBoomResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProGXGDYGameShowBoomResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProGXGDYGameShowBoomResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProGXGDYGameShowBoomResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProGXGDYGameShowBoomResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProGXGDYGameShowBoomResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProGXGDYGameShowBoomResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 nSeat = 1;
  inline bool has_nseat() const;
  inline void clear_nseat();
  static const int kNSeatFieldNumber = 1;
  inline ::google::protobuf::int32 nseat() const;
  inline void set_nseat(::google::protobuf::int32 value);

  // optional int32 AwardScore = 2;
  inline bool has_awardscore() const;
  inline void clear_awardscore();
  static const int kAwardScoreFieldNumber = 2;
  inline ::google::protobuf::int32 awardscore() const;
  inline void set_awardscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProGXGDYGameShowBoomResponse)
 private:
  inline void set_has_nseat();
  inline void clear_has_nseat();
  inline void set_has_awardscore();
  inline void clear_has_awardscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nseat_;
  ::google::protobuf::int32 awardscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GxGdyPk_2eproto();
  friend void protobuf_AssignDesc_GxGdyPk_2eproto();
  friend void protobuf_ShutdownFile_GxGdyPk_2eproto();

  void InitAsDefaultInstance();
  static ProGXGDYGameShowBoomResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// ProGXGDYGameStatusResponse

// optional .GXGDYGameState status = 2;
inline bool ProGXGDYGameStatusResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameStatusResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameStatusResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameStatusResponse::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::GXGDYGameState ProGXGDYGameStatusResponse::status() const {
  return static_cast< ::GXGDYGameState >(status_);
}
inline void ProGXGDYGameStatusResponse::set_status(::GXGDYGameState value) {
  assert(::GXGDYGameState_IsValid(value));
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameDeskInfoResponse

// optional int32 CellScore = 2;
inline bool ProGXGDYGameDeskInfoResponse::has_cellscore() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameDeskInfoResponse::set_has_cellscore() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameDeskInfoResponse::clear_has_cellscore() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameDeskInfoResponse::clear_cellscore() {
  cellscore_ = 0;
  clear_has_cellscore();
}
inline ::google::protobuf::int32 ProGXGDYGameDeskInfoResponse::cellscore() const {
  return cellscore_;
}
inline void ProGXGDYGameDeskInfoResponse::set_cellscore(::google::protobuf::int32 value) {
  set_has_cellscore();
  cellscore_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameReadyNotify

// optional int32 seat = 2;
inline bool ProGXGDYGameReadyNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameReadyNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameReadyNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameReadyNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameReadyNotify::seat() const {
  return seat_;
}
inline void ProGXGDYGameReadyNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 time = 3;
inline bool ProGXGDYGameReadyNotify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameReadyNotify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameReadyNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameReadyNotify::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProGXGDYGameReadyNotify::time() const {
  return time_;
}
inline void ProGXGDYGameReadyNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameReadyRequest

// optional int32 seat = 2;
inline bool ProGXGDYGameReadyRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameReadyRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameReadyRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameReadyRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameReadyRequest::seat() const {
  return seat_;
}
inline void ProGXGDYGameReadyRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameReadyResponse

// optional int32 seat = 2;
inline bool ProGXGDYGameReadyResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameReadyResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameReadyResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameReadyResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameReadyResponse::seat() const {
  return seat_;
}
inline void ProGXGDYGameReadyResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameStart

// optional int32 bankerseat = 2;
inline bool ProGXGDYGameStart::has_bankerseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameStart::set_has_bankerseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameStart::clear_has_bankerseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameStart::clear_bankerseat() {
  bankerseat_ = 0;
  clear_has_bankerseat();
}
inline ::google::protobuf::int32 ProGXGDYGameStart::bankerseat() const {
  return bankerseat_;
}
inline void ProGXGDYGameStart::set_bankerseat(::google::protobuf::int32 value) {
  set_has_bankerseat();
  bankerseat_ = value;
}

// optional int32 gamecount = 3;
inline bool ProGXGDYGameStart::has_gamecount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameStart::set_has_gamecount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameStart::clear_has_gamecount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameStart::clear_gamecount() {
  gamecount_ = 0;
  clear_has_gamecount();
}
inline ::google::protobuf::int32 ProGXGDYGameStart::gamecount() const {
  return gamecount_;
}
inline void ProGXGDYGameStart::set_gamecount(::google::protobuf::int32 value) {
  set_has_gamecount();
  gamecount_ = value;
}

// optional int32 outCardtimes = 4;
inline bool ProGXGDYGameStart::has_outcardtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProGXGDYGameStart::set_has_outcardtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProGXGDYGameStart::clear_has_outcardtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProGXGDYGameStart::clear_outcardtimes() {
  outcardtimes_ = 0;
  clear_has_outcardtimes();
}
inline ::google::protobuf::int32 ProGXGDYGameStart::outcardtimes() const {
  return outcardtimes_;
}
inline void ProGXGDYGameStart::set_outcardtimes(::google::protobuf::int32 value) {
  set_has_outcardtimes();
  outcardtimes_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameDiceNotify

// optional int32 seat = 2;
inline bool ProGXGDYGameDiceNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameDiceNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameDiceNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameDiceNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameDiceNotify::seat() const {
  return seat_;
}
inline void ProGXGDYGameDiceNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 time = 3;
inline bool ProGXGDYGameDiceNotify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameDiceNotify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameDiceNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameDiceNotify::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProGXGDYGameDiceNotify::time() const {
  return time_;
}
inline void ProGXGDYGameDiceNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 dicecount = 4;
inline bool ProGXGDYGameDiceNotify::has_dicecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProGXGDYGameDiceNotify::set_has_dicecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProGXGDYGameDiceNotify::clear_has_dicecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProGXGDYGameDiceNotify::clear_dicecount() {
  dicecount_ = 0;
  clear_has_dicecount();
}
inline ::google::protobuf::int32 ProGXGDYGameDiceNotify::dicecount() const {
  return dicecount_;
}
inline void ProGXGDYGameDiceNotify::set_dicecount(::google::protobuf::int32 value) {
  set_has_dicecount();
  dicecount_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameDiceRequest

// optional int32 seat = 2;
inline bool ProGXGDYGameDiceRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameDiceRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameDiceRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameDiceRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameDiceRequest::seat() const {
  return seat_;
}
inline void ProGXGDYGameDiceRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 dicecount = 3;
inline bool ProGXGDYGameDiceRequest::has_dicecount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameDiceRequest::set_has_dicecount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameDiceRequest::clear_has_dicecount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameDiceRequest::clear_dicecount() {
  dicecount_ = 0;
  clear_has_dicecount();
}
inline ::google::protobuf::int32 ProGXGDYGameDiceRequest::dicecount() const {
  return dicecount_;
}
inline void ProGXGDYGameDiceRequest::set_dicecount(::google::protobuf::int32 value) {
  set_has_dicecount();
  dicecount_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameDiceResult

// optional int32 seat = 2;
inline bool ProGXGDYGameDiceResult::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameDiceResult::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameDiceResult::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameDiceResult::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameDiceResult::seat() const {
  return seat_;
}
inline void ProGXGDYGameDiceResult::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 result = 3;
inline int ProGXGDYGameDiceResult::result_size() const {
  return result_.size();
}
inline void ProGXGDYGameDiceResult::clear_result() {
  result_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameDiceResult::result(int index) const {
  return result_.Get(index);
}
inline void ProGXGDYGameDiceResult::set_result(int index, ::google::protobuf::int32 value) {
  result_.Set(index, value);
}
inline void ProGXGDYGameDiceResult::add_result(::google::protobuf::int32 value) {
  result_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameDiceResult::result() const {
  return result_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameDiceResult::mutable_result() {
  return &result_;
}

// optional int32 dicecount = 4;
inline bool ProGXGDYGameDiceResult::has_dicecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProGXGDYGameDiceResult::set_has_dicecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProGXGDYGameDiceResult::clear_has_dicecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProGXGDYGameDiceResult::clear_dicecount() {
  dicecount_ = 0;
  clear_has_dicecount();
}
inline ::google::protobuf::int32 ProGXGDYGameDiceResult::dicecount() const {
  return dicecount_;
}
inline void ProGXGDYGameDiceResult::set_dicecount(::google::protobuf::int32 value) {
  set_has_dicecount();
  dicecount_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameSendMahs

// optional int32 seat = 2;
inline bool ProGXGDYGameSendMahs::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameSendMahs::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameSendMahs::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameSendMahs::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameSendMahs::seat() const {
  return seat_;
}
inline void ProGXGDYGameSendMahs::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 mahs = 3;
inline int ProGXGDYGameSendMahs::mahs_size() const {
  return mahs_.size();
}
inline void ProGXGDYGameSendMahs::clear_mahs() {
  mahs_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameSendMahs::mahs(int index) const {
  return mahs_.Get(index);
}
inline void ProGXGDYGameSendMahs::set_mahs(int index, ::google::protobuf::int32 value) {
  mahs_.Set(index, value);
}
inline void ProGXGDYGameSendMahs::add_mahs(::google::protobuf::int32 value) {
  mahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameSendMahs::mahs() const {
  return mahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameSendMahs::mutable_mahs() {
  return &mahs_;
}

// repeated int32 mahscount = 4;
inline int ProGXGDYGameSendMahs::mahscount_size() const {
  return mahscount_.size();
}
inline void ProGXGDYGameSendMahs::clear_mahscount() {
  mahscount_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameSendMahs::mahscount(int index) const {
  return mahscount_.Get(index);
}
inline void ProGXGDYGameSendMahs::set_mahscount(int index, ::google::protobuf::int32 value) {
  mahscount_.Set(index, value);
}
inline void ProGXGDYGameSendMahs::add_mahscount(::google::protobuf::int32 value) {
  mahscount_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameSendMahs::mahscount() const {
  return mahscount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameSendMahs::mutable_mahscount() {
  return &mahscount_;
}

// optional int32 cbLeftCount = 5;
inline bool ProGXGDYGameSendMahs::has_cbleftcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProGXGDYGameSendMahs::set_has_cbleftcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProGXGDYGameSendMahs::clear_has_cbleftcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProGXGDYGameSendMahs::clear_cbleftcount() {
  cbleftcount_ = 0;
  clear_has_cbleftcount();
}
inline ::google::protobuf::int32 ProGXGDYGameSendMahs::cbleftcount() const {
  return cbleftcount_;
}
inline void ProGXGDYGameSendMahs::set_cbleftcount(::google::protobuf::int32 value) {
  set_has_cbleftcount();
  cbleftcount_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameKingData

// optional int32 seat = 2;
inline bool ProGXGDYGameKingData::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameKingData::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameKingData::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameKingData::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameKingData::seat() const {
  return seat_;
}
inline void ProGXGDYGameKingData::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 mahs = 3;
inline int ProGXGDYGameKingData::mahs_size() const {
  return mahs_.size();
}
inline void ProGXGDYGameKingData::clear_mahs() {
  mahs_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameKingData::mahs(int index) const {
  return mahs_.Get(index);
}
inline void ProGXGDYGameKingData::set_mahs(int index, ::google::protobuf::int32 value) {
  mahs_.Set(index, value);
}
inline void ProGXGDYGameKingData::add_mahs(::google::protobuf::int32 value) {
  mahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameKingData::mahs() const {
  return mahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameKingData::mutable_mahs() {
  return &mahs_;
}

// repeated int32 downKingScore = 4;
inline int ProGXGDYGameKingData::downkingscore_size() const {
  return downkingscore_.size();
}
inline void ProGXGDYGameKingData::clear_downkingscore() {
  downkingscore_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameKingData::downkingscore(int index) const {
  return downkingscore_.Get(index);
}
inline void ProGXGDYGameKingData::set_downkingscore(int index, ::google::protobuf::int32 value) {
  downkingscore_.Set(index, value);
}
inline void ProGXGDYGameKingData::add_downkingscore(::google::protobuf::int32 value) {
  downkingscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameKingData::downkingscore() const {
  return downkingscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameKingData::mutable_downkingscore() {
  return &downkingscore_;
}

// repeated int32 kingcount = 5;
inline int ProGXGDYGameKingData::kingcount_size() const {
  return kingcount_.size();
}
inline void ProGXGDYGameKingData::clear_kingcount() {
  kingcount_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameKingData::kingcount(int index) const {
  return kingcount_.Get(index);
}
inline void ProGXGDYGameKingData::set_kingcount(int index, ::google::protobuf::int32 value) {
  kingcount_.Set(index, value);
}
inline void ProGXGDYGameKingData::add_kingcount(::google::protobuf::int32 value) {
  kingcount_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameKingData::kingcount() const {
  return kingcount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameKingData::mutable_kingcount() {
  return &kingcount_;
}

// repeated int32 viceking = 6;
inline int ProGXGDYGameKingData::viceking_size() const {
  return viceking_.size();
}
inline void ProGXGDYGameKingData::clear_viceking() {
  viceking_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameKingData::viceking(int index) const {
  return viceking_.Get(index);
}
inline void ProGXGDYGameKingData::set_viceking(int index, ::google::protobuf::int32 value) {
  viceking_.Set(index, value);
}
inline void ProGXGDYGameKingData::add_viceking(::google::protobuf::int32 value) {
  viceking_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameKingData::viceking() const {
  return viceking_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameKingData::mutable_viceking() {
  return &viceking_;
}

// optional .GXGDYSEND_TYPE notify_type = 7 [default = GXGDY_NORMAL_SEND];
inline bool ProGXGDYGameKingData::has_notify_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProGXGDYGameKingData::set_has_notify_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProGXGDYGameKingData::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProGXGDYGameKingData::clear_notify_type() {
  notify_type_ = 1;
  clear_has_notify_type();
}
inline ::GXGDYSEND_TYPE ProGXGDYGameKingData::notify_type() const {
  return static_cast< ::GXGDYSEND_TYPE >(notify_type_);
}
inline void ProGXGDYGameKingData::set_notify_type(::GXGDYSEND_TYPE value) {
  assert(::GXGDYSEND_TYPE_IsValid(value));
  set_has_notify_type();
  notify_type_ = value;
}

// optional .GXGDYKING_TYPE king_type = 8 [default = GXGDY_KING_UP];
inline bool ProGXGDYGameKingData::has_king_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProGXGDYGameKingData::set_has_king_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProGXGDYGameKingData::clear_has_king_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProGXGDYGameKingData::clear_king_type() {
  king_type_ = 1;
  clear_has_king_type();
}
inline ::GXGDYKING_TYPE ProGXGDYGameKingData::king_type() const {
  return static_cast< ::GXGDYKING_TYPE >(king_type_);
}
inline void ProGXGDYGameKingData::set_king_type(::GXGDYKING_TYPE value) {
  assert(::GXGDYKING_TYPE_IsValid(value));
  set_has_king_type();
  king_type_ = value;
}

// repeated int32 cbChongGuang = 9;
inline int ProGXGDYGameKingData::cbchongguang_size() const {
  return cbchongguang_.size();
}
inline void ProGXGDYGameKingData::clear_cbchongguang() {
  cbchongguang_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameKingData::cbchongguang(int index) const {
  return cbchongguang_.Get(index);
}
inline void ProGXGDYGameKingData::set_cbchongguang(int index, ::google::protobuf::int32 value) {
  cbchongguang_.Set(index, value);
}
inline void ProGXGDYGameKingData::add_cbchongguang(::google::protobuf::int32 value) {
  cbchongguang_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameKingData::cbchongguang() const {
  return cbchongguang_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameKingData::mutable_cbchongguang() {
  return &cbchongguang_;
}

// repeated int32 cbBaWangKing = 10;
inline int ProGXGDYGameKingData::cbbawangking_size() const {
  return cbbawangking_.size();
}
inline void ProGXGDYGameKingData::clear_cbbawangking() {
  cbbawangking_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameKingData::cbbawangking(int index) const {
  return cbbawangking_.Get(index);
}
inline void ProGXGDYGameKingData::set_cbbawangking(int index, ::google::protobuf::int32 value) {
  cbbawangking_.Set(index, value);
}
inline void ProGXGDYGameKingData::add_cbbawangking(::google::protobuf::int32 value) {
  cbbawangking_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameKingData::cbbawangking() const {
  return cbbawangking_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameKingData::mutable_cbbawangking() {
  return &cbbawangking_;
}

// -------------------------------------------------------------------

// ProGXGDYGameOutMahsResponse

// optional int32 seat = 2;
inline bool ProGXGDYGameOutMahsResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameOutMahsResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameOutMahsResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameOutMahsResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameOutMahsResponse::seat() const {
  return seat_;
}
inline void ProGXGDYGameOutMahsResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 outMahs = 3;
inline int ProGXGDYGameOutMahsResponse::outmahs_size() const {
  return outmahs_.size();
}
inline void ProGXGDYGameOutMahsResponse::clear_outmahs() {
  outmahs_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameOutMahsResponse::outmahs(int index) const {
  return outmahs_.Get(index);
}
inline void ProGXGDYGameOutMahsResponse::set_outmahs(int index, ::google::protobuf::int32 value) {
  outmahs_.Set(index, value);
}
inline void ProGXGDYGameOutMahsResponse::add_outmahs(::google::protobuf::int32 value) {
  outmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameOutMahsResponse::outmahs() const {
  return outmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameOutMahsResponse::mutable_outmahs() {
  return &outmahs_;
}

// repeated int32 handmahs = 4;
inline int ProGXGDYGameOutMahsResponse::handmahs_size() const {
  return handmahs_.size();
}
inline void ProGXGDYGameOutMahsResponse::clear_handmahs() {
  handmahs_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameOutMahsResponse::handmahs(int index) const {
  return handmahs_.Get(index);
}
inline void ProGXGDYGameOutMahsResponse::set_handmahs(int index, ::google::protobuf::int32 value) {
  handmahs_.Set(index, value);
}
inline void ProGXGDYGameOutMahsResponse::add_handmahs(::google::protobuf::int32 value) {
  handmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameOutMahsResponse::handmahs() const {
  return handmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameOutMahsResponse::mutable_handmahs() {
  return &handmahs_;
}

// optional int32 cardCount = 5;
inline bool ProGXGDYGameOutMahsResponse::has_cardcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProGXGDYGameOutMahsResponse::set_has_cardcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProGXGDYGameOutMahsResponse::clear_has_cardcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProGXGDYGameOutMahsResponse::clear_cardcount() {
  cardcount_ = 0;
  clear_has_cardcount();
}
inline ::google::protobuf::int32 ProGXGDYGameOutMahsResponse::cardcount() const {
  return cardcount_;
}
inline void ProGXGDYGameOutMahsResponse::set_cardcount(::google::protobuf::int32 value) {
  set_has_cardcount();
  cardcount_ = value;
}

// optional int32 cardType = 6;
inline bool ProGXGDYGameOutMahsResponse::has_cardtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProGXGDYGameOutMahsResponse::set_has_cardtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProGXGDYGameOutMahsResponse::clear_has_cardtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProGXGDYGameOutMahsResponse::clear_cardtype() {
  cardtype_ = 0;
  clear_has_cardtype();
}
inline ::google::protobuf::int32 ProGXGDYGameOutMahsResponse::cardtype() const {
  return cardtype_;
}
inline void ProGXGDYGameOutMahsResponse::set_cardtype(::google::protobuf::int32 value) {
  set_has_cardtype();
  cardtype_ = value;
}

// optional int32 cardtypeflg = 7;
inline bool ProGXGDYGameOutMahsResponse::has_cardtypeflg() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProGXGDYGameOutMahsResponse::set_has_cardtypeflg() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProGXGDYGameOutMahsResponse::clear_has_cardtypeflg() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProGXGDYGameOutMahsResponse::clear_cardtypeflg() {
  cardtypeflg_ = 0;
  clear_has_cardtypeflg();
}
inline ::google::protobuf::int32 ProGXGDYGameOutMahsResponse::cardtypeflg() const {
  return cardtypeflg_;
}
inline void ProGXGDYGameOutMahsResponse::set_cardtypeflg(::google::protobuf::int32 value) {
  set_has_cardtypeflg();
  cardtypeflg_ = value;
}

// optional int32 cardPoint = 8;
inline bool ProGXGDYGameOutMahsResponse::has_cardpoint() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProGXGDYGameOutMahsResponse::set_has_cardpoint() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProGXGDYGameOutMahsResponse::clear_has_cardpoint() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProGXGDYGameOutMahsResponse::clear_cardpoint() {
  cardpoint_ = 0;
  clear_has_cardpoint();
}
inline ::google::protobuf::int32 ProGXGDYGameOutMahsResponse::cardpoint() const {
  return cardpoint_;
}
inline void ProGXGDYGameOutMahsResponse::set_cardpoint(::google::protobuf::int32 value) {
  set_has_cardpoint();
  cardpoint_ = value;
}

// optional int32 seriesFlag = 9;
inline bool ProGXGDYGameOutMahsResponse::has_seriesflag() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProGXGDYGameOutMahsResponse::set_has_seriesflag() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProGXGDYGameOutMahsResponse::clear_has_seriesflag() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProGXGDYGameOutMahsResponse::clear_seriesflag() {
  seriesflag_ = 0;
  clear_has_seriesflag();
}
inline ::google::protobuf::int32 ProGXGDYGameOutMahsResponse::seriesflag() const {
  return seriesflag_;
}
inline void ProGXGDYGameOutMahsResponse::set_seriesflag(::google::protobuf::int32 value) {
  set_has_seriesflag();
  seriesflag_ = value;
}

// optional int32 seriesNums = 10;
inline bool ProGXGDYGameOutMahsResponse::has_seriesnums() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProGXGDYGameOutMahsResponse::set_has_seriesnums() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProGXGDYGameOutMahsResponse::clear_has_seriesnums() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProGXGDYGameOutMahsResponse::clear_seriesnums() {
  seriesnums_ = 0;
  clear_has_seriesnums();
}
inline ::google::protobuf::int32 ProGXGDYGameOutMahsResponse::seriesnums() const {
  return seriesnums_;
}
inline void ProGXGDYGameOutMahsResponse::set_seriesnums(::google::protobuf::int32 value) {
  set_has_seriesnums();
  seriesnums_ = value;
}

// repeated int32 noChangeMahs = 11;
inline int ProGXGDYGameOutMahsResponse::nochangemahs_size() const {
  return nochangemahs_.size();
}
inline void ProGXGDYGameOutMahsResponse::clear_nochangemahs() {
  nochangemahs_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameOutMahsResponse::nochangemahs(int index) const {
  return nochangemahs_.Get(index);
}
inline void ProGXGDYGameOutMahsResponse::set_nochangemahs(int index, ::google::protobuf::int32 value) {
  nochangemahs_.Set(index, value);
}
inline void ProGXGDYGameOutMahsResponse::add_nochangemahs(::google::protobuf::int32 value) {
  nochangemahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameOutMahsResponse::nochangemahs() const {
  return nochangemahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameOutMahsResponse::mutable_nochangemahs() {
  return &nochangemahs_;
}

// -------------------------------------------------------------------

// ProGXGDYGameTimerPower

// optional int32 seat = 2;
inline bool ProGXGDYGameTimerPower::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameTimerPower::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameTimerPower::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameTimerPower::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameTimerPower::seat() const {
  return seat_;
}
inline void ProGXGDYGameTimerPower::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 time = 3;
inline bool ProGXGDYGameTimerPower::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameTimerPower::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameTimerPower::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameTimerPower::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProGXGDYGameTimerPower::time() const {
  return time_;
}
inline void ProGXGDYGameTimerPower::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 outcardTime = 4;
inline bool ProGXGDYGameTimerPower::has_outcardtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProGXGDYGameTimerPower::set_has_outcardtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProGXGDYGameTimerPower::clear_has_outcardtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProGXGDYGameTimerPower::clear_outcardtime() {
  outcardtime_ = 0;
  clear_has_outcardtime();
}
inline ::google::protobuf::int32 ProGXGDYGameTimerPower::outcardtime() const {
  return outcardtime_;
}
inline void ProGXGDYGameTimerPower::set_outcardtime(::google::protobuf::int32 value) {
  set_has_outcardtime();
  outcardtime_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameOperateNotify

// optional int32 resumeSeat = 2;
inline bool ProGXGDYGameOperateNotify::has_resumeseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameOperateNotify::set_has_resumeseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameOperateNotify::clear_has_resumeseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameOperateNotify::clear_resumeseat() {
  resumeseat_ = 0;
  clear_has_resumeseat();
}
inline ::google::protobuf::int32 ProGXGDYGameOperateNotify::resumeseat() const {
  return resumeseat_;
}
inline void ProGXGDYGameOperateNotify::set_resumeseat(::google::protobuf::int32 value) {
  set_has_resumeseat();
  resumeseat_ = value;
}

// optional int32 ActionMask = 3;
inline bool ProGXGDYGameOperateNotify::has_actionmask() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameOperateNotify::set_has_actionmask() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameOperateNotify::clear_has_actionmask() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameOperateNotify::clear_actionmask() {
  actionmask_ = 0;
  clear_has_actionmask();
}
inline ::google::protobuf::int32 ProGXGDYGameOperateNotify::actionmask() const {
  return actionmask_;
}
inline void ProGXGDYGameOperateNotify::set_actionmask(::google::protobuf::int32 value) {
  set_has_actionmask();
  actionmask_ = value;
}

// optional int32 ActionCard = 4;
inline bool ProGXGDYGameOperateNotify::has_actioncard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProGXGDYGameOperateNotify::set_has_actioncard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProGXGDYGameOperateNotify::clear_has_actioncard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProGXGDYGameOperateNotify::clear_actioncard() {
  actioncard_ = 0;
  clear_has_actioncard();
}
inline ::google::protobuf::int32 ProGXGDYGameOperateNotify::actioncard() const {
  return actioncard_;
}
inline void ProGXGDYGameOperateNotify::set_actioncard(::google::protobuf::int32 value) {
  set_has_actioncard();
  actioncard_ = value;
}

// optional int32 time = 5;
inline bool ProGXGDYGameOperateNotify::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProGXGDYGameOperateNotify::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProGXGDYGameOperateNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProGXGDYGameOperateNotify::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProGXGDYGameOperateNotify::time() const {
  return time_;
}
inline void ProGXGDYGameOperateNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 operateseat = 6;
inline bool ProGXGDYGameOperateNotify::has_operateseat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProGXGDYGameOperateNotify::set_has_operateseat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProGXGDYGameOperateNotify::clear_has_operateseat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProGXGDYGameOperateNotify::clear_operateseat() {
  operateseat_ = 0;
  clear_has_operateseat();
}
inline ::google::protobuf::int32 ProGXGDYGameOperateNotify::operateseat() const {
  return operateseat_;
}
inline void ProGXGDYGameOperateNotify::set_operateseat(::google::protobuf::int32 value) {
  set_has_operateseat();
  operateseat_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameOperateResult

// optional int32 wOperateUser = 2;
inline bool ProGXGDYGameOperateResult::has_woperateuser() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameOperateResult::set_has_woperateuser() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameOperateResult::clear_has_woperateuser() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameOperateResult::clear_woperateuser() {
  woperateuser_ = 0;
  clear_has_woperateuser();
}
inline ::google::protobuf::int32 ProGXGDYGameOperateResult::woperateuser() const {
  return woperateuser_;
}
inline void ProGXGDYGameOperateResult::set_woperateuser(::google::protobuf::int32 value) {
  set_has_woperateuser();
  woperateuser_ = value;
}

// optional int32 wProvideUser = 3;
inline bool ProGXGDYGameOperateResult::has_wprovideuser() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameOperateResult::set_has_wprovideuser() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameOperateResult::clear_has_wprovideuser() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameOperateResult::clear_wprovideuser() {
  wprovideuser_ = 0;
  clear_has_wprovideuser();
}
inline ::google::protobuf::int32 ProGXGDYGameOperateResult::wprovideuser() const {
  return wprovideuser_;
}
inline void ProGXGDYGameOperateResult::set_wprovideuser(::google::protobuf::int32 value) {
  set_has_wprovideuser();
  wprovideuser_ = value;
}

// optional int32 wOperateCode = 4;
inline bool ProGXGDYGameOperateResult::has_woperatecode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProGXGDYGameOperateResult::set_has_woperatecode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProGXGDYGameOperateResult::clear_has_woperatecode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProGXGDYGameOperateResult::clear_woperatecode() {
  woperatecode_ = 0;
  clear_has_woperatecode();
}
inline ::google::protobuf::int32 ProGXGDYGameOperateResult::woperatecode() const {
  return woperatecode_;
}
inline void ProGXGDYGameOperateResult::set_woperatecode(::google::protobuf::int32 value) {
  set_has_woperatecode();
  woperatecode_ = value;
}

// optional int32 cbOperateCard = 5;
inline bool ProGXGDYGameOperateResult::has_cboperatecard() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProGXGDYGameOperateResult::set_has_cboperatecard() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProGXGDYGameOperateResult::clear_has_cboperatecard() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProGXGDYGameOperateResult::clear_cboperatecard() {
  cboperatecard_ = 0;
  clear_has_cboperatecard();
}
inline ::google::protobuf::int32 ProGXGDYGameOperateResult::cboperatecard() const {
  return cboperatecard_;
}
inline void ProGXGDYGameOperateResult::set_cboperatecard(::google::protobuf::int32 value) {
  set_has_cboperatecard();
  cboperatecard_ = value;
}

// repeated int32 handmahs = 6;
inline int ProGXGDYGameOperateResult::handmahs_size() const {
  return handmahs_.size();
}
inline void ProGXGDYGameOperateResult::clear_handmahs() {
  handmahs_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameOperateResult::handmahs(int index) const {
  return handmahs_.Get(index);
}
inline void ProGXGDYGameOperateResult::set_handmahs(int index, ::google::protobuf::int32 value) {
  handmahs_.Set(index, value);
}
inline void ProGXGDYGameOperateResult::add_handmahs(::google::protobuf::int32 value) {
  handmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameOperateResult::handmahs() const {
  return handmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameOperateResult::mutable_handmahs() {
  return &handmahs_;
}

// optional int32 handcount = 7;
inline bool ProGXGDYGameOperateResult::has_handcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProGXGDYGameOperateResult::set_has_handcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProGXGDYGameOperateResult::clear_has_handcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProGXGDYGameOperateResult::clear_handcount() {
  handcount_ = 0;
  clear_has_handcount();
}
inline ::google::protobuf::int32 ProGXGDYGameOperateResult::handcount() const {
  return handcount_;
}
inline void ProGXGDYGameOperateResult::set_handcount(::google::protobuf::int32 value) {
  set_has_handcount();
  handcount_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameOperateRequest

// optional int32 seat = 2;
inline bool ProGXGDYGameOperateRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameOperateRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameOperateRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameOperateRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameOperateRequest::seat() const {
  return seat_;
}
inline void ProGXGDYGameOperateRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 wOperateCode = 3;
inline bool ProGXGDYGameOperateRequest::has_woperatecode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameOperateRequest::set_has_woperatecode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameOperateRequest::clear_has_woperatecode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameOperateRequest::clear_woperatecode() {
  woperatecode_ = 0;
  clear_has_woperatecode();
}
inline ::google::protobuf::int32 ProGXGDYGameOperateRequest::woperatecode() const {
  return woperatecode_;
}
inline void ProGXGDYGameOperateRequest::set_woperatecode(::google::protobuf::int32 value) {
  set_has_woperatecode();
  woperatecode_ = value;
}

// optional int32 cbOperateCard = 4;
inline bool ProGXGDYGameOperateRequest::has_cboperatecard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProGXGDYGameOperateRequest::set_has_cboperatecard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProGXGDYGameOperateRequest::clear_has_cboperatecard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProGXGDYGameOperateRequest::clear_cboperatecard() {
  cboperatecard_ = 0;
  clear_has_cboperatecard();
}
inline ::google::protobuf::int32 ProGXGDYGameOperateRequest::cboperatecard() const {
  return cboperatecard_;
}
inline void ProGXGDYGameOperateRequest::set_cboperatecard(::google::protobuf::int32 value) {
  set_has_cboperatecard();
  cboperatecard_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameTrust

// optional int32 seat = 2;
inline bool ProGXGDYGameTrust::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameTrust::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameTrust::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameTrust::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameTrust::seat() const {
  return seat_;
}
inline void ProGXGDYGameTrust::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool isTrust = 3;
inline bool ProGXGDYGameTrust::has_istrust() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameTrust::set_has_istrust() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameTrust::clear_has_istrust() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameTrust::clear_istrust() {
  istrust_ = false;
  clear_has_istrust();
}
inline bool ProGXGDYGameTrust::istrust() const {
  return istrust_;
}
inline void ProGXGDYGameTrust::set_istrust(bool value) {
  set_has_istrust();
  istrust_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameOutMahRequest

// optional int32 seat = 2;
inline bool ProGXGDYGameOutMahRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameOutMahRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameOutMahRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameOutMahRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameOutMahRequest::seat() const {
  return seat_;
}
inline void ProGXGDYGameOutMahRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 outMahs = 3;
inline int ProGXGDYGameOutMahRequest::outmahs_size() const {
  return outmahs_.size();
}
inline void ProGXGDYGameOutMahRequest::clear_outmahs() {
  outmahs_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameOutMahRequest::outmahs(int index) const {
  return outmahs_.Get(index);
}
inline void ProGXGDYGameOutMahRequest::set_outmahs(int index, ::google::protobuf::int32 value) {
  outmahs_.Set(index, value);
}
inline void ProGXGDYGameOutMahRequest::add_outmahs(::google::protobuf::int32 value) {
  outmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameOutMahRequest::outmahs() const {
  return outmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameOutMahRequest::mutable_outmahs() {
  return &outmahs_;
}

// repeated int32 nochangemahs = 4;
inline int ProGXGDYGameOutMahRequest::nochangemahs_size() const {
  return nochangemahs_.size();
}
inline void ProGXGDYGameOutMahRequest::clear_nochangemahs() {
  nochangemahs_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameOutMahRequest::nochangemahs(int index) const {
  return nochangemahs_.Get(index);
}
inline void ProGXGDYGameOutMahRequest::set_nochangemahs(int index, ::google::protobuf::int32 value) {
  nochangemahs_.Set(index, value);
}
inline void ProGXGDYGameOutMahRequest::add_nochangemahs(::google::protobuf::int32 value) {
  nochangemahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameOutMahRequest::nochangemahs() const {
  return nochangemahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameOutMahRequest::mutable_nochangemahs() {
  return &nochangemahs_;
}

// optional bool bIsChanged = 5;
inline bool ProGXGDYGameOutMahRequest::has_bischanged() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProGXGDYGameOutMahRequest::set_has_bischanged() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProGXGDYGameOutMahRequest::clear_has_bischanged() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProGXGDYGameOutMahRequest::clear_bischanged() {
  bischanged_ = false;
  clear_has_bischanged();
}
inline bool ProGXGDYGameOutMahRequest::bischanged() const {
  return bischanged_;
}
inline void ProGXGDYGameOutMahRequest::set_bischanged(bool value) {
  set_has_bischanged();
  bischanged_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameCatchCard

// optional int32 seat = 2;
inline bool ProGXGDYGameCatchCard::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameCatchCard::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameCatchCard::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameCatchCard::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameCatchCard::seat() const {
  return seat_;
}
inline void ProGXGDYGameCatchCard::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 cbCardData = 3;
inline bool ProGXGDYGameCatchCard::has_cbcarddata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameCatchCard::set_has_cbcarddata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameCatchCard::clear_has_cbcarddata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameCatchCard::clear_cbcarddata() {
  cbcarddata_ = 0;
  clear_has_cbcarddata();
}
inline ::google::protobuf::int32 ProGXGDYGameCatchCard::cbcarddata() const {
  return cbcarddata_;
}
inline void ProGXGDYGameCatchCard::set_cbcarddata(::google::protobuf::int32 value) {
  set_has_cbcarddata();
  cbcarddata_ = value;
}

// optional int32 wActionMask = 4;
inline bool ProGXGDYGameCatchCard::has_wactionmask() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProGXGDYGameCatchCard::set_has_wactionmask() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProGXGDYGameCatchCard::clear_has_wactionmask() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProGXGDYGameCatchCard::clear_wactionmask() {
  wactionmask_ = 0;
  clear_has_wactionmask();
}
inline ::google::protobuf::int32 ProGXGDYGameCatchCard::wactionmask() const {
  return wactionmask_;
}
inline void ProGXGDYGameCatchCard::set_wactionmask(::google::protobuf::int32 value) {
  set_has_wactionmask();
  wactionmask_ = value;
}

// optional bool cbIsNotGang = 5;
inline bool ProGXGDYGameCatchCard::has_cbisnotgang() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProGXGDYGameCatchCard::set_has_cbisnotgang() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProGXGDYGameCatchCard::clear_has_cbisnotgang() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProGXGDYGameCatchCard::clear_cbisnotgang() {
  cbisnotgang_ = false;
  clear_has_cbisnotgang();
}
inline bool ProGXGDYGameCatchCard::cbisnotgang() const {
  return cbisnotgang_;
}
inline void ProGXGDYGameCatchCard::set_cbisnotgang(bool value) {
  set_has_cbisnotgang();
  cbisnotgang_ = value;
}

// optional int32 cbLeftCount = 6;
inline bool ProGXGDYGameCatchCard::has_cbleftcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProGXGDYGameCatchCard::set_has_cbleftcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProGXGDYGameCatchCard::clear_has_cbleftcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProGXGDYGameCatchCard::clear_cbleftcount() {
  cbleftcount_ = 0;
  clear_has_cbleftcount();
}
inline ::google::protobuf::int32 ProGXGDYGameCatchCard::cbleftcount() const {
  return cbleftcount_;
}
inline void ProGXGDYGameCatchCard::set_cbleftcount(::google::protobuf::int32 value) {
  set_has_cbleftcount();
  cbleftcount_ = value;
}

// -------------------------------------------------------------------

// GXGDYMahList

// repeated int32 Mahs = 1;
inline int GXGDYMahList::mahs_size() const {
  return mahs_.size();
}
inline void GXGDYMahList::clear_mahs() {
  mahs_.Clear();
}
inline ::google::protobuf::int32 GXGDYMahList::mahs(int index) const {
  return mahs_.Get(index);
}
inline void GXGDYMahList::set_mahs(int index, ::google::protobuf::int32 value) {
  mahs_.Set(index, value);
}
inline void GXGDYMahList::add_mahs(::google::protobuf::int32 value) {
  mahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GXGDYMahList::mahs() const {
  return mahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GXGDYMahList::mutable_mahs() {
  return &mahs_;
}

// -------------------------------------------------------------------

// GXGDYScoreList

// repeated int32 roundScore = 1;
inline int GXGDYScoreList::roundscore_size() const {
  return roundscore_.size();
}
inline void GXGDYScoreList::clear_roundscore() {
  roundscore_.Clear();
}
inline ::google::protobuf::int32 GXGDYScoreList::roundscore(int index) const {
  return roundscore_.Get(index);
}
inline void GXGDYScoreList::set_roundscore(int index, ::google::protobuf::int32 value) {
  roundscore_.Set(index, value);
}
inline void GXGDYScoreList::add_roundscore(::google::protobuf::int32 value) {
  roundscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GXGDYScoreList::roundscore() const {
  return roundscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GXGDYScoreList::mutable_roundscore() {
  return &roundscore_;
}

// -------------------------------------------------------------------

// GXGDYAwardList

// optional int32 seat = 1;
inline bool GXGDYAwardList::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GXGDYAwardList::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GXGDYAwardList::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GXGDYAwardList::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 GXGDYAwardList::seat() const {
  return seat_;
}
inline void GXGDYAwardList::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 CardsData = 2;
inline int GXGDYAwardList::cardsdata_size() const {
  return cardsdata_.size();
}
inline void GXGDYAwardList::clear_cardsdata() {
  cardsdata_.Clear();
}
inline ::google::protobuf::int32 GXGDYAwardList::cardsdata(int index) const {
  return cardsdata_.Get(index);
}
inline void GXGDYAwardList::set_cardsdata(int index, ::google::protobuf::int32 value) {
  cardsdata_.Set(index, value);
}
inline void GXGDYAwardList::add_cardsdata(::google::protobuf::int32 value) {
  cardsdata_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GXGDYAwardList::cardsdata() const {
  return cardsdata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GXGDYAwardList::mutable_cardsdata() {
  return &cardsdata_;
}

// optional int32 awardScore = 3;
inline bool GXGDYAwardList::has_awardscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GXGDYAwardList::set_has_awardscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GXGDYAwardList::clear_has_awardscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GXGDYAwardList::clear_awardscore() {
  awardscore_ = 0;
  clear_has_awardscore();
}
inline ::google::protobuf::int32 GXGDYAwardList::awardscore() const {
  return awardscore_;
}
inline void GXGDYAwardList::set_awardscore(::google::protobuf::int32 value) {
  set_has_awardscore();
  awardscore_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameEnd

// optional int32 lGameTax = 2;
inline bool ProGXGDYGameEnd::has_lgametax() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameEnd::set_has_lgametax() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameEnd::clear_has_lgametax() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameEnd::clear_lgametax() {
  lgametax_ = 0;
  clear_has_lgametax();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::lgametax() const {
  return lgametax_;
}
inline void ProGXGDYGameEnd::set_lgametax(::google::protobuf::int32 value) {
  set_has_lgametax();
  lgametax_ = value;
}

// repeated int32 cbChongGuang = 3;
inline int ProGXGDYGameEnd::cbchongguang_size() const {
  return cbchongguang_.size();
}
inline void ProGXGDYGameEnd::clear_cbchongguang() {
  cbchongguang_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::cbchongguang(int index) const {
  return cbchongguang_.Get(index);
}
inline void ProGXGDYGameEnd::set_cbchongguang(int index, ::google::protobuf::int32 value) {
  cbchongguang_.Set(index, value);
}
inline void ProGXGDYGameEnd::add_cbchongguang(::google::protobuf::int32 value) {
  cbchongguang_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameEnd::cbchongguang() const {
  return cbchongguang_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameEnd::mutable_cbchongguang() {
  return &cbchongguang_;
}

// repeated int32 cbBaWangKing = 4;
inline int ProGXGDYGameEnd::cbbawangking_size() const {
  return cbbawangking_.size();
}
inline void ProGXGDYGameEnd::clear_cbbawangking() {
  cbbawangking_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::cbbawangking(int index) const {
  return cbbawangking_.Get(index);
}
inline void ProGXGDYGameEnd::set_cbbawangking(int index, ::google::protobuf::int32 value) {
  cbbawangking_.Set(index, value);
}
inline void ProGXGDYGameEnd::add_cbbawangking(::google::protobuf::int32 value) {
  cbbawangking_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameEnd::cbbawangking() const {
  return cbbawangking_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameEnd::mutable_cbbawangking() {
  return &cbbawangking_;
}

// optional int32 wProvideUser = 5;
inline bool ProGXGDYGameEnd::has_wprovideuser() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProGXGDYGameEnd::set_has_wprovideuser() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProGXGDYGameEnd::clear_has_wprovideuser() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProGXGDYGameEnd::clear_wprovideuser() {
  wprovideuser_ = 0;
  clear_has_wprovideuser();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::wprovideuser() const {
  return wprovideuser_;
}
inline void ProGXGDYGameEnd::set_wprovideuser(::google::protobuf::int32 value) {
  set_has_wprovideuser();
  wprovideuser_ = value;
}

// optional int32 cbChiHuCard = 6;
inline bool ProGXGDYGameEnd::has_cbchihucard() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProGXGDYGameEnd::set_has_cbchihucard() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProGXGDYGameEnd::clear_has_cbchihucard() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProGXGDYGameEnd::clear_cbchihucard() {
  cbchihucard_ = 0;
  clear_has_cbchihucard();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::cbchihucard() const {
  return cbchihucard_;
}
inline void ProGXGDYGameEnd::set_cbchihucard(::google::protobuf::int32 value) {
  set_has_cbchihucard();
  cbchihucard_ = value;
}

// repeated int32 dwChiHuKind = 7;
inline int ProGXGDYGameEnd::dwchihukind_size() const {
  return dwchihukind_.size();
}
inline void ProGXGDYGameEnd::clear_dwchihukind() {
  dwchihukind_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::dwchihukind(int index) const {
  return dwchihukind_.Get(index);
}
inline void ProGXGDYGameEnd::set_dwchihukind(int index, ::google::protobuf::int32 value) {
  dwchihukind_.Set(index, value);
}
inline void ProGXGDYGameEnd::add_dwchihukind(::google::protobuf::int32 value) {
  dwchihukind_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameEnd::dwchihukind() const {
  return dwchihukind_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameEnd::mutable_dwchihukind() {
  return &dwchihukind_;
}

// repeated int32 dwChiHuRight = 8;
inline int ProGXGDYGameEnd::dwchihuright_size() const {
  return dwchihuright_.size();
}
inline void ProGXGDYGameEnd::clear_dwchihuright() {
  dwchihuright_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::dwchihuright(int index) const {
  return dwchihuright_.Get(index);
}
inline void ProGXGDYGameEnd::set_dwchihuright(int index, ::google::protobuf::int32 value) {
  dwchihuright_.Set(index, value);
}
inline void ProGXGDYGameEnd::add_dwchihuright(::google::protobuf::int32 value) {
  dwchihuright_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameEnd::dwchihuright() const {
  return dwchihuright_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameEnd::mutable_dwchihuright() {
  return &dwchihuright_;
}

// repeated int32 lTotaslGameScore = 9;
inline int ProGXGDYGameEnd::ltotaslgamescore_size() const {
  return ltotaslgamescore_.size();
}
inline void ProGXGDYGameEnd::clear_ltotaslgamescore() {
  ltotaslgamescore_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::ltotaslgamescore(int index) const {
  return ltotaslgamescore_.Get(index);
}
inline void ProGXGDYGameEnd::set_ltotaslgamescore(int index, ::google::protobuf::int32 value) {
  ltotaslgamescore_.Set(index, value);
}
inline void ProGXGDYGameEnd::add_ltotaslgamescore(::google::protobuf::int32 value) {
  ltotaslgamescore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameEnd::ltotaslgamescore() const {
  return ltotaslgamescore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameEnd::mutable_ltotaslgamescore() {
  return &ltotaslgamescore_;
}

// repeated int32 lCurrentGameScore = 10;
inline int ProGXGDYGameEnd::lcurrentgamescore_size() const {
  return lcurrentgamescore_.size();
}
inline void ProGXGDYGameEnd::clear_lcurrentgamescore() {
  lcurrentgamescore_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::lcurrentgamescore(int index) const {
  return lcurrentgamescore_.Get(index);
}
inline void ProGXGDYGameEnd::set_lcurrentgamescore(int index, ::google::protobuf::int32 value) {
  lcurrentgamescore_.Set(index, value);
}
inline void ProGXGDYGameEnd::add_lcurrentgamescore(::google::protobuf::int32 value) {
  lcurrentgamescore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameEnd::lcurrentgamescore() const {
  return lcurrentgamescore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameEnd::mutable_lcurrentgamescore() {
  return &lcurrentgamescore_;
}

// repeated int32 lCurrentPointScore = 11;
inline int ProGXGDYGameEnd::lcurrentpointscore_size() const {
  return lcurrentpointscore_.size();
}
inline void ProGXGDYGameEnd::clear_lcurrentpointscore() {
  lcurrentpointscore_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::lcurrentpointscore(int index) const {
  return lcurrentpointscore_.Get(index);
}
inline void ProGXGDYGameEnd::set_lcurrentpointscore(int index, ::google::protobuf::int32 value) {
  lcurrentpointscore_.Set(index, value);
}
inline void ProGXGDYGameEnd::add_lcurrentpointscore(::google::protobuf::int32 value) {
  lcurrentpointscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameEnd::lcurrentpointscore() const {
  return lcurrentpointscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameEnd::mutable_lcurrentpointscore() {
  return &lcurrentpointscore_;
}

// repeated int32 lAttachScore = 12;
inline int ProGXGDYGameEnd::lattachscore_size() const {
  return lattachscore_.size();
}
inline void ProGXGDYGameEnd::clear_lattachscore() {
  lattachscore_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::lattachscore(int index) const {
  return lattachscore_.Get(index);
}
inline void ProGXGDYGameEnd::set_lattachscore(int index, ::google::protobuf::int32 value) {
  lattachscore_.Set(index, value);
}
inline void ProGXGDYGameEnd::add_lattachscore(::google::protobuf::int32 value) {
  lattachscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameEnd::lattachscore() const {
  return lattachscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameEnd::mutable_lattachscore() {
  return &lattachscore_;
}

// repeated .GXGDYMahList cbHandCardData = 13;
inline int ProGXGDYGameEnd::cbhandcarddata_size() const {
  return cbhandcarddata_.size();
}
inline void ProGXGDYGameEnd::clear_cbhandcarddata() {
  cbhandcarddata_.Clear();
}
inline const ::GXGDYMahList& ProGXGDYGameEnd::cbhandcarddata(int index) const {
  return cbhandcarddata_.Get(index);
}
inline ::GXGDYMahList* ProGXGDYGameEnd::mutable_cbhandcarddata(int index) {
  return cbhandcarddata_.Mutable(index);
}
inline ::GXGDYMahList* ProGXGDYGameEnd::add_cbhandcarddata() {
  return cbhandcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GXGDYMahList >&
ProGXGDYGameEnd::cbhandcarddata() const {
  return cbhandcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GXGDYMahList >*
ProGXGDYGameEnd::mutable_cbhandcarddata() {
  return &cbhandcarddata_;
}

// repeated .GXGDYAwardList cbAwardCardData = 14;
inline int ProGXGDYGameEnd::cbawardcarddata_size() const {
  return cbawardcarddata_.size();
}
inline void ProGXGDYGameEnd::clear_cbawardcarddata() {
  cbawardcarddata_.Clear();
}
inline const ::GXGDYAwardList& ProGXGDYGameEnd::cbawardcarddata(int index) const {
  return cbawardcarddata_.Get(index);
}
inline ::GXGDYAwardList* ProGXGDYGameEnd::mutable_cbawardcarddata(int index) {
  return cbawardcarddata_.Mutable(index);
}
inline ::GXGDYAwardList* ProGXGDYGameEnd::add_cbawardcarddata() {
  return cbawardcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GXGDYAwardList >&
ProGXGDYGameEnd::cbawardcarddata() const {
  return cbawardcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GXGDYAwardList >*
ProGXGDYGameEnd::mutable_cbawardcarddata() {
  return &cbawardcarddata_;
}

// repeated int32 lOnlyWinScore = 15;
inline int ProGXGDYGameEnd::lonlywinscore_size() const {
  return lonlywinscore_.size();
}
inline void ProGXGDYGameEnd::clear_lonlywinscore() {
  lonlywinscore_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::lonlywinscore(int index) const {
  return lonlywinscore_.Get(index);
}
inline void ProGXGDYGameEnd::set_lonlywinscore(int index, ::google::protobuf::int32 value) {
  lonlywinscore_.Set(index, value);
}
inline void ProGXGDYGameEnd::add_lonlywinscore(::google::protobuf::int32 value) {
  lonlywinscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameEnd::lonlywinscore() const {
  return lonlywinscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameEnd::mutable_lonlywinscore() {
  return &lonlywinscore_;
}

// optional bool bRoundEnd = 16;
inline bool ProGXGDYGameEnd::has_broundend() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ProGXGDYGameEnd::set_has_broundend() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ProGXGDYGameEnd::clear_has_broundend() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ProGXGDYGameEnd::clear_broundend() {
  broundend_ = false;
  clear_has_broundend();
}
inline bool ProGXGDYGameEnd::broundend() const {
  return broundend_;
}
inline void ProGXGDYGameEnd::set_broundend(bool value) {
  set_has_broundend();
  broundend_ = value;
}

// repeated int32 lHuiTouScore = 17;
inline int ProGXGDYGameEnd::lhuitouscore_size() const {
  return lhuitouscore_.size();
}
inline void ProGXGDYGameEnd::clear_lhuitouscore() {
  lhuitouscore_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::lhuitouscore(int index) const {
  return lhuitouscore_.Get(index);
}
inline void ProGXGDYGameEnd::set_lhuitouscore(int index, ::google::protobuf::int32 value) {
  lhuitouscore_.Set(index, value);
}
inline void ProGXGDYGameEnd::add_lhuitouscore(::google::protobuf::int32 value) {
  lhuitouscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameEnd::lhuitouscore() const {
  return lhuitouscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameEnd::mutable_lhuitouscore() {
  return &lhuitouscore_;
}

// optional bool bZhuangWin = 18;
inline bool ProGXGDYGameEnd::has_bzhuangwin() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ProGXGDYGameEnd::set_has_bzhuangwin() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ProGXGDYGameEnd::clear_has_bzhuangwin() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ProGXGDYGameEnd::clear_bzhuangwin() {
  bzhuangwin_ = false;
  clear_has_bzhuangwin();
}
inline bool ProGXGDYGameEnd::bzhuangwin() const {
  return bzhuangwin_;
}
inline void ProGXGDYGameEnd::set_bzhuangwin(bool value) {
  set_has_bzhuangwin();
  bzhuangwin_ = value;
}

// repeated int32 cbJiangMaCardData = 19;
inline int ProGXGDYGameEnd::cbjiangmacarddata_size() const {
  return cbjiangmacarddata_.size();
}
inline void ProGXGDYGameEnd::clear_cbjiangmacarddata() {
  cbjiangmacarddata_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::cbjiangmacarddata(int index) const {
  return cbjiangmacarddata_.Get(index);
}
inline void ProGXGDYGameEnd::set_cbjiangmacarddata(int index, ::google::protobuf::int32 value) {
  cbjiangmacarddata_.Set(index, value);
}
inline void ProGXGDYGameEnd::add_cbjiangmacarddata(::google::protobuf::int32 value) {
  cbjiangmacarddata_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameEnd::cbjiangmacarddata() const {
  return cbjiangmacarddata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameEnd::mutable_cbjiangmacarddata() {
  return &cbjiangmacarddata_;
}

// repeated .GXGDYScoreList detailedScores = 20;
inline int ProGXGDYGameEnd::detailedscores_size() const {
  return detailedscores_.size();
}
inline void ProGXGDYGameEnd::clear_detailedscores() {
  detailedscores_.Clear();
}
inline const ::GXGDYScoreList& ProGXGDYGameEnd::detailedscores(int index) const {
  return detailedscores_.Get(index);
}
inline ::GXGDYScoreList* ProGXGDYGameEnd::mutable_detailedscores(int index) {
  return detailedscores_.Mutable(index);
}
inline ::GXGDYScoreList* ProGXGDYGameEnd::add_detailedscores() {
  return detailedscores_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GXGDYScoreList >&
ProGXGDYGameEnd::detailedscores() const {
  return detailedscores_;
}
inline ::google::protobuf::RepeatedPtrField< ::GXGDYScoreList >*
ProGXGDYGameEnd::mutable_detailedscores() {
  return &detailedscores_;
}

// optional bool bIsDaTu = 21;
inline bool ProGXGDYGameEnd::has_bisdatu() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ProGXGDYGameEnd::set_has_bisdatu() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ProGXGDYGameEnd::clear_has_bisdatu() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ProGXGDYGameEnd::clear_bisdatu() {
  bisdatu_ = false;
  clear_has_bisdatu();
}
inline bool ProGXGDYGameEnd::bisdatu() const {
  return bisdatu_;
}
inline void ProGXGDYGameEnd::set_bisdatu(bool value) {
  set_has_bisdatu();
  bisdatu_ = value;
}

// optional bool bIsKuTong = 22;
inline bool ProGXGDYGameEnd::has_biskutong() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ProGXGDYGameEnd::set_has_biskutong() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ProGXGDYGameEnd::clear_has_biskutong() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ProGXGDYGameEnd::clear_biskutong() {
  biskutong_ = false;
  clear_has_biskutong();
}
inline bool ProGXGDYGameEnd::biskutong() const {
  return biskutong_;
}
inline void ProGXGDYGameEnd::set_biskutong(bool value) {
  set_has_biskutong();
  biskutong_ = value;
}

// optional int32 nNo1Seat = 23;
inline bool ProGXGDYGameEnd::has_nno1seat() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ProGXGDYGameEnd::set_has_nno1seat() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ProGXGDYGameEnd::clear_has_nno1seat() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ProGXGDYGameEnd::clear_nno1seat() {
  nno1seat_ = 0;
  clear_has_nno1seat();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::nno1seat() const {
  return nno1seat_;
}
inline void ProGXGDYGameEnd::set_nno1seat(::google::protobuf::int32 value) {
  set_has_nno1seat();
  nno1seat_ = value;
}

// optional int32 nWinerSeat = 24;
inline bool ProGXGDYGameEnd::has_nwinerseat() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ProGXGDYGameEnd::set_has_nwinerseat() {
  _has_bits_[0] |= 0x00400000u;
}
inline void ProGXGDYGameEnd::clear_has_nwinerseat() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void ProGXGDYGameEnd::clear_nwinerseat() {
  nwinerseat_ = 0;
  clear_has_nwinerseat();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::nwinerseat() const {
  return nwinerseat_;
}
inline void ProGXGDYGameEnd::set_nwinerseat(::google::protobuf::int32 value) {
  set_has_nwinerseat();
  nwinerseat_ = value;
}

// optional int32 nWinersMate = 25;
inline bool ProGXGDYGameEnd::has_nwinersmate() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void ProGXGDYGameEnd::set_has_nwinersmate() {
  _has_bits_[0] |= 0x00800000u;
}
inline void ProGXGDYGameEnd::clear_has_nwinersmate() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void ProGXGDYGameEnd::clear_nwinersmate() {
  nwinersmate_ = 0;
  clear_has_nwinersmate();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::nwinersmate() const {
  return nwinersmate_;
}
inline void ProGXGDYGameEnd::set_nwinersmate(::google::protobuf::int32 value) {
  set_has_nwinersmate();
  nwinersmate_ = value;
}

// optional int32 nNo2Seat = 26;
inline bool ProGXGDYGameEnd::has_nno2seat() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void ProGXGDYGameEnd::set_has_nno2seat() {
  _has_bits_[0] |= 0x01000000u;
}
inline void ProGXGDYGameEnd::clear_has_nno2seat() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void ProGXGDYGameEnd::clear_nno2seat() {
  nno2seat_ = 0;
  clear_has_nno2seat();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::nno2seat() const {
  return nno2seat_;
}
inline void ProGXGDYGameEnd::set_nno2seat(::google::protobuf::int32 value) {
  set_has_nno2seat();
  nno2seat_ = value;
}

// optional int32 nNo3Seat = 27;
inline bool ProGXGDYGameEnd::has_nno3seat() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void ProGXGDYGameEnd::set_has_nno3seat() {
  _has_bits_[0] |= 0x02000000u;
}
inline void ProGXGDYGameEnd::clear_has_nno3seat() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void ProGXGDYGameEnd::clear_nno3seat() {
  nno3seat_ = 0;
  clear_has_nno3seat();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::nno3seat() const {
  return nno3seat_;
}
inline void ProGXGDYGameEnd::set_nno3seat(::google::protobuf::int32 value) {
  set_has_nno3seat();
  nno3seat_ = value;
}

// optional int32 nNo4Seat = 28;
inline bool ProGXGDYGameEnd::has_nno4seat() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void ProGXGDYGameEnd::set_has_nno4seat() {
  _has_bits_[0] |= 0x04000000u;
}
inline void ProGXGDYGameEnd::clear_has_nno4seat() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void ProGXGDYGameEnd::clear_nno4seat() {
  nno4seat_ = 0;
  clear_has_nno4seat();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::nno4seat() const {
  return nno4seat_;
}
inline void ProGXGDYGameEnd::set_nno4seat(::google::protobuf::int32 value) {
  set_has_nno4seat();
  nno4seat_ = value;
}

// optional bool bBroken = 29;
inline bool ProGXGDYGameEnd::has_bbroken() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void ProGXGDYGameEnd::set_has_bbroken() {
  _has_bits_[0] |= 0x08000000u;
}
inline void ProGXGDYGameEnd::clear_has_bbroken() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void ProGXGDYGameEnd::clear_bbroken() {
  bbroken_ = false;
  clear_has_bbroken();
}
inline bool ProGXGDYGameEnd::bbroken() const {
  return bbroken_;
}
inline void ProGXGDYGameEnd::set_bbroken(bool value) {
  set_has_bbroken();
  bbroken_ = value;
}

// optional int32 nBrokenPlayerSeat = 30;
inline bool ProGXGDYGameEnd::has_nbrokenplayerseat() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void ProGXGDYGameEnd::set_has_nbrokenplayerseat() {
  _has_bits_[0] |= 0x10000000u;
}
inline void ProGXGDYGameEnd::clear_has_nbrokenplayerseat() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void ProGXGDYGameEnd::clear_nbrokenplayerseat() {
  nbrokenplayerseat_ = 0;
  clear_has_nbrokenplayerseat();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::nbrokenplayerseat() const {
  return nbrokenplayerseat_;
}
inline void ProGXGDYGameEnd::set_nbrokenplayerseat(::google::protobuf::int32 value) {
  set_has_nbrokenplayerseat();
  nbrokenplayerseat_ = value;
}

// optional bool bSurrender = 31;
inline bool ProGXGDYGameEnd::has_bsurrender() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void ProGXGDYGameEnd::set_has_bsurrender() {
  _has_bits_[0] |= 0x20000000u;
}
inline void ProGXGDYGameEnd::clear_has_bsurrender() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void ProGXGDYGameEnd::clear_bsurrender() {
  bsurrender_ = false;
  clear_has_bsurrender();
}
inline bool ProGXGDYGameEnd::bsurrender() const {
  return bsurrender_;
}
inline void ProGXGDYGameEnd::set_bsurrender(bool value) {
  set_has_bsurrender();
  bsurrender_ = value;
}

// optional int32 nSurrenderPlayerSeat = 32;
inline bool ProGXGDYGameEnd::has_nsurrenderplayerseat() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void ProGXGDYGameEnd::set_has_nsurrenderplayerseat() {
  _has_bits_[0] |= 0x40000000u;
}
inline void ProGXGDYGameEnd::clear_has_nsurrenderplayerseat() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void ProGXGDYGameEnd::clear_nsurrenderplayerseat() {
  nsurrenderplayerseat_ = 0;
  clear_has_nsurrenderplayerseat();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::nsurrenderplayerseat() const {
  return nsurrenderplayerseat_;
}
inline void ProGXGDYGameEnd::set_nsurrenderplayerseat(::google::protobuf::int32 value) {
  set_has_nsurrenderplayerseat();
  nsurrenderplayerseat_ = value;
}

// repeated bool bIsSpring = 33;
inline int ProGXGDYGameEnd::bisspring_size() const {
  return bisspring_.size();
}
inline void ProGXGDYGameEnd::clear_bisspring() {
  bisspring_.Clear();
}
inline bool ProGXGDYGameEnd::bisspring(int index) const {
  return bisspring_.Get(index);
}
inline void ProGXGDYGameEnd::set_bisspring(int index, bool value) {
  bisspring_.Set(index, value);
}
inline void ProGXGDYGameEnd::add_bisspring(bool value) {
  bisspring_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
ProGXGDYGameEnd::bisspring() const {
  return bisspring_;
}
inline ::google::protobuf::RepeatedField< bool >*
ProGXGDYGameEnd::mutable_bisspring() {
  return &bisspring_;
}

// repeated int32 nSurplusCardCount = 34;
inline int ProGXGDYGameEnd::nsurpluscardcount_size() const {
  return nsurpluscardcount_.size();
}
inline void ProGXGDYGameEnd::clear_nsurpluscardcount() {
  nsurpluscardcount_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameEnd::nsurpluscardcount(int index) const {
  return nsurpluscardcount_.Get(index);
}
inline void ProGXGDYGameEnd::set_nsurpluscardcount(int index, ::google::protobuf::int32 value) {
  nsurpluscardcount_.Set(index, value);
}
inline void ProGXGDYGameEnd::add_nsurpluscardcount(::google::protobuf::int32 value) {
  nsurpluscardcount_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameEnd::nsurpluscardcount() const {
  return nsurpluscardcount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameEnd::mutable_nsurpluscardcount() {
  return &nsurpluscardcount_;
}

// -------------------------------------------------------------------

// ProGXGDYGameQuickSoundRequest

// optional int32 desk_id = 2;
inline bool ProGXGDYGameQuickSoundRequest::has_desk_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameQuickSoundRequest::set_has_desk_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameQuickSoundRequest::clear_has_desk_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameQuickSoundRequest::clear_desk_id() {
  desk_id_ = 0;
  clear_has_desk_id();
}
inline ::google::protobuf::int32 ProGXGDYGameQuickSoundRequest::desk_id() const {
  return desk_id_;
}
inline void ProGXGDYGameQuickSoundRequest::set_desk_id(::google::protobuf::int32 value) {
  set_has_desk_id();
  desk_id_ = value;
}

// optional int32 seat_id = 3;
inline bool ProGXGDYGameQuickSoundRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameQuickSoundRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameQuickSoundRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameQuickSoundRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProGXGDYGameQuickSoundRequest::seat_id() const {
  return seat_id_;
}
inline void ProGXGDYGameQuickSoundRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional int32 sound_id = 4;
inline bool ProGXGDYGameQuickSoundRequest::has_sound_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProGXGDYGameQuickSoundRequest::set_has_sound_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProGXGDYGameQuickSoundRequest::clear_has_sound_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProGXGDYGameQuickSoundRequest::clear_sound_id() {
  sound_id_ = 0;
  clear_has_sound_id();
}
inline ::google::protobuf::int32 ProGXGDYGameQuickSoundRequest::sound_id() const {
  return sound_id_;
}
inline void ProGXGDYGameQuickSoundRequest::set_sound_id(::google::protobuf::int32 value) {
  set_has_sound_id();
  sound_id_ = value;
}

// optional bytes text = 5;
inline bool ProGXGDYGameQuickSoundRequest::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProGXGDYGameQuickSoundRequest::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProGXGDYGameQuickSoundRequest::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProGXGDYGameQuickSoundRequest::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& ProGXGDYGameQuickSoundRequest::text() const {
  return *text_;
}
inline void ProGXGDYGameQuickSoundRequest::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProGXGDYGameQuickSoundRequest::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProGXGDYGameQuickSoundRequest::set_text(const void* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProGXGDYGameQuickSoundRequest::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* ProGXGDYGameQuickSoundRequest::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProGXGDYGameQuickSoundRequest::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProGXGDYGameQuickSoundResponse

// optional int32 desk_id = 2;
inline bool ProGXGDYGameQuickSoundResponse::has_desk_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameQuickSoundResponse::set_has_desk_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameQuickSoundResponse::clear_has_desk_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameQuickSoundResponse::clear_desk_id() {
  desk_id_ = 0;
  clear_has_desk_id();
}
inline ::google::protobuf::int32 ProGXGDYGameQuickSoundResponse::desk_id() const {
  return desk_id_;
}
inline void ProGXGDYGameQuickSoundResponse::set_desk_id(::google::protobuf::int32 value) {
  set_has_desk_id();
  desk_id_ = value;
}

// optional int32 seat_id = 3;
inline bool ProGXGDYGameQuickSoundResponse::has_seat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameQuickSoundResponse::set_has_seat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameQuickSoundResponse::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameQuickSoundResponse::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProGXGDYGameQuickSoundResponse::seat_id() const {
  return seat_id_;
}
inline void ProGXGDYGameQuickSoundResponse::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional int32 sound_id = 4;
inline bool ProGXGDYGameQuickSoundResponse::has_sound_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProGXGDYGameQuickSoundResponse::set_has_sound_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProGXGDYGameQuickSoundResponse::clear_has_sound_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProGXGDYGameQuickSoundResponse::clear_sound_id() {
  sound_id_ = 0;
  clear_has_sound_id();
}
inline ::google::protobuf::int32 ProGXGDYGameQuickSoundResponse::sound_id() const {
  return sound_id_;
}
inline void ProGXGDYGameQuickSoundResponse::set_sound_id(::google::protobuf::int32 value) {
  set_has_sound_id();
  sound_id_ = value;
}

// optional bytes text = 5;
inline bool ProGXGDYGameQuickSoundResponse::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProGXGDYGameQuickSoundResponse::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProGXGDYGameQuickSoundResponse::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProGXGDYGameQuickSoundResponse::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& ProGXGDYGameQuickSoundResponse::text() const {
  return *text_;
}
inline void ProGXGDYGameQuickSoundResponse::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProGXGDYGameQuickSoundResponse::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProGXGDYGameQuickSoundResponse::set_text(const void* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProGXGDYGameQuickSoundResponse::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* ProGXGDYGameQuickSoundResponse::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProGXGDYGameQuickSoundResponse::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProGXGDYGameSendDiscardMahs

// optional int32 seat_id = 2;
inline bool ProGXGDYGameSendDiscardMahs::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameSendDiscardMahs::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameSendDiscardMahs::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameSendDiscardMahs::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProGXGDYGameSendDiscardMahs::seat_id() const {
  return seat_id_;
}
inline void ProGXGDYGameSendDiscardMahs::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// repeated .GXGDYMahList cbCardData = 3;
inline int ProGXGDYGameSendDiscardMahs::cbcarddata_size() const {
  return cbcarddata_.size();
}
inline void ProGXGDYGameSendDiscardMahs::clear_cbcarddata() {
  cbcarddata_.Clear();
}
inline const ::GXGDYMahList& ProGXGDYGameSendDiscardMahs::cbcarddata(int index) const {
  return cbcarddata_.Get(index);
}
inline ::GXGDYMahList* ProGXGDYGameSendDiscardMahs::mutable_cbcarddata(int index) {
  return cbcarddata_.Mutable(index);
}
inline ::GXGDYMahList* ProGXGDYGameSendDiscardMahs::add_cbcarddata() {
  return cbcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GXGDYMahList >&
ProGXGDYGameSendDiscardMahs::cbcarddata() const {
  return cbcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GXGDYMahList >*
ProGXGDYGameSendDiscardMahs::mutable_cbcarddata() {
  return &cbcarddata_;
}

// repeated .GXGDYMahList cbNoChangeCardData = 4;
inline int ProGXGDYGameSendDiscardMahs::cbnochangecarddata_size() const {
  return cbnochangecarddata_.size();
}
inline void ProGXGDYGameSendDiscardMahs::clear_cbnochangecarddata() {
  cbnochangecarddata_.Clear();
}
inline const ::GXGDYMahList& ProGXGDYGameSendDiscardMahs::cbnochangecarddata(int index) const {
  return cbnochangecarddata_.Get(index);
}
inline ::GXGDYMahList* ProGXGDYGameSendDiscardMahs::mutable_cbnochangecarddata(int index) {
  return cbnochangecarddata_.Mutable(index);
}
inline ::GXGDYMahList* ProGXGDYGameSendDiscardMahs::add_cbnochangecarddata() {
  return cbnochangecarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GXGDYMahList >&
ProGXGDYGameSendDiscardMahs::cbnochangecarddata() const {
  return cbnochangecarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GXGDYMahList >*
ProGXGDYGameSendDiscardMahs::mutable_cbnochangecarddata() {
  return &cbnochangecarddata_;
}

// optional int32 deskCount = 5;
inline bool ProGXGDYGameSendDiscardMahs::has_deskcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProGXGDYGameSendDiscardMahs::set_has_deskcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProGXGDYGameSendDiscardMahs::clear_has_deskcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProGXGDYGameSendDiscardMahs::clear_deskcount() {
  deskcount_ = 0;
  clear_has_deskcount();
}
inline ::google::protobuf::int32 ProGXGDYGameSendDiscardMahs::deskcount() const {
  return deskcount_;
}
inline void ProGXGDYGameSendDiscardMahs::set_deskcount(::google::protobuf::int32 value) {
  set_has_deskcount();
  deskcount_ = value;
}

// repeated int32 outCardCount = 6;
inline int ProGXGDYGameSendDiscardMahs::outcardcount_size() const {
  return outcardcount_.size();
}
inline void ProGXGDYGameSendDiscardMahs::clear_outcardcount() {
  outcardcount_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameSendDiscardMahs::outcardcount(int index) const {
  return outcardcount_.Get(index);
}
inline void ProGXGDYGameSendDiscardMahs::set_outcardcount(int index, ::google::protobuf::int32 value) {
  outcardcount_.Set(index, value);
}
inline void ProGXGDYGameSendDiscardMahs::add_outcardcount(::google::protobuf::int32 value) {
  outcardcount_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameSendDiscardMahs::outcardcount() const {
  return outcardcount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameSendDiscardMahs::mutable_outcardcount() {
  return &outcardcount_;
}

// -------------------------------------------------------------------

// GXGDYWeaveItem

// optional int32 weaveKind = 1;
inline bool GXGDYWeaveItem::has_weavekind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GXGDYWeaveItem::set_has_weavekind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GXGDYWeaveItem::clear_has_weavekind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GXGDYWeaveItem::clear_weavekind() {
  weavekind_ = 0;
  clear_has_weavekind();
}
inline ::google::protobuf::int32 GXGDYWeaveItem::weavekind() const {
  return weavekind_;
}
inline void GXGDYWeaveItem::set_weavekind(::google::protobuf::int32 value) {
  set_has_weavekind();
  weavekind_ = value;
}

// optional int32 centercard = 2;
inline bool GXGDYWeaveItem::has_centercard() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GXGDYWeaveItem::set_has_centercard() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GXGDYWeaveItem::clear_has_centercard() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GXGDYWeaveItem::clear_centercard() {
  centercard_ = 0;
  clear_has_centercard();
}
inline ::google::protobuf::int32 GXGDYWeaveItem::centercard() const {
  return centercard_;
}
inline void GXGDYWeaveItem::set_centercard(::google::protobuf::int32 value) {
  set_has_centercard();
  centercard_ = value;
}

// optional int32 provideUser = 3;
inline bool GXGDYWeaveItem::has_provideuser() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GXGDYWeaveItem::set_has_provideuser() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GXGDYWeaveItem::clear_has_provideuser() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GXGDYWeaveItem::clear_provideuser() {
  provideuser_ = 0;
  clear_has_provideuser();
}
inline ::google::protobuf::int32 GXGDYWeaveItem::provideuser() const {
  return provideuser_;
}
inline void GXGDYWeaveItem::set_provideuser(::google::protobuf::int32 value) {
  set_has_provideuser();
  provideuser_ = value;
}

// optional int32 cardsize = 4;
inline bool GXGDYWeaveItem::has_cardsize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GXGDYWeaveItem::set_has_cardsize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GXGDYWeaveItem::clear_has_cardsize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GXGDYWeaveItem::clear_cardsize() {
  cardsize_ = 0;
  clear_has_cardsize();
}
inline ::google::protobuf::int32 GXGDYWeaveItem::cardsize() const {
  return cardsize_;
}
inline void GXGDYWeaveItem::set_cardsize(::google::protobuf::int32 value) {
  set_has_cardsize();
  cardsize_ = value;
}

// -------------------------------------------------------------------

// GXGDYWeaveItems

// repeated .GXGDYWeaveItem items = 1;
inline int GXGDYWeaveItems::items_size() const {
  return items_.size();
}
inline void GXGDYWeaveItems::clear_items() {
  items_.Clear();
}
inline const ::GXGDYWeaveItem& GXGDYWeaveItems::items(int index) const {
  return items_.Get(index);
}
inline ::GXGDYWeaveItem* GXGDYWeaveItems::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::GXGDYWeaveItem* GXGDYWeaveItems::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GXGDYWeaveItem >&
GXGDYWeaveItems::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::GXGDYWeaveItem >*
GXGDYWeaveItems::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// ProGXGDYGameSendActionMahs

// optional int32 seat_id = 2;
inline bool ProGXGDYGameSendActionMahs::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameSendActionMahs::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameSendActionMahs::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameSendActionMahs::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProGXGDYGameSendActionMahs::seat_id() const {
  return seat_id_;
}
inline void ProGXGDYGameSendActionMahs::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// repeated .GXGDYWeaveItems weaves = 3;
inline int ProGXGDYGameSendActionMahs::weaves_size() const {
  return weaves_.size();
}
inline void ProGXGDYGameSendActionMahs::clear_weaves() {
  weaves_.Clear();
}
inline const ::GXGDYWeaveItems& ProGXGDYGameSendActionMahs::weaves(int index) const {
  return weaves_.Get(index);
}
inline ::GXGDYWeaveItems* ProGXGDYGameSendActionMahs::mutable_weaves(int index) {
  return weaves_.Mutable(index);
}
inline ::GXGDYWeaveItems* ProGXGDYGameSendActionMahs::add_weaves() {
  return weaves_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GXGDYWeaveItems >&
ProGXGDYGameSendActionMahs::weaves() const {
  return weaves_;
}
inline ::google::protobuf::RepeatedPtrField< ::GXGDYWeaveItems >*
ProGXGDYGameSendActionMahs::mutable_weaves() {
  return &weaves_;
}

// -------------------------------------------------------------------

// ProGXGDYGameBrokenRequest

// optional int32 seat_id = 2;
inline bool ProGXGDYGameBrokenRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameBrokenRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameBrokenRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameBrokenRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProGXGDYGameBrokenRequest::seat_id() const {
  return seat_id_;
}
inline void ProGXGDYGameBrokenRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional .GXGDYBROKEN_TYPE type = 3;
inline bool ProGXGDYGameBrokenRequest::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameBrokenRequest::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameBrokenRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameBrokenRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::GXGDYBROKEN_TYPE ProGXGDYGameBrokenRequest::type() const {
  return static_cast< ::GXGDYBROKEN_TYPE >(type_);
}
inline void ProGXGDYGameBrokenRequest::set_type(::GXGDYBROKEN_TYPE value) {
  assert(::GXGDYBROKEN_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional int32 time = 4;
inline bool ProGXGDYGameBrokenRequest::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProGXGDYGameBrokenRequest::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProGXGDYGameBrokenRequest::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProGXGDYGameBrokenRequest::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProGXGDYGameBrokenRequest::time() const {
  return time_;
}
inline void ProGXGDYGameBrokenRequest::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameBrokenOperate

// optional int32 seat_id = 2;
inline bool ProGXGDYGameBrokenOperate::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameBrokenOperate::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameBrokenOperate::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameBrokenOperate::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProGXGDYGameBrokenOperate::seat_id() const {
  return seat_id_;
}
inline void ProGXGDYGameBrokenOperate::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional .GXGDYBROKEN_OPERATE result = 3 [default = GXGDY_BO_DISAGREE];
inline bool ProGXGDYGameBrokenOperate::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameBrokenOperate::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameBrokenOperate::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameBrokenOperate::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::GXGDYBROKEN_OPERATE ProGXGDYGameBrokenOperate::result() const {
  return static_cast< ::GXGDYBROKEN_OPERATE >(result_);
}
inline void ProGXGDYGameBrokenOperate::set_result(::GXGDYBROKEN_OPERATE value) {
  assert(::GXGDYBROKEN_OPERATE_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameBrokenNotify

// optional int32 seat_id = 2;
inline bool ProGXGDYGameBrokenNotify::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameBrokenNotify::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameBrokenNotify::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameBrokenNotify::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProGXGDYGameBrokenNotify::seat_id() const {
  return seat_id_;
}
inline void ProGXGDYGameBrokenNotify::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional .GXGDYBROKEN_CODE operate_code = 3 [default = GXGDY_BC_SUCCESS];
inline bool ProGXGDYGameBrokenNotify::has_operate_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameBrokenNotify::set_has_operate_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameBrokenNotify::clear_has_operate_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameBrokenNotify::clear_operate_code() {
  operate_code_ = 0;
  clear_has_operate_code();
}
inline ::GXGDYBROKEN_CODE ProGXGDYGameBrokenNotify::operate_code() const {
  return static_cast< ::GXGDYBROKEN_CODE >(operate_code_);
}
inline void ProGXGDYGameBrokenNotify::set_operate_code(::GXGDYBROKEN_CODE value) {
  assert(::GXGDYBROKEN_CODE_IsValid(value));
  set_has_operate_code();
  operate_code_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameRuleConfig

// optional int32 game_round = 1;
inline bool ProGXGDYGameRuleConfig::has_game_round() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_game_round() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameRuleConfig::clear_has_game_round() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameRuleConfig::clear_game_round() {
  game_round_ = 0;
  clear_has_game_round();
}
inline ::google::protobuf::int32 ProGXGDYGameRuleConfig::game_round() const {
  return game_round_;
}
inline void ProGXGDYGameRuleConfig::set_game_round(::google::protobuf::int32 value) {
  set_has_game_round();
  game_round_ = value;
}

// optional int32 need_card = 2;
inline bool ProGXGDYGameRuleConfig::has_need_card() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_need_card() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameRuleConfig::clear_has_need_card() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameRuleConfig::clear_need_card() {
  need_card_ = 0;
  clear_has_need_card();
}
inline ::google::protobuf::int32 ProGXGDYGameRuleConfig::need_card() const {
  return need_card_;
}
inline void ProGXGDYGameRuleConfig::set_need_card(::google::protobuf::int32 value) {
  set_has_need_card();
  need_card_ = value;
}

// optional bool have_bottom_king = 3;
inline bool ProGXGDYGameRuleConfig::has_have_bottom_king() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_have_bottom_king() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProGXGDYGameRuleConfig::clear_has_have_bottom_king() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProGXGDYGameRuleConfig::clear_have_bottom_king() {
  have_bottom_king_ = false;
  clear_has_have_bottom_king();
}
inline bool ProGXGDYGameRuleConfig::have_bottom_king() const {
  return have_bottom_king_;
}
inline void ProGXGDYGameRuleConfig::set_have_bottom_king(bool value) {
  set_has_have_bottom_king();
  have_bottom_king_ = value;
}

// optional bool have_mai_lei = 4;
inline bool ProGXGDYGameRuleConfig::has_have_mai_lei() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_have_mai_lei() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProGXGDYGameRuleConfig::clear_has_have_mai_lei() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProGXGDYGameRuleConfig::clear_have_mai_lei() {
  have_mai_lei_ = false;
  clear_has_have_mai_lei();
}
inline bool ProGXGDYGameRuleConfig::have_mai_lei() const {
  return have_mai_lei_;
}
inline void ProGXGDYGameRuleConfig::set_have_mai_lei(bool value) {
  set_has_have_mai_lei();
  have_mai_lei_ = value;
}

// optional bool hava_hui_tou = 5;
inline bool ProGXGDYGameRuleConfig::has_hava_hui_tou() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_hava_hui_tou() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProGXGDYGameRuleConfig::clear_has_hava_hui_tou() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProGXGDYGameRuleConfig::clear_hava_hui_tou() {
  hava_hui_tou_ = false;
  clear_has_hava_hui_tou();
}
inline bool ProGXGDYGameRuleConfig::hava_hui_tou() const {
  return hava_hui_tou_;
}
inline void ProGXGDYGameRuleConfig::set_hava_hui_tou(bool value) {
  set_has_hava_hui_tou();
  hava_hui_tou_ = value;
}

// optional int32 nMasterSeat = 6;
inline bool ProGXGDYGameRuleConfig::has_nmasterseat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_nmasterseat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProGXGDYGameRuleConfig::clear_has_nmasterseat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProGXGDYGameRuleConfig::clear_nmasterseat() {
  nmasterseat_ = 0;
  clear_has_nmasterseat();
}
inline ::google::protobuf::int32 ProGXGDYGameRuleConfig::nmasterseat() const {
  return nmasterseat_;
}
inline void ProGXGDYGameRuleConfig::set_nmasterseat(::google::protobuf::int32 value) {
  set_has_nmasterseat();
  nmasterseat_ = value;
}

// optional int32 current_game_count = 7;
inline bool ProGXGDYGameRuleConfig::has_current_game_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_current_game_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProGXGDYGameRuleConfig::clear_has_current_game_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProGXGDYGameRuleConfig::clear_current_game_count() {
  current_game_count_ = 0;
  clear_has_current_game_count();
}
inline ::google::protobuf::int32 ProGXGDYGameRuleConfig::current_game_count() const {
  return current_game_count_;
}
inline void ProGXGDYGameRuleConfig::set_current_game_count(::google::protobuf::int32 value) {
  set_has_current_game_count();
  current_game_count_ = value;
}

// optional bool have_jianma = 8;
inline bool ProGXGDYGameRuleConfig::has_have_jianma() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_have_jianma() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProGXGDYGameRuleConfig::clear_has_have_jianma() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProGXGDYGameRuleConfig::clear_have_jianma() {
  have_jianma_ = false;
  clear_has_have_jianma();
}
inline bool ProGXGDYGameRuleConfig::have_jianma() const {
  return have_jianma_;
}
inline void ProGXGDYGameRuleConfig::set_have_jianma(bool value) {
  set_has_have_jianma();
  have_jianma_ = value;
}

// optional int32 nChongguanNum = 9;
inline bool ProGXGDYGameRuleConfig::has_nchongguannum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_nchongguannum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProGXGDYGameRuleConfig::clear_has_nchongguannum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProGXGDYGameRuleConfig::clear_nchongguannum() {
  nchongguannum_ = 0;
  clear_has_nchongguannum();
}
inline ::google::protobuf::int32 ProGXGDYGameRuleConfig::nchongguannum() const {
  return nchongguannum_;
}
inline void ProGXGDYGameRuleConfig::set_nchongguannum(::google::protobuf::int32 value) {
  set_has_nchongguannum();
  nchongguannum_ = value;
}

// optional bool bbawangfanbei = 10;
inline bool ProGXGDYGameRuleConfig::has_bbawangfanbei() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_bbawangfanbei() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ProGXGDYGameRuleConfig::clear_has_bbawangfanbei() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ProGXGDYGameRuleConfig::clear_bbawangfanbei() {
  bbawangfanbei_ = false;
  clear_has_bbawangfanbei();
}
inline bool ProGXGDYGameRuleConfig::bbawangfanbei() const {
  return bbawangfanbei_;
}
inline void ProGXGDYGameRuleConfig::set_bbawangfanbei(bool value) {
  set_has_bbawangfanbei();
  bbawangfanbei_ = value;
}

// optional int32 nPlayerNum = 11;
inline bool ProGXGDYGameRuleConfig::has_nplayernum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_nplayernum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ProGXGDYGameRuleConfig::clear_has_nplayernum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ProGXGDYGameRuleConfig::clear_nplayernum() {
  nplayernum_ = 0;
  clear_has_nplayernum();
}
inline ::google::protobuf::int32 ProGXGDYGameRuleConfig::nplayernum() const {
  return nplayernum_;
}
inline void ProGXGDYGameRuleConfig::set_nplayernum(::google::protobuf::int32 value) {
  set_has_nplayernum();
  nplayernum_ = value;
}

// optional bytes sRoomNum = 12;
inline bool ProGXGDYGameRuleConfig::has_sroomnum() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_sroomnum() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ProGXGDYGameRuleConfig::clear_has_sroomnum() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ProGXGDYGameRuleConfig::clear_sroomnum() {
  if (sroomnum_ != &::google::protobuf::internal::kEmptyString) {
    sroomnum_->clear();
  }
  clear_has_sroomnum();
}
inline const ::std::string& ProGXGDYGameRuleConfig::sroomnum() const {
  return *sroomnum_;
}
inline void ProGXGDYGameRuleConfig::set_sroomnum(const ::std::string& value) {
  set_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    sroomnum_ = new ::std::string;
  }
  sroomnum_->assign(value);
}
inline void ProGXGDYGameRuleConfig::set_sroomnum(const char* value) {
  set_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    sroomnum_ = new ::std::string;
  }
  sroomnum_->assign(value);
}
inline void ProGXGDYGameRuleConfig::set_sroomnum(const void* value, size_t size) {
  set_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    sroomnum_ = new ::std::string;
  }
  sroomnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProGXGDYGameRuleConfig::mutable_sroomnum() {
  set_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    sroomnum_ = new ::std::string;
  }
  return sroomnum_;
}
inline ::std::string* ProGXGDYGameRuleConfig::release_sroomnum() {
  clear_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sroomnum_;
    sroomnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProGXGDYGameRuleConfig::set_allocated_sroomnum(::std::string* sroomnum) {
  if (sroomnum_ != &::google::protobuf::internal::kEmptyString) {
    delete sroomnum_;
  }
  if (sroomnum) {
    set_has_sroomnum();
    sroomnum_ = sroomnum;
  } else {
    clear_has_sroomnum();
    sroomnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes sPlayTime = 13;
inline bool ProGXGDYGameRuleConfig::has_splaytime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_splaytime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ProGXGDYGameRuleConfig::clear_has_splaytime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ProGXGDYGameRuleConfig::clear_splaytime() {
  if (splaytime_ != &::google::protobuf::internal::kEmptyString) {
    splaytime_->clear();
  }
  clear_has_splaytime();
}
inline const ::std::string& ProGXGDYGameRuleConfig::splaytime() const {
  return *splaytime_;
}
inline void ProGXGDYGameRuleConfig::set_splaytime(const ::std::string& value) {
  set_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    splaytime_ = new ::std::string;
  }
  splaytime_->assign(value);
}
inline void ProGXGDYGameRuleConfig::set_splaytime(const char* value) {
  set_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    splaytime_ = new ::std::string;
  }
  splaytime_->assign(value);
}
inline void ProGXGDYGameRuleConfig::set_splaytime(const void* value, size_t size) {
  set_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    splaytime_ = new ::std::string;
  }
  splaytime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProGXGDYGameRuleConfig::mutable_splaytime() {
  set_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    splaytime_ = new ::std::string;
  }
  return splaytime_;
}
inline ::std::string* ProGXGDYGameRuleConfig::release_splaytime() {
  clear_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = splaytime_;
    splaytime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProGXGDYGameRuleConfig::set_allocated_splaytime(::std::string* splaytime) {
  if (splaytime_ != &::google::protobuf::internal::kEmptyString) {
    delete splaytime_;
  }
  if (splaytime) {
    set_has_splaytime();
    splaytime_ = splaytime;
  } else {
    clear_has_splaytime();
    splaytime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 gametype = 14;
inline bool ProGXGDYGameRuleConfig::has_gametype() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_gametype() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ProGXGDYGameRuleConfig::clear_has_gametype() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ProGXGDYGameRuleConfig::clear_gametype() {
  gametype_ = 0;
  clear_has_gametype();
}
inline ::google::protobuf::int32 ProGXGDYGameRuleConfig::gametype() const {
  return gametype_;
}
inline void ProGXGDYGameRuleConfig::set_gametype(::google::protobuf::int32 value) {
  set_has_gametype();
  gametype_ = value;
}

// optional bool isJingDian = 15;
inline bool ProGXGDYGameRuleConfig::has_isjingdian() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_isjingdian() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ProGXGDYGameRuleConfig::clear_has_isjingdian() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ProGXGDYGameRuleConfig::clear_isjingdian() {
  isjingdian_ = false;
  clear_has_isjingdian();
}
inline bool ProGXGDYGameRuleConfig::isjingdian() const {
  return isjingdian_;
}
inline void ProGXGDYGameRuleConfig::set_isjingdian(bool value) {
  set_has_isjingdian();
  isjingdian_ = value;
}

// optional bool isOpenTeammate = 16;
inline bool ProGXGDYGameRuleConfig::has_isopenteammate() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_isopenteammate() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ProGXGDYGameRuleConfig::clear_has_isopenteammate() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ProGXGDYGameRuleConfig::clear_isopenteammate() {
  isopenteammate_ = false;
  clear_has_isopenteammate();
}
inline bool ProGXGDYGameRuleConfig::isopenteammate() const {
  return isopenteammate_;
}
inline void ProGXGDYGameRuleConfig::set_isopenteammate(bool value) {
  set_has_isopenteammate();
  isopenteammate_ = value;
}

// optional bool bIsSendSingleCard = 17;
inline bool ProGXGDYGameRuleConfig::has_bissendsinglecard() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_bissendsinglecard() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ProGXGDYGameRuleConfig::clear_has_bissendsinglecard() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ProGXGDYGameRuleConfig::clear_bissendsinglecard() {
  bissendsinglecard_ = false;
  clear_has_bissendsinglecard();
}
inline bool ProGXGDYGameRuleConfig::bissendsinglecard() const {
  return bissendsinglecard_;
}
inline void ProGXGDYGameRuleConfig::set_bissendsinglecard(bool value) {
  set_has_bissendsinglecard();
  bissendsinglecard_ = value;
}

// optional int32 nMultipleTop = 18;
inline bool ProGXGDYGameRuleConfig::has_nmultipletop() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ProGXGDYGameRuleConfig::set_has_nmultipletop() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ProGXGDYGameRuleConfig::clear_has_nmultipletop() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ProGXGDYGameRuleConfig::clear_nmultipletop() {
  nmultipletop_ = 0;
  clear_has_nmultipletop();
}
inline ::google::protobuf::int32 ProGXGDYGameRuleConfig::nmultipletop() const {
  return nmultipletop_;
}
inline void ProGXGDYGameRuleConfig::set_nmultipletop(::google::protobuf::int32 value) {
  set_has_nmultipletop();
  nmultipletop_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameBrokenStatus

// optional int32 broken_seat = 1;
inline bool ProGXGDYGameBrokenStatus::has_broken_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameBrokenStatus::set_has_broken_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameBrokenStatus::clear_has_broken_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameBrokenStatus::clear_broken_seat() {
  broken_seat_ = 0;
  clear_has_broken_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameBrokenStatus::broken_seat() const {
  return broken_seat_;
}
inline void ProGXGDYGameBrokenStatus::set_broken_seat(::google::protobuf::int32 value) {
  set_has_broken_seat();
  broken_seat_ = value;
}

// repeated bool broken_status = 2;
inline int ProGXGDYGameBrokenStatus::broken_status_size() const {
  return broken_status_.size();
}
inline void ProGXGDYGameBrokenStatus::clear_broken_status() {
  broken_status_.Clear();
}
inline bool ProGXGDYGameBrokenStatus::broken_status(int index) const {
  return broken_status_.Get(index);
}
inline void ProGXGDYGameBrokenStatus::set_broken_status(int index, bool value) {
  broken_status_.Set(index, value);
}
inline void ProGXGDYGameBrokenStatus::add_broken_status(bool value) {
  broken_status_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
ProGXGDYGameBrokenStatus::broken_status() const {
  return broken_status_;
}
inline ::google::protobuf::RepeatedField< bool >*
ProGXGDYGameBrokenStatus::mutable_broken_status() {
  return &broken_status_;
}

// optional int32 left_time = 3;
inline bool ProGXGDYGameBrokenStatus::has_left_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProGXGDYGameBrokenStatus::set_has_left_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProGXGDYGameBrokenStatus::clear_has_left_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProGXGDYGameBrokenStatus::clear_left_time() {
  left_time_ = 0;
  clear_has_left_time();
}
inline ::google::protobuf::int32 ProGXGDYGameBrokenStatus::left_time() const {
  return left_time_;
}
inline void ProGXGDYGameBrokenStatus::set_left_time(::google::protobuf::int32 value) {
  set_has_left_time();
  left_time_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameDataResp

// repeated int32 total_score = 1;
inline int ProGXGDYGameDataResp::total_score_size() const {
  return total_score_.size();
}
inline void ProGXGDYGameDataResp::clear_total_score() {
  total_score_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameDataResp::total_score(int index) const {
  return total_score_.Get(index);
}
inline void ProGXGDYGameDataResp::set_total_score(int index, ::google::protobuf::int32 value) {
  total_score_.Set(index, value);
}
inline void ProGXGDYGameDataResp::add_total_score(::google::protobuf::int32 value) {
  total_score_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameDataResp::total_score() const {
  return total_score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameDataResp::mutable_total_score() {
  return &total_score_;
}

// optional int32 type = 2;
inline bool ProGXGDYGameDataResp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameDataResp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameDataResp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameDataResp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ProGXGDYGameDataResp::type() const {
  return type_;
}
inline void ProGXGDYGameDataResp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameRecordRequest

// optional int32 seat_id = 1;
inline bool ProGXGDYGameRecordRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameRecordRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameRecordRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameRecordRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProGXGDYGameRecordRequest::seat_id() const {
  return seat_id_;
}
inline void ProGXGDYGameRecordRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional bytes url = 2;
inline bool ProGXGDYGameRecordRequest::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameRecordRequest::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameRecordRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameRecordRequest::clear_url() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& ProGXGDYGameRecordRequest::url() const {
  return *url_;
}
inline void ProGXGDYGameRecordRequest::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ProGXGDYGameRecordRequest::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ProGXGDYGameRecordRequest::set_url(const void* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProGXGDYGameRecordRequest::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  return url_;
}
inline ::std::string* ProGXGDYGameRecordRequest::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProGXGDYGameRecordRequest::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProGXGDYGameRecordResponse

// optional int32 seat_id = 1;
inline bool ProGXGDYGameRecordResponse::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameRecordResponse::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameRecordResponse::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameRecordResponse::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProGXGDYGameRecordResponse::seat_id() const {
  return seat_id_;
}
inline void ProGXGDYGameRecordResponse::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional bytes url = 2;
inline bool ProGXGDYGameRecordResponse::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameRecordResponse::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameRecordResponse::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameRecordResponse::clear_url() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& ProGXGDYGameRecordResponse::url() const {
  return *url_;
}
inline void ProGXGDYGameRecordResponse::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ProGXGDYGameRecordResponse::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ProGXGDYGameRecordResponse::set_url(const void* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProGXGDYGameRecordResponse::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  return url_;
}
inline ::std::string* ProGXGDYGameRecordResponse::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProGXGDYGameRecordResponse::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProGXGDYGameUserLocationRequest

// optional int32 seat_id = 1;
inline bool ProGXGDYGameUserLocationRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameUserLocationRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameUserLocationRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameUserLocationRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProGXGDYGameUserLocationRequest::seat_id() const {
  return seat_id_;
}
inline void ProGXGDYGameUserLocationRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional double dwlongitude = 2;
inline bool ProGXGDYGameUserLocationRequest::has_dwlongitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameUserLocationRequest::set_has_dwlongitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameUserLocationRequest::clear_has_dwlongitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameUserLocationRequest::clear_dwlongitude() {
  dwlongitude_ = 0;
  clear_has_dwlongitude();
}
inline double ProGXGDYGameUserLocationRequest::dwlongitude() const {
  return dwlongitude_;
}
inline void ProGXGDYGameUserLocationRequest::set_dwlongitude(double value) {
  set_has_dwlongitude();
  dwlongitude_ = value;
}

// optional double dwlatitude = 3;
inline bool ProGXGDYGameUserLocationRequest::has_dwlatitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProGXGDYGameUserLocationRequest::set_has_dwlatitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProGXGDYGameUserLocationRequest::clear_has_dwlatitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProGXGDYGameUserLocationRequest::clear_dwlatitude() {
  dwlatitude_ = 0;
  clear_has_dwlatitude();
}
inline double ProGXGDYGameUserLocationRequest::dwlatitude() const {
  return dwlatitude_;
}
inline void ProGXGDYGameUserLocationRequest::set_dwlatitude(double value) {
  set_has_dwlatitude();
  dwlatitude_ = value;
}

// optional bytes strDistrict = 4;
inline bool ProGXGDYGameUserLocationRequest::has_strdistrict() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProGXGDYGameUserLocationRequest::set_has_strdistrict() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProGXGDYGameUserLocationRequest::clear_has_strdistrict() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProGXGDYGameUserLocationRequest::clear_strdistrict() {
  if (strdistrict_ != &::google::protobuf::internal::kEmptyString) {
    strdistrict_->clear();
  }
  clear_has_strdistrict();
}
inline const ::std::string& ProGXGDYGameUserLocationRequest::strdistrict() const {
  return *strdistrict_;
}
inline void ProGXGDYGameUserLocationRequest::set_strdistrict(const ::std::string& value) {
  set_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    strdistrict_ = new ::std::string;
  }
  strdistrict_->assign(value);
}
inline void ProGXGDYGameUserLocationRequest::set_strdistrict(const char* value) {
  set_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    strdistrict_ = new ::std::string;
  }
  strdistrict_->assign(value);
}
inline void ProGXGDYGameUserLocationRequest::set_strdistrict(const void* value, size_t size) {
  set_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    strdistrict_ = new ::std::string;
  }
  strdistrict_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProGXGDYGameUserLocationRequest::mutable_strdistrict() {
  set_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    strdistrict_ = new ::std::string;
  }
  return strdistrict_;
}
inline ::std::string* ProGXGDYGameUserLocationRequest::release_strdistrict() {
  clear_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strdistrict_;
    strdistrict_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProGXGDYGameUserLocationRequest::set_allocated_strdistrict(::std::string* strdistrict) {
  if (strdistrict_ != &::google::protobuf::internal::kEmptyString) {
    delete strdistrict_;
  }
  if (strdistrict) {
    set_has_strdistrict();
    strdistrict_ = strdistrict;
  } else {
    clear_has_strdistrict();
    strdistrict_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes strStreetName = 5;
inline bool ProGXGDYGameUserLocationRequest::has_strstreetname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProGXGDYGameUserLocationRequest::set_has_strstreetname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProGXGDYGameUserLocationRequest::clear_has_strstreetname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProGXGDYGameUserLocationRequest::clear_strstreetname() {
  if (strstreetname_ != &::google::protobuf::internal::kEmptyString) {
    strstreetname_->clear();
  }
  clear_has_strstreetname();
}
inline const ::std::string& ProGXGDYGameUserLocationRequest::strstreetname() const {
  return *strstreetname_;
}
inline void ProGXGDYGameUserLocationRequest::set_strstreetname(const ::std::string& value) {
  set_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    strstreetname_ = new ::std::string;
  }
  strstreetname_->assign(value);
}
inline void ProGXGDYGameUserLocationRequest::set_strstreetname(const char* value) {
  set_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    strstreetname_ = new ::std::string;
  }
  strstreetname_->assign(value);
}
inline void ProGXGDYGameUserLocationRequest::set_strstreetname(const void* value, size_t size) {
  set_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    strstreetname_ = new ::std::string;
  }
  strstreetname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProGXGDYGameUserLocationRequest::mutable_strstreetname() {
  set_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    strstreetname_ = new ::std::string;
  }
  return strstreetname_;
}
inline ::std::string* ProGXGDYGameUserLocationRequest::release_strstreetname() {
  clear_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strstreetname_;
    strstreetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProGXGDYGameUserLocationRequest::set_allocated_strstreetname(::std::string* strstreetname) {
  if (strstreetname_ != &::google::protobuf::internal::kEmptyString) {
    delete strstreetname_;
  }
  if (strstreetname) {
    set_has_strstreetname();
    strstreetname_ = strstreetname;
  } else {
    clear_has_strstreetname();
    strstreetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProGXGDYGameSyncCardResponse

// optional int32 seat = 2;
inline bool ProGXGDYGameSyncCardResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameSyncCardResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameSyncCardResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameSyncCardResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameSyncCardResponse::seat() const {
  return seat_;
}
inline void ProGXGDYGameSyncCardResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 handmahs = 3;
inline int ProGXGDYGameSyncCardResponse::handmahs_size() const {
  return handmahs_.size();
}
inline void ProGXGDYGameSyncCardResponse::clear_handmahs() {
  handmahs_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameSyncCardResponse::handmahs(int index) const {
  return handmahs_.Get(index);
}
inline void ProGXGDYGameSyncCardResponse::set_handmahs(int index, ::google::protobuf::int32 value) {
  handmahs_.Set(index, value);
}
inline void ProGXGDYGameSyncCardResponse::add_handmahs(::google::protobuf::int32 value) {
  handmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameSyncCardResponse::handmahs() const {
  return handmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameSyncCardResponse::mutable_handmahs() {
  return &handmahs_;
}

// -------------------------------------------------------------------

// ProGXGDYGameUserPhoneStatusRequest

// optional int32 seat_id = 1;
inline bool ProGXGDYGameUserPhoneStatusRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameUserPhoneStatusRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameUserPhoneStatusRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameUserPhoneStatusRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProGXGDYGameUserPhoneStatusRequest::seat_id() const {
  return seat_id_;
}
inline void ProGXGDYGameUserPhoneStatusRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional int32 userstatus = 2;
inline bool ProGXGDYGameUserPhoneStatusRequest::has_userstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameUserPhoneStatusRequest::set_has_userstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameUserPhoneStatusRequest::clear_has_userstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameUserPhoneStatusRequest::clear_userstatus() {
  userstatus_ = 0;
  clear_has_userstatus();
}
inline ::google::protobuf::int32 ProGXGDYGameUserPhoneStatusRequest::userstatus() const {
  return userstatus_;
}
inline void ProGXGDYGameUserPhoneStatusRequest::set_userstatus(::google::protobuf::int32 value) {
  set_has_userstatus();
  userstatus_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameUserGiveUpRequest

// optional int32 seat_id = 1;
inline bool ProGXGDYGameUserGiveUpRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameUserGiveUpRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameUserGiveUpRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameUserGiveUpRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProGXGDYGameUserGiveUpRequest::seat_id() const {
  return seat_id_;
}
inline void ProGXGDYGameUserGiveUpRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameUserHintRequest

// optional bool bIsUserRequest = 1;
inline bool ProGXGDYGameUserHintRequest::has_bisuserrequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameUserHintRequest::set_has_bisuserrequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameUserHintRequest::clear_has_bisuserrequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameUserHintRequest::clear_bisuserrequest() {
  bisuserrequest_ = false;
  clear_has_bisuserrequest();
}
inline bool ProGXGDYGameUserHintRequest::bisuserrequest() const {
  return bisuserrequest_;
}
inline void ProGXGDYGameUserHintRequest::set_bisuserrequest(bool value) {
  set_has_bisuserrequest();
  bisuserrequest_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameUserHintResponse

// optional int32 lenth = 1;
inline bool ProGXGDYGameUserHintResponse::has_lenth() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameUserHintResponse::set_has_lenth() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameUserHintResponse::clear_has_lenth() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameUserHintResponse::clear_lenth() {
  lenth_ = 0;
  clear_has_lenth();
}
inline ::google::protobuf::int32 ProGXGDYGameUserHintResponse::lenth() const {
  return lenth_;
}
inline void ProGXGDYGameUserHintResponse::set_lenth(::google::protobuf::int32 value) {
  set_has_lenth();
  lenth_ = value;
}

// repeated int32 outMahs = 2;
inline int ProGXGDYGameUserHintResponse::outmahs_size() const {
  return outmahs_.size();
}
inline void ProGXGDYGameUserHintResponse::clear_outmahs() {
  outmahs_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameUserHintResponse::outmahs(int index) const {
  return outmahs_.Get(index);
}
inline void ProGXGDYGameUserHintResponse::set_outmahs(int index, ::google::protobuf::int32 value) {
  outmahs_.Set(index, value);
}
inline void ProGXGDYGameUserHintResponse::add_outmahs(::google::protobuf::int32 value) {
  outmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameUserHintResponse::outmahs() const {
  return outmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameUserHintResponse::mutable_outmahs() {
  return &outmahs_;
}

// -------------------------------------------------------------------

// ProGXGDYGameUserDaTuNotify

// optional int32 seat = 1;
inline bool ProGXGDYGameUserDaTuNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameUserDaTuNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameUserDaTuNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameUserDaTuNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameUserDaTuNotify::seat() const {
  return seat_;
}
inline void ProGXGDYGameUserDaTuNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameUserTeammateRequest

// optional int32 bankerMateSeat = 1;
inline bool ProGXGDYGameUserTeammateRequest::has_bankermateseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameUserTeammateRequest::set_has_bankermateseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameUserTeammateRequest::clear_has_bankermateseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameUserTeammateRequest::clear_bankermateseat() {
  bankermateseat_ = 0;
  clear_has_bankermateseat();
}
inline ::google::protobuf::int32 ProGXGDYGameUserTeammateRequest::bankermateseat() const {
  return bankermateseat_;
}
inline void ProGXGDYGameUserTeammateRequest::set_bankermateseat(::google::protobuf::int32 value) {
  set_has_bankermateseat();
  bankermateseat_ = value;
}

// optional int32 mateCard = 2;
inline bool ProGXGDYGameUserTeammateRequest::has_matecard() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameUserTeammateRequest::set_has_matecard() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameUserTeammateRequest::clear_has_matecard() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameUserTeammateRequest::clear_matecard() {
  matecard_ = 0;
  clear_has_matecard();
}
inline ::google::protobuf::int32 ProGXGDYGameUserTeammateRequest::matecard() const {
  return matecard_;
}
inline void ProGXGDYGameUserTeammateRequest::set_matecard(::google::protobuf::int32 value) {
  set_has_matecard();
  matecard_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameUserDaTuRequest

// optional int32 seat = 1;
inline bool ProGXGDYGameUserDaTuRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameUserDaTuRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameUserDaTuRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameUserDaTuRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameUserDaTuRequest::seat() const {
  return seat_;
}
inline void ProGXGDYGameUserDaTuRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool bIsDaTu = 2;
inline bool ProGXGDYGameUserDaTuRequest::has_bisdatu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameUserDaTuRequest::set_has_bisdatu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameUserDaTuRequest::clear_has_bisdatu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameUserDaTuRequest::clear_bisdatu() {
  bisdatu_ = false;
  clear_has_bisdatu();
}
inline bool ProGXGDYGameUserDaTuRequest::bisdatu() const {
  return bisdatu_;
}
inline void ProGXGDYGameUserDaTuRequest::set_bisdatu(bool value) {
  set_has_bisdatu();
  bisdatu_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameUserDaTuResponse

// optional int32 seat = 1;
inline bool ProGXGDYGameUserDaTuResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameUserDaTuResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameUserDaTuResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameUserDaTuResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameUserDaTuResponse::seat() const {
  return seat_;
}
inline void ProGXGDYGameUserDaTuResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool bIsDaTu = 2;
inline bool ProGXGDYGameUserDaTuResponse::has_bisdatu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameUserDaTuResponse::set_has_bisdatu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameUserDaTuResponse::clear_has_bisdatu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameUserDaTuResponse::clear_bisdatu() {
  bisdatu_ = false;
  clear_has_bisdatu();
}
inline bool ProGXGDYGameUserDaTuResponse::bisdatu() const {
  return bisdatu_;
}
inline void ProGXGDYGameUserDaTuResponse::set_bisdatu(bool value) {
  set_has_bisdatu();
  bisdatu_ = value;
}

// optional int32 nextSeat = 3;
inline bool ProGXGDYGameUserDaTuResponse::has_nextseat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProGXGDYGameUserDaTuResponse::set_has_nextseat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProGXGDYGameUserDaTuResponse::clear_has_nextseat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProGXGDYGameUserDaTuResponse::clear_nextseat() {
  nextseat_ = 0;
  clear_has_nextseat();
}
inline ::google::protobuf::int32 ProGXGDYGameUserDaTuResponse::nextseat() const {
  return nextseat_;
}
inline void ProGXGDYGameUserDaTuResponse::set_nextseat(::google::protobuf::int32 value) {
  set_has_nextseat();
  nextseat_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameUserDaTuResult

// optional int32 seat = 1;
inline bool ProGXGDYGameUserDaTuResult::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameUserDaTuResult::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameUserDaTuResult::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameUserDaTuResult::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProGXGDYGameUserDaTuResult::seat() const {
  return seat_;
}
inline void ProGXGDYGameUserDaTuResult::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool bIsDaTu = 2;
inline bool ProGXGDYGameUserDaTuResult::has_bisdatu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameUserDaTuResult::set_has_bisdatu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameUserDaTuResult::clear_has_bisdatu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameUserDaTuResult::clear_bisdatu() {
  bisdatu_ = false;
  clear_has_bisdatu();
}
inline bool ProGXGDYGameUserDaTuResult::bisdatu() const {
  return bisdatu_;
}
inline void ProGXGDYGameUserDaTuResult::set_bisdatu(bool value) {
  set_has_bisdatu();
  bisdatu_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameShangYouResult

// repeated int32 shangyouSeat = 1;
inline int ProGXGDYGameShangYouResult::shangyouseat_size() const {
  return shangyouseat_.size();
}
inline void ProGXGDYGameShangYouResult::clear_shangyouseat() {
  shangyouseat_.Clear();
}
inline ::google::protobuf::int32 ProGXGDYGameShangYouResult::shangyouseat(int index) const {
  return shangyouseat_.Get(index);
}
inline void ProGXGDYGameShangYouResult::set_shangyouseat(int index, ::google::protobuf::int32 value) {
  shangyouseat_.Set(index, value);
}
inline void ProGXGDYGameShangYouResult::add_shangyouseat(::google::protobuf::int32 value) {
  shangyouseat_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProGXGDYGameShangYouResult::shangyouseat() const {
  return shangyouseat_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProGXGDYGameShangYouResult::mutable_shangyouseat() {
  return &shangyouseat_;
}

// -------------------------------------------------------------------

// ProGXGDYGameShowFriendNotify

// optional bool bShow = 1;
inline bool ProGXGDYGameShowFriendNotify::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameShowFriendNotify::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameShowFriendNotify::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameShowFriendNotify::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
inline bool ProGXGDYGameShowFriendNotify::bshow() const {
  return bshow_;
}
inline void ProGXGDYGameShowFriendNotify::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameBoomNumNotify

// optional int32 nSeat = 1;
inline bool ProGXGDYGameBoomNumNotify::has_nseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameBoomNumNotify::set_has_nseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameBoomNumNotify::clear_has_nseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameBoomNumNotify::clear_nseat() {
  nseat_ = 0;
  clear_has_nseat();
}
inline ::google::protobuf::int32 ProGXGDYGameBoomNumNotify::nseat() const {
  return nseat_;
}
inline void ProGXGDYGameBoomNumNotify::set_nseat(::google::protobuf::int32 value) {
  set_has_nseat();
  nseat_ = value;
}

// optional int32 nBoomNum = 2;
inline bool ProGXGDYGameBoomNumNotify::has_nboomnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameBoomNumNotify::set_has_nboomnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameBoomNumNotify::clear_has_nboomnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameBoomNumNotify::clear_nboomnum() {
  nboomnum_ = 0;
  clear_has_nboomnum();
}
inline ::google::protobuf::int32 ProGXGDYGameBoomNumNotify::nboomnum() const {
  return nboomnum_;
}
inline void ProGXGDYGameBoomNumNotify::set_nboomnum(::google::protobuf::int32 value) {
  set_has_nboomnum();
  nboomnum_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameShowBoomDataRequest

// optional int32 nSeat = 1;
inline bool ProGXGDYGameShowBoomDataRequest::has_nseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameShowBoomDataRequest::set_has_nseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameShowBoomDataRequest::clear_has_nseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameShowBoomDataRequest::clear_nseat() {
  nseat_ = 0;
  clear_has_nseat();
}
inline ::google::protobuf::int32 ProGXGDYGameShowBoomDataRequest::nseat() const {
  return nseat_;
}
inline void ProGXGDYGameShowBoomDataRequest::set_nseat(::google::protobuf::int32 value) {
  set_has_nseat();
  nseat_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameShowBoomDataResponse

// optional int32 nSeat = 1;
inline bool ProGXGDYGameShowBoomDataResponse::has_nseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameShowBoomDataResponse::set_has_nseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameShowBoomDataResponse::clear_has_nseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameShowBoomDataResponse::clear_nseat() {
  nseat_ = 0;
  clear_has_nseat();
}
inline ::google::protobuf::int32 ProGXGDYGameShowBoomDataResponse::nseat() const {
  return nseat_;
}
inline void ProGXGDYGameShowBoomDataResponse::set_nseat(::google::protobuf::int32 value) {
  set_has_nseat();
  nseat_ = value;
}

// optional bool bIsSendToAll = 2;
inline bool ProGXGDYGameShowBoomDataResponse::has_bissendtoall() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameShowBoomDataResponse::set_has_bissendtoall() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameShowBoomDataResponse::clear_has_bissendtoall() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameShowBoomDataResponse::clear_bissendtoall() {
  bissendtoall_ = false;
  clear_has_bissendtoall();
}
inline bool ProGXGDYGameShowBoomDataResponse::bissendtoall() const {
  return bissendtoall_;
}
inline void ProGXGDYGameShowBoomDataResponse::set_bissendtoall(bool value) {
  set_has_bissendtoall();
  bissendtoall_ = value;
}

// repeated .GXGDYAwardList cbAwardCardData = 3;
inline int ProGXGDYGameShowBoomDataResponse::cbawardcarddata_size() const {
  return cbawardcarddata_.size();
}
inline void ProGXGDYGameShowBoomDataResponse::clear_cbawardcarddata() {
  cbawardcarddata_.Clear();
}
inline const ::GXGDYAwardList& ProGXGDYGameShowBoomDataResponse::cbawardcarddata(int index) const {
  return cbawardcarddata_.Get(index);
}
inline ::GXGDYAwardList* ProGXGDYGameShowBoomDataResponse::mutable_cbawardcarddata(int index) {
  return cbawardcarddata_.Mutable(index);
}
inline ::GXGDYAwardList* ProGXGDYGameShowBoomDataResponse::add_cbawardcarddata() {
  return cbawardcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GXGDYAwardList >&
ProGXGDYGameShowBoomDataResponse::cbawardcarddata() const {
  return cbawardcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GXGDYAwardList >*
ProGXGDYGameShowBoomDataResponse::mutable_cbawardcarddata() {
  return &cbawardcarddata_;
}

// -------------------------------------------------------------------

// ProGXGDYGameCardTypeSelect

// optional int32 nSeat = 1;
inline bool ProGXGDYGameCardTypeSelect::has_nseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameCardTypeSelect::set_has_nseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameCardTypeSelect::clear_has_nseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameCardTypeSelect::clear_nseat() {
  nseat_ = 0;
  clear_has_nseat();
}
inline ::google::protobuf::int32 ProGXGDYGameCardTypeSelect::nseat() const {
  return nseat_;
}
inline void ProGXGDYGameCardTypeSelect::set_nseat(::google::protobuf::int32 value) {
  set_has_nseat();
  nseat_ = value;
}

// repeated .GXGDYMahList CardTypeSelectData = 2;
inline int ProGXGDYGameCardTypeSelect::cardtypeselectdata_size() const {
  return cardtypeselectdata_.size();
}
inline void ProGXGDYGameCardTypeSelect::clear_cardtypeselectdata() {
  cardtypeselectdata_.Clear();
}
inline const ::GXGDYMahList& ProGXGDYGameCardTypeSelect::cardtypeselectdata(int index) const {
  return cardtypeselectdata_.Get(index);
}
inline ::GXGDYMahList* ProGXGDYGameCardTypeSelect::mutable_cardtypeselectdata(int index) {
  return cardtypeselectdata_.Mutable(index);
}
inline ::GXGDYMahList* ProGXGDYGameCardTypeSelect::add_cardtypeselectdata() {
  return cardtypeselectdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GXGDYMahList >&
ProGXGDYGameCardTypeSelect::cardtypeselectdata() const {
  return cardtypeselectdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GXGDYMahList >*
ProGXGDYGameCardTypeSelect::mutable_cardtypeselectdata() {
  return &cardtypeselectdata_;
}

// -------------------------------------------------------------------

// ProGXGDYGameIsSurrenderSelect

// optional int32 nSeat = 1;
inline bool ProGXGDYGameIsSurrenderSelect::has_nseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameIsSurrenderSelect::set_has_nseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameIsSurrenderSelect::clear_has_nseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameIsSurrenderSelect::clear_nseat() {
  nseat_ = 0;
  clear_has_nseat();
}
inline ::google::protobuf::int32 ProGXGDYGameIsSurrenderSelect::nseat() const {
  return nseat_;
}
inline void ProGXGDYGameIsSurrenderSelect::set_nseat(::google::protobuf::int32 value) {
  set_has_nseat();
  nseat_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameIsSurrenderOperate

// optional int32 nSeat = 1;
inline bool ProGXGDYGameIsSurrenderOperate::has_nseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameIsSurrenderOperate::set_has_nseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameIsSurrenderOperate::clear_has_nseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameIsSurrenderOperate::clear_nseat() {
  nseat_ = 0;
  clear_has_nseat();
}
inline ::google::protobuf::int32 ProGXGDYGameIsSurrenderOperate::nseat() const {
  return nseat_;
}
inline void ProGXGDYGameIsSurrenderOperate::set_nseat(::google::protobuf::int32 value) {
  set_has_nseat();
  nseat_ = value;
}

// optional bool bIsSurrender = 2;
inline bool ProGXGDYGameIsSurrenderOperate::has_bissurrender() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameIsSurrenderOperate::set_has_bissurrender() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameIsSurrenderOperate::clear_has_bissurrender() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameIsSurrenderOperate::clear_bissurrender() {
  bissurrender_ = false;
  clear_has_bissurrender();
}
inline bool ProGXGDYGameIsSurrenderOperate::bissurrender() const {
  return bissurrender_;
}
inline void ProGXGDYGameIsSurrenderOperate::set_bissurrender(bool value) {
  set_has_bissurrender();
  bissurrender_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameIsAgreeSurrenderSelect

// optional int32 nSurrenderSeat = 1;
inline bool ProGXGDYGameIsAgreeSurrenderSelect::has_nsurrenderseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameIsAgreeSurrenderSelect::set_has_nsurrenderseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameIsAgreeSurrenderSelect::clear_has_nsurrenderseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameIsAgreeSurrenderSelect::clear_nsurrenderseat() {
  nsurrenderseat_ = 0;
  clear_has_nsurrenderseat();
}
inline ::google::protobuf::int32 ProGXGDYGameIsAgreeSurrenderSelect::nsurrenderseat() const {
  return nsurrenderseat_;
}
inline void ProGXGDYGameIsAgreeSurrenderSelect::set_nsurrenderseat(::google::protobuf::int32 value) {
  set_has_nsurrenderseat();
  nsurrenderseat_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameIsAgreeSurrenderOperate

// optional int32 nSeat = 1;
inline bool ProGXGDYGameIsAgreeSurrenderOperate::has_nseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameIsAgreeSurrenderOperate::set_has_nseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameIsAgreeSurrenderOperate::clear_has_nseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameIsAgreeSurrenderOperate::clear_nseat() {
  nseat_ = 0;
  clear_has_nseat();
}
inline ::google::protobuf::int32 ProGXGDYGameIsAgreeSurrenderOperate::nseat() const {
  return nseat_;
}
inline void ProGXGDYGameIsAgreeSurrenderOperate::set_nseat(::google::protobuf::int32 value) {
  set_has_nseat();
  nseat_ = value;
}

// optional bool bIsAgreeSurrender = 2;
inline bool ProGXGDYGameIsAgreeSurrenderOperate::has_bisagreesurrender() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameIsAgreeSurrenderOperate::set_has_bisagreesurrender() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameIsAgreeSurrenderOperate::clear_has_bisagreesurrender() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameIsAgreeSurrenderOperate::clear_bisagreesurrender() {
  bisagreesurrender_ = false;
  clear_has_bisagreesurrender();
}
inline bool ProGXGDYGameIsAgreeSurrenderOperate::bisagreesurrender() const {
  return bisagreesurrender_;
}
inline void ProGXGDYGameIsAgreeSurrenderOperate::set_bisagreesurrender(bool value) {
  set_has_bisagreesurrender();
  bisagreesurrender_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameIsAgreeSurrenderStatus

// optional int32 nSeat = 1;
inline bool ProGXGDYGameIsAgreeSurrenderStatus::has_nseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameIsAgreeSurrenderStatus::set_has_nseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameIsAgreeSurrenderStatus::clear_has_nseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameIsAgreeSurrenderStatus::clear_nseat() {
  nseat_ = 0;
  clear_has_nseat();
}
inline ::google::protobuf::int32 ProGXGDYGameIsAgreeSurrenderStatus::nseat() const {
  return nseat_;
}
inline void ProGXGDYGameIsAgreeSurrenderStatus::set_nseat(::google::protobuf::int32 value) {
  set_has_nseat();
  nseat_ = value;
}

// optional bool bIsAgreeSurrender = 2;
inline bool ProGXGDYGameIsAgreeSurrenderStatus::has_bisagreesurrender() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameIsAgreeSurrenderStatus::set_has_bisagreesurrender() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameIsAgreeSurrenderStatus::clear_has_bisagreesurrender() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameIsAgreeSurrenderStatus::clear_bisagreesurrender() {
  bisagreesurrender_ = false;
  clear_has_bisagreesurrender();
}
inline bool ProGXGDYGameIsAgreeSurrenderStatus::bisagreesurrender() const {
  return bisagreesurrender_;
}
inline void ProGXGDYGameIsAgreeSurrenderStatus::set_bisagreesurrender(bool value) {
  set_has_bisagreesurrender();
  bisagreesurrender_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameSurrenderResult

// optional bool bSurrenderResult = 1;
inline bool ProGXGDYGameSurrenderResult::has_bsurrenderresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameSurrenderResult::set_has_bsurrenderresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameSurrenderResult::clear_has_bsurrenderresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameSurrenderResult::clear_bsurrenderresult() {
  bsurrenderresult_ = false;
  clear_has_bsurrenderresult();
}
inline bool ProGXGDYGameSurrenderResult::bsurrenderresult() const {
  return bsurrenderresult_;
}
inline void ProGXGDYGameSurrenderResult::set_bsurrenderresult(bool value) {
  set_has_bsurrenderresult();
  bsurrenderresult_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameShowBoomNotify

// -------------------------------------------------------------------

// ProGXGDYGameShowBoomOperate

// optional int32 nSeat = 1;
inline bool ProGXGDYGameShowBoomOperate::has_nseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameShowBoomOperate::set_has_nseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameShowBoomOperate::clear_has_nseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameShowBoomOperate::clear_nseat() {
  nseat_ = 0;
  clear_has_nseat();
}
inline ::google::protobuf::int32 ProGXGDYGameShowBoomOperate::nseat() const {
  return nseat_;
}
inline void ProGXGDYGameShowBoomOperate::set_nseat(::google::protobuf::int32 value) {
  set_has_nseat();
  nseat_ = value;
}

// -------------------------------------------------------------------

// ProGXGDYGameShowBoomResponse

// optional int32 nSeat = 1;
inline bool ProGXGDYGameShowBoomResponse::has_nseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProGXGDYGameShowBoomResponse::set_has_nseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProGXGDYGameShowBoomResponse::clear_has_nseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProGXGDYGameShowBoomResponse::clear_nseat() {
  nseat_ = 0;
  clear_has_nseat();
}
inline ::google::protobuf::int32 ProGXGDYGameShowBoomResponse::nseat() const {
  return nseat_;
}
inline void ProGXGDYGameShowBoomResponse::set_nseat(::google::protobuf::int32 value) {
  set_has_nseat();
  nseat_ = value;
}

// optional int32 AwardScore = 2;
inline bool ProGXGDYGameShowBoomResponse::has_awardscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProGXGDYGameShowBoomResponse::set_has_awardscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProGXGDYGameShowBoomResponse::clear_has_awardscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProGXGDYGameShowBoomResponse::clear_awardscore() {
  awardscore_ = 0;
  clear_has_awardscore();
}
inline ::google::protobuf::int32 ProGXGDYGameShowBoomResponse::awardscore() const {
  return awardscore_;
}
inline void ProGXGDYGameShowBoomResponse::set_awardscore(::google::protobuf::int32 value) {
  set_has_awardscore();
  awardscore_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameStatusResponse_MSGID>() {
  return ::ProGXGDYGameStatusResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameDeskInfoResponse_MSGID>() {
  return ::ProGXGDYGameDeskInfoResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameReadyNotify_MSGID>() {
  return ::ProGXGDYGameReadyNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameReadyRequest_MSGID>() {
  return ::ProGXGDYGameReadyRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameReadyResponse_MSGID>() {
  return ::ProGXGDYGameReadyResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameStart_MSGID>() {
  return ::ProGXGDYGameStart_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameDiceNotify_MSGID>() {
  return ::ProGXGDYGameDiceNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameDiceRequest_MSGID>() {
  return ::ProGXGDYGameDiceRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameDiceResult_MSGID>() {
  return ::ProGXGDYGameDiceResult_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameSendMahs_MSGID>() {
  return ::ProGXGDYGameSendMahs_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameKingData_MSGID>() {
  return ::ProGXGDYGameKingData_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameOutMahsResponse_MSGID>() {
  return ::ProGXGDYGameOutMahsResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameTimerPower_MSGID>() {
  return ::ProGXGDYGameTimerPower_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameOperateNotify_MSGID>() {
  return ::ProGXGDYGameOperateNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameOperateResult_MSGID>() {
  return ::ProGXGDYGameOperateResult_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameOperateRequest_MSGID>() {
  return ::ProGXGDYGameOperateRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameTrust_MSGID>() {
  return ::ProGXGDYGameTrust_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameOutMahRequest_MSGID>() {
  return ::ProGXGDYGameOutMahRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameCatchCard_MSGID>() {
  return ::ProGXGDYGameCatchCard_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameEnd_MSGID>() {
  return ::ProGXGDYGameEnd_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameQuickSoundRequest_MSGID>() {
  return ::ProGXGDYGameQuickSoundRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameQuickSoundResponse_MSGID>() {
  return ::ProGXGDYGameQuickSoundResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameSendDiscardMahs_MSGID>() {
  return ::ProGXGDYGameSendDiscardMahs_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameSendActionMahs_MSGID>() {
  return ::ProGXGDYGameSendActionMahs_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameBrokenRequest_MSGID>() {
  return ::ProGXGDYGameBrokenRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameBrokenOperate_MSGID>() {
  return ::ProGXGDYGameBrokenOperate_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameBrokenNotify_MSGID>() {
  return ::ProGXGDYGameBrokenNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameRuleConfig_MSGID>() {
  return ::ProGXGDYGameRuleConfig_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameBrokenStatus_MSGID>() {
  return ::ProGXGDYGameBrokenStatus_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameDataResp_MSGID>() {
  return ::ProGXGDYGameDataResp_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameRecordRequest_MSGID>() {
  return ::ProGXGDYGameRecordRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameRecordResponse_MSGID>() {
  return ::ProGXGDYGameRecordResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameUserLocationRequest_MSGID>() {
  return ::ProGXGDYGameUserLocationRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameSyncCardResponse_MSGID>() {
  return ::ProGXGDYGameSyncCardResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameUserPhoneStatusRequest_MSGID>() {
  return ::ProGXGDYGameUserPhoneStatusRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameUserGiveUpRequest_MSGID>() {
  return ::ProGXGDYGameUserGiveUpRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameUserHintRequest_MSGID>() {
  return ::ProGXGDYGameUserHintRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameUserHintResponse_MSGID>() {
  return ::ProGXGDYGameUserHintResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameUserDaTuNotify_MSGID>() {
  return ::ProGXGDYGameUserDaTuNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameUserTeammateRequest_MSGID>() {
  return ::ProGXGDYGameUserTeammateRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameUserDaTuRequest_MSGID>() {
  return ::ProGXGDYGameUserDaTuRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameUserDaTuResponse_MSGID>() {
  return ::ProGXGDYGameUserDaTuResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameUserDaTuResult_MSGID>() {
  return ::ProGXGDYGameUserDaTuResult_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameShangYouResult_MSGID>() {
  return ::ProGXGDYGameShangYouResult_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameShowFriendNotify_MSGID>() {
  return ::ProGXGDYGameShowFriendNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameBoomNumNotify_MSGID>() {
  return ::ProGXGDYGameBoomNumNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameShowBoomDataRequest_MSGID>() {
  return ::ProGXGDYGameShowBoomDataRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameShowBoomDataResponse_MSGID>() {
  return ::ProGXGDYGameShowBoomDataResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameCardTypeSelect_MSGID>() {
  return ::ProGXGDYGameCardTypeSelect_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameIsSurrenderSelect_MSGID>() {
  return ::ProGXGDYGameIsSurrenderSelect_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameIsSurrenderOperate_MSGID>() {
  return ::ProGXGDYGameIsSurrenderOperate_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameIsAgreeSurrenderSelect_MSGID>() {
  return ::ProGXGDYGameIsAgreeSurrenderSelect_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameIsAgreeSurrenderOperate_MSGID>() {
  return ::ProGXGDYGameIsAgreeSurrenderOperate_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameIsAgreeSurrenderStatus_MSGID>() {
  return ::ProGXGDYGameIsAgreeSurrenderStatus_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameSurrenderResult_MSGID>() {
  return ::ProGXGDYGameSurrenderResult_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameShowBoomNotify_MSGID>() {
  return ::ProGXGDYGameShowBoomNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameShowBoomOperate_MSGID>() {
  return ::ProGXGDYGameShowBoomOperate_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProGXGDYGameShowBoomResponse_MSGID>() {
  return ::ProGXGDYGameShowBoomResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GXGDYGameState>() {
  return ::GXGDYGameState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GXGDYSEND_TYPE>() {
  return ::GXGDYSEND_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GXGDYKING_TYPE>() {
  return ::GXGDYKING_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GXGDYBROKEN_TYPE>() {
  return ::GXGDYBROKEN_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GXGDYBROKEN_OPERATE>() {
  return ::GXGDYBROKEN_OPERATE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GXGDYBROKEN_CODE>() {
  return ::GXGDYBROKEN_CODE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GxGdyPk_2eproto__INCLUDED
