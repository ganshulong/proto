// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jdddzpk.proto

#ifndef PROTOBUF_jdddzpk_2eproto__INCLUDED
#define PROTOBUF_jdddzpk_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "base.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_jdddzpk_2eproto();
void protobuf_AssignDesc_jdddzpk_2eproto();
void protobuf_ShutdownFile_jdddzpk_2eproto();

class ProJDDDZGameStatusResponse;
class ProJDDDZGameDeskInfoResponse;
class ProJDDDZGameReadyNotify;
class ProJDDDZGameReadyRequest;
class ProJDDDZGameReadyResponse;
class ProJDDDZGameStart;
class ProJDDDZGameDiceNotify;
class ProJDDDZGameDiceRequest;
class ProJDDDZGameDiceResult;
class ProJDDDZGameSendMahs;
class ProJDDDZGameKingData;
class ProJDDDZGameOutMahsResponse;
class ProJDDDZGameTimerPower;
class ProJDDDZGameOperateNotify;
class ProJDDDZGameOperateResult;
class ProJDDDZGameOperateRequest;
class ProJDDDZGameTrust;
class ProJDDDZGameOutMahRequest;
class ProJDDDZGameCatchCard;
class JDDDZMahList;
class JDDDZScoreList;
class JDDDZAwardList;
class ProJDDDZGameEnd;
class ProJDDDZGameQuickSoundRequest;
class ProJDDDZGameQuickSoundResponse;
class ProJDDDZGameSendDiscardMahs;
class JDDDZWeaveItem;
class JDDDZWeaveItems;
class ProJDDDZGameSendActionMahs;
class ProJDDDZGameBrokenRequest;
class ProJDDDZGameBrokenOperate;
class ProJDDDZGameBrokenNotify;
class ProJDDDZGameRuleConfig;
class ProJDDDZGameBrokenStatus;
class ProJDDDZGameDataResp;
class ProJDDDZGameRecordRequest;
class ProJDDDZGameRecordResponse;
class ProJDDDZGameUserLocationRequest;
class ProJDDDZGameSyncCardResponse;
class ProJDDDZGameUserPhoneStatusRequest;
class ProJDDDZGameUserGiveUpRequest;
class ProJDDDZGameUserHintRequest;
class ProJDDDZGameUserHintResponse;
class ProJDDDZGameUserCallScoreResponse;
class ProJDDDZGameUserCallScoreRequest;
class ProJDDDZGameCallNotify;
class ProJDDDZGameQiangNotify;
class ProJDDDZGameUserCallLandlordResponse;
class ProJDDDZGameUserCallLandlordRequest;
class ProJDDDZGameUserQinagLandlordResponse;
class ProJDDDZGameUserQiangLandlordRequest;
class ProJDDDZGameSendLastCard;
class ProJDDDZGameUserMingPaiRequest;
class ProJDDDZGameUserMingPaiResponse;
class ProJDDDZGameMingNotify;
class ProJDDDZGameStartAgain;

enum ProJDDDZGameStatusResponse_MSGID {
  ProJDDDZGameStatusResponse_MSGID_ID = 2200
};
bool ProJDDDZGameStatusResponse_MSGID_IsValid(int value);
const ProJDDDZGameStatusResponse_MSGID ProJDDDZGameStatusResponse_MSGID_MSGID_MIN = ProJDDDZGameStatusResponse_MSGID_ID;
const ProJDDDZGameStatusResponse_MSGID ProJDDDZGameStatusResponse_MSGID_MSGID_MAX = ProJDDDZGameStatusResponse_MSGID_ID;
const int ProJDDDZGameStatusResponse_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameStatusResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameStatusResponse_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameStatusResponse_MSGID_Name(ProJDDDZGameStatusResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameStatusResponse_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameStatusResponse_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameStatusResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameStatusResponse_MSGID>(
    ProJDDDZGameStatusResponse_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameDeskInfoResponse_MSGID {
  ProJDDDZGameDeskInfoResponse_MSGID_ID = 2201
};
bool ProJDDDZGameDeskInfoResponse_MSGID_IsValid(int value);
const ProJDDDZGameDeskInfoResponse_MSGID ProJDDDZGameDeskInfoResponse_MSGID_MSGID_MIN = ProJDDDZGameDeskInfoResponse_MSGID_ID;
const ProJDDDZGameDeskInfoResponse_MSGID ProJDDDZGameDeskInfoResponse_MSGID_MSGID_MAX = ProJDDDZGameDeskInfoResponse_MSGID_ID;
const int ProJDDDZGameDeskInfoResponse_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameDeskInfoResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameDeskInfoResponse_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameDeskInfoResponse_MSGID_Name(ProJDDDZGameDeskInfoResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameDeskInfoResponse_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameDeskInfoResponse_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameDeskInfoResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameDeskInfoResponse_MSGID>(
    ProJDDDZGameDeskInfoResponse_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameReadyNotify_MSGID {
  ProJDDDZGameReadyNotify_MSGID_ID = 2202
};
bool ProJDDDZGameReadyNotify_MSGID_IsValid(int value);
const ProJDDDZGameReadyNotify_MSGID ProJDDDZGameReadyNotify_MSGID_MSGID_MIN = ProJDDDZGameReadyNotify_MSGID_ID;
const ProJDDDZGameReadyNotify_MSGID ProJDDDZGameReadyNotify_MSGID_MSGID_MAX = ProJDDDZGameReadyNotify_MSGID_ID;
const int ProJDDDZGameReadyNotify_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameReadyNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameReadyNotify_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameReadyNotify_MSGID_Name(ProJDDDZGameReadyNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameReadyNotify_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameReadyNotify_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameReadyNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameReadyNotify_MSGID>(
    ProJDDDZGameReadyNotify_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameReadyRequest_MSGID {
  ProJDDDZGameReadyRequest_MSGID_ID = 2203
};
bool ProJDDDZGameReadyRequest_MSGID_IsValid(int value);
const ProJDDDZGameReadyRequest_MSGID ProJDDDZGameReadyRequest_MSGID_MSGID_MIN = ProJDDDZGameReadyRequest_MSGID_ID;
const ProJDDDZGameReadyRequest_MSGID ProJDDDZGameReadyRequest_MSGID_MSGID_MAX = ProJDDDZGameReadyRequest_MSGID_ID;
const int ProJDDDZGameReadyRequest_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameReadyRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameReadyRequest_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameReadyRequest_MSGID_Name(ProJDDDZGameReadyRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameReadyRequest_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameReadyRequest_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameReadyRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameReadyRequest_MSGID>(
    ProJDDDZGameReadyRequest_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameReadyResponse_MSGID {
  ProJDDDZGameReadyResponse_MSGID_ID = 2204
};
bool ProJDDDZGameReadyResponse_MSGID_IsValid(int value);
const ProJDDDZGameReadyResponse_MSGID ProJDDDZGameReadyResponse_MSGID_MSGID_MIN = ProJDDDZGameReadyResponse_MSGID_ID;
const ProJDDDZGameReadyResponse_MSGID ProJDDDZGameReadyResponse_MSGID_MSGID_MAX = ProJDDDZGameReadyResponse_MSGID_ID;
const int ProJDDDZGameReadyResponse_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameReadyResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameReadyResponse_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameReadyResponse_MSGID_Name(ProJDDDZGameReadyResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameReadyResponse_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameReadyResponse_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameReadyResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameReadyResponse_MSGID>(
    ProJDDDZGameReadyResponse_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameStart_MSGID {
  ProJDDDZGameStart_MSGID_ID = 2205
};
bool ProJDDDZGameStart_MSGID_IsValid(int value);
const ProJDDDZGameStart_MSGID ProJDDDZGameStart_MSGID_MSGID_MIN = ProJDDDZGameStart_MSGID_ID;
const ProJDDDZGameStart_MSGID ProJDDDZGameStart_MSGID_MSGID_MAX = ProJDDDZGameStart_MSGID_ID;
const int ProJDDDZGameStart_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameStart_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameStart_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameStart_MSGID_Name(ProJDDDZGameStart_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameStart_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameStart_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameStart_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameStart_MSGID>(
    ProJDDDZGameStart_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameDiceNotify_MSGID {
  ProJDDDZGameDiceNotify_MSGID_ID = 2206
};
bool ProJDDDZGameDiceNotify_MSGID_IsValid(int value);
const ProJDDDZGameDiceNotify_MSGID ProJDDDZGameDiceNotify_MSGID_MSGID_MIN = ProJDDDZGameDiceNotify_MSGID_ID;
const ProJDDDZGameDiceNotify_MSGID ProJDDDZGameDiceNotify_MSGID_MSGID_MAX = ProJDDDZGameDiceNotify_MSGID_ID;
const int ProJDDDZGameDiceNotify_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameDiceNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameDiceNotify_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameDiceNotify_MSGID_Name(ProJDDDZGameDiceNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameDiceNotify_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameDiceNotify_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameDiceNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameDiceNotify_MSGID>(
    ProJDDDZGameDiceNotify_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameDiceRequest_MSGID {
  ProJDDDZGameDiceRequest_MSGID_ID = 2207
};
bool ProJDDDZGameDiceRequest_MSGID_IsValid(int value);
const ProJDDDZGameDiceRequest_MSGID ProJDDDZGameDiceRequest_MSGID_MSGID_MIN = ProJDDDZGameDiceRequest_MSGID_ID;
const ProJDDDZGameDiceRequest_MSGID ProJDDDZGameDiceRequest_MSGID_MSGID_MAX = ProJDDDZGameDiceRequest_MSGID_ID;
const int ProJDDDZGameDiceRequest_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameDiceRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameDiceRequest_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameDiceRequest_MSGID_Name(ProJDDDZGameDiceRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameDiceRequest_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameDiceRequest_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameDiceRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameDiceRequest_MSGID>(
    ProJDDDZGameDiceRequest_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameDiceResult_MSGID {
  ProJDDDZGameDiceResult_MSGID_ID = 2208
};
bool ProJDDDZGameDiceResult_MSGID_IsValid(int value);
const ProJDDDZGameDiceResult_MSGID ProJDDDZGameDiceResult_MSGID_MSGID_MIN = ProJDDDZGameDiceResult_MSGID_ID;
const ProJDDDZGameDiceResult_MSGID ProJDDDZGameDiceResult_MSGID_MSGID_MAX = ProJDDDZGameDiceResult_MSGID_ID;
const int ProJDDDZGameDiceResult_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameDiceResult_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameDiceResult_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameDiceResult_MSGID_Name(ProJDDDZGameDiceResult_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameDiceResult_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameDiceResult_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameDiceResult_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameDiceResult_MSGID>(
    ProJDDDZGameDiceResult_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameSendMahs_MSGID {
  ProJDDDZGameSendMahs_MSGID_ID = 2209
};
bool ProJDDDZGameSendMahs_MSGID_IsValid(int value);
const ProJDDDZGameSendMahs_MSGID ProJDDDZGameSendMahs_MSGID_MSGID_MIN = ProJDDDZGameSendMahs_MSGID_ID;
const ProJDDDZGameSendMahs_MSGID ProJDDDZGameSendMahs_MSGID_MSGID_MAX = ProJDDDZGameSendMahs_MSGID_ID;
const int ProJDDDZGameSendMahs_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameSendMahs_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameSendMahs_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameSendMahs_MSGID_Name(ProJDDDZGameSendMahs_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameSendMahs_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameSendMahs_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameSendMahs_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameSendMahs_MSGID>(
    ProJDDDZGameSendMahs_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameKingData_MSGID {
  ProJDDDZGameKingData_MSGID_ID = 2210
};
bool ProJDDDZGameKingData_MSGID_IsValid(int value);
const ProJDDDZGameKingData_MSGID ProJDDDZGameKingData_MSGID_MSGID_MIN = ProJDDDZGameKingData_MSGID_ID;
const ProJDDDZGameKingData_MSGID ProJDDDZGameKingData_MSGID_MSGID_MAX = ProJDDDZGameKingData_MSGID_ID;
const int ProJDDDZGameKingData_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameKingData_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameKingData_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameKingData_MSGID_Name(ProJDDDZGameKingData_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameKingData_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameKingData_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameKingData_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameKingData_MSGID>(
    ProJDDDZGameKingData_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameOutMahsResponse_MSGID {
  ProJDDDZGameOutMahsResponse_MSGID_ID = 2211
};
bool ProJDDDZGameOutMahsResponse_MSGID_IsValid(int value);
const ProJDDDZGameOutMahsResponse_MSGID ProJDDDZGameOutMahsResponse_MSGID_MSGID_MIN = ProJDDDZGameOutMahsResponse_MSGID_ID;
const ProJDDDZGameOutMahsResponse_MSGID ProJDDDZGameOutMahsResponse_MSGID_MSGID_MAX = ProJDDDZGameOutMahsResponse_MSGID_ID;
const int ProJDDDZGameOutMahsResponse_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameOutMahsResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameOutMahsResponse_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameOutMahsResponse_MSGID_Name(ProJDDDZGameOutMahsResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameOutMahsResponse_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameOutMahsResponse_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameOutMahsResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameOutMahsResponse_MSGID>(
    ProJDDDZGameOutMahsResponse_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameTimerPower_MSGID {
  ProJDDDZGameTimerPower_MSGID_ID = 2212
};
bool ProJDDDZGameTimerPower_MSGID_IsValid(int value);
const ProJDDDZGameTimerPower_MSGID ProJDDDZGameTimerPower_MSGID_MSGID_MIN = ProJDDDZGameTimerPower_MSGID_ID;
const ProJDDDZGameTimerPower_MSGID ProJDDDZGameTimerPower_MSGID_MSGID_MAX = ProJDDDZGameTimerPower_MSGID_ID;
const int ProJDDDZGameTimerPower_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameTimerPower_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameTimerPower_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameTimerPower_MSGID_Name(ProJDDDZGameTimerPower_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameTimerPower_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameTimerPower_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameTimerPower_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameTimerPower_MSGID>(
    ProJDDDZGameTimerPower_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameOperateNotify_MSGID {
  ProJDDDZGameOperateNotify_MSGID_ID = 2213
};
bool ProJDDDZGameOperateNotify_MSGID_IsValid(int value);
const ProJDDDZGameOperateNotify_MSGID ProJDDDZGameOperateNotify_MSGID_MSGID_MIN = ProJDDDZGameOperateNotify_MSGID_ID;
const ProJDDDZGameOperateNotify_MSGID ProJDDDZGameOperateNotify_MSGID_MSGID_MAX = ProJDDDZGameOperateNotify_MSGID_ID;
const int ProJDDDZGameOperateNotify_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameOperateNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameOperateNotify_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameOperateNotify_MSGID_Name(ProJDDDZGameOperateNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameOperateNotify_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameOperateNotify_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameOperateNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameOperateNotify_MSGID>(
    ProJDDDZGameOperateNotify_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameOperateResult_MSGID {
  ProJDDDZGameOperateResult_MSGID_ID = 2214
};
bool ProJDDDZGameOperateResult_MSGID_IsValid(int value);
const ProJDDDZGameOperateResult_MSGID ProJDDDZGameOperateResult_MSGID_MSGID_MIN = ProJDDDZGameOperateResult_MSGID_ID;
const ProJDDDZGameOperateResult_MSGID ProJDDDZGameOperateResult_MSGID_MSGID_MAX = ProJDDDZGameOperateResult_MSGID_ID;
const int ProJDDDZGameOperateResult_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameOperateResult_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameOperateResult_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameOperateResult_MSGID_Name(ProJDDDZGameOperateResult_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameOperateResult_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameOperateResult_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameOperateResult_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameOperateResult_MSGID>(
    ProJDDDZGameOperateResult_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameOperateRequest_MSGID {
  ProJDDDZGameOperateRequest_MSGID_ID = 2215
};
bool ProJDDDZGameOperateRequest_MSGID_IsValid(int value);
const ProJDDDZGameOperateRequest_MSGID ProJDDDZGameOperateRequest_MSGID_MSGID_MIN = ProJDDDZGameOperateRequest_MSGID_ID;
const ProJDDDZGameOperateRequest_MSGID ProJDDDZGameOperateRequest_MSGID_MSGID_MAX = ProJDDDZGameOperateRequest_MSGID_ID;
const int ProJDDDZGameOperateRequest_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameOperateRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameOperateRequest_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameOperateRequest_MSGID_Name(ProJDDDZGameOperateRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameOperateRequest_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameOperateRequest_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameOperateRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameOperateRequest_MSGID>(
    ProJDDDZGameOperateRequest_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameTrust_MSGID {
  ProJDDDZGameTrust_MSGID_ID = 2216
};
bool ProJDDDZGameTrust_MSGID_IsValid(int value);
const ProJDDDZGameTrust_MSGID ProJDDDZGameTrust_MSGID_MSGID_MIN = ProJDDDZGameTrust_MSGID_ID;
const ProJDDDZGameTrust_MSGID ProJDDDZGameTrust_MSGID_MSGID_MAX = ProJDDDZGameTrust_MSGID_ID;
const int ProJDDDZGameTrust_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameTrust_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameTrust_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameTrust_MSGID_Name(ProJDDDZGameTrust_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameTrust_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameTrust_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameTrust_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameTrust_MSGID>(
    ProJDDDZGameTrust_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameOutMahRequest_MSGID {
  ProJDDDZGameOutMahRequest_MSGID_ID = 2217
};
bool ProJDDDZGameOutMahRequest_MSGID_IsValid(int value);
const ProJDDDZGameOutMahRequest_MSGID ProJDDDZGameOutMahRequest_MSGID_MSGID_MIN = ProJDDDZGameOutMahRequest_MSGID_ID;
const ProJDDDZGameOutMahRequest_MSGID ProJDDDZGameOutMahRequest_MSGID_MSGID_MAX = ProJDDDZGameOutMahRequest_MSGID_ID;
const int ProJDDDZGameOutMahRequest_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameOutMahRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameOutMahRequest_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameOutMahRequest_MSGID_Name(ProJDDDZGameOutMahRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameOutMahRequest_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameOutMahRequest_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameOutMahRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameOutMahRequest_MSGID>(
    ProJDDDZGameOutMahRequest_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameCatchCard_MSGID {
  ProJDDDZGameCatchCard_MSGID_ID = 2218
};
bool ProJDDDZGameCatchCard_MSGID_IsValid(int value);
const ProJDDDZGameCatchCard_MSGID ProJDDDZGameCatchCard_MSGID_MSGID_MIN = ProJDDDZGameCatchCard_MSGID_ID;
const ProJDDDZGameCatchCard_MSGID ProJDDDZGameCatchCard_MSGID_MSGID_MAX = ProJDDDZGameCatchCard_MSGID_ID;
const int ProJDDDZGameCatchCard_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameCatchCard_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameCatchCard_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameCatchCard_MSGID_Name(ProJDDDZGameCatchCard_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameCatchCard_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameCatchCard_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameCatchCard_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameCatchCard_MSGID>(
    ProJDDDZGameCatchCard_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameEnd_MSGID {
  ProJDDDZGameEnd_MSGID_ID = 2219
};
bool ProJDDDZGameEnd_MSGID_IsValid(int value);
const ProJDDDZGameEnd_MSGID ProJDDDZGameEnd_MSGID_MSGID_MIN = ProJDDDZGameEnd_MSGID_ID;
const ProJDDDZGameEnd_MSGID ProJDDDZGameEnd_MSGID_MSGID_MAX = ProJDDDZGameEnd_MSGID_ID;
const int ProJDDDZGameEnd_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameEnd_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameEnd_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameEnd_MSGID_Name(ProJDDDZGameEnd_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameEnd_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameEnd_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameEnd_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameEnd_MSGID>(
    ProJDDDZGameEnd_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameQuickSoundRequest_MSGID {
  ProJDDDZGameQuickSoundRequest_MSGID_ID = 2220
};
bool ProJDDDZGameQuickSoundRequest_MSGID_IsValid(int value);
const ProJDDDZGameQuickSoundRequest_MSGID ProJDDDZGameQuickSoundRequest_MSGID_MSGID_MIN = ProJDDDZGameQuickSoundRequest_MSGID_ID;
const ProJDDDZGameQuickSoundRequest_MSGID ProJDDDZGameQuickSoundRequest_MSGID_MSGID_MAX = ProJDDDZGameQuickSoundRequest_MSGID_ID;
const int ProJDDDZGameQuickSoundRequest_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameQuickSoundRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameQuickSoundRequest_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameQuickSoundRequest_MSGID_Name(ProJDDDZGameQuickSoundRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameQuickSoundRequest_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameQuickSoundRequest_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameQuickSoundRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameQuickSoundRequest_MSGID>(
    ProJDDDZGameQuickSoundRequest_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameQuickSoundResponse_MSGID {
  ProJDDDZGameQuickSoundResponse_MSGID_ID = 2221
};
bool ProJDDDZGameQuickSoundResponse_MSGID_IsValid(int value);
const ProJDDDZGameQuickSoundResponse_MSGID ProJDDDZGameQuickSoundResponse_MSGID_MSGID_MIN = ProJDDDZGameQuickSoundResponse_MSGID_ID;
const ProJDDDZGameQuickSoundResponse_MSGID ProJDDDZGameQuickSoundResponse_MSGID_MSGID_MAX = ProJDDDZGameQuickSoundResponse_MSGID_ID;
const int ProJDDDZGameQuickSoundResponse_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameQuickSoundResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameQuickSoundResponse_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameQuickSoundResponse_MSGID_Name(ProJDDDZGameQuickSoundResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameQuickSoundResponse_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameQuickSoundResponse_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameQuickSoundResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameQuickSoundResponse_MSGID>(
    ProJDDDZGameQuickSoundResponse_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameSendDiscardMahs_MSGID {
  ProJDDDZGameSendDiscardMahs_MSGID_ID = 2222
};
bool ProJDDDZGameSendDiscardMahs_MSGID_IsValid(int value);
const ProJDDDZGameSendDiscardMahs_MSGID ProJDDDZGameSendDiscardMahs_MSGID_MSGID_MIN = ProJDDDZGameSendDiscardMahs_MSGID_ID;
const ProJDDDZGameSendDiscardMahs_MSGID ProJDDDZGameSendDiscardMahs_MSGID_MSGID_MAX = ProJDDDZGameSendDiscardMahs_MSGID_ID;
const int ProJDDDZGameSendDiscardMahs_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameSendDiscardMahs_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameSendDiscardMahs_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameSendDiscardMahs_MSGID_Name(ProJDDDZGameSendDiscardMahs_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameSendDiscardMahs_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameSendDiscardMahs_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameSendDiscardMahs_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameSendDiscardMahs_MSGID>(
    ProJDDDZGameSendDiscardMahs_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameSendActionMahs_MSGID {
  ProJDDDZGameSendActionMahs_MSGID_ID = 2223
};
bool ProJDDDZGameSendActionMahs_MSGID_IsValid(int value);
const ProJDDDZGameSendActionMahs_MSGID ProJDDDZGameSendActionMahs_MSGID_MSGID_MIN = ProJDDDZGameSendActionMahs_MSGID_ID;
const ProJDDDZGameSendActionMahs_MSGID ProJDDDZGameSendActionMahs_MSGID_MSGID_MAX = ProJDDDZGameSendActionMahs_MSGID_ID;
const int ProJDDDZGameSendActionMahs_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameSendActionMahs_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameSendActionMahs_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameSendActionMahs_MSGID_Name(ProJDDDZGameSendActionMahs_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameSendActionMahs_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameSendActionMahs_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameSendActionMahs_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameSendActionMahs_MSGID>(
    ProJDDDZGameSendActionMahs_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameBrokenRequest_MSGID {
  ProJDDDZGameBrokenRequest_MSGID_ID = 2224
};
bool ProJDDDZGameBrokenRequest_MSGID_IsValid(int value);
const ProJDDDZGameBrokenRequest_MSGID ProJDDDZGameBrokenRequest_MSGID_MSGID_MIN = ProJDDDZGameBrokenRequest_MSGID_ID;
const ProJDDDZGameBrokenRequest_MSGID ProJDDDZGameBrokenRequest_MSGID_MSGID_MAX = ProJDDDZGameBrokenRequest_MSGID_ID;
const int ProJDDDZGameBrokenRequest_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameBrokenRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameBrokenRequest_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameBrokenRequest_MSGID_Name(ProJDDDZGameBrokenRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameBrokenRequest_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameBrokenRequest_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameBrokenRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameBrokenRequest_MSGID>(
    ProJDDDZGameBrokenRequest_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameBrokenOperate_MSGID {
  ProJDDDZGameBrokenOperate_MSGID_ID = 2225
};
bool ProJDDDZGameBrokenOperate_MSGID_IsValid(int value);
const ProJDDDZGameBrokenOperate_MSGID ProJDDDZGameBrokenOperate_MSGID_MSGID_MIN = ProJDDDZGameBrokenOperate_MSGID_ID;
const ProJDDDZGameBrokenOperate_MSGID ProJDDDZGameBrokenOperate_MSGID_MSGID_MAX = ProJDDDZGameBrokenOperate_MSGID_ID;
const int ProJDDDZGameBrokenOperate_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameBrokenOperate_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameBrokenOperate_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameBrokenOperate_MSGID_Name(ProJDDDZGameBrokenOperate_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameBrokenOperate_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameBrokenOperate_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameBrokenOperate_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameBrokenOperate_MSGID>(
    ProJDDDZGameBrokenOperate_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameBrokenNotify_MSGID {
  ProJDDDZGameBrokenNotify_MSGID_ID = 2226
};
bool ProJDDDZGameBrokenNotify_MSGID_IsValid(int value);
const ProJDDDZGameBrokenNotify_MSGID ProJDDDZGameBrokenNotify_MSGID_MSGID_MIN = ProJDDDZGameBrokenNotify_MSGID_ID;
const ProJDDDZGameBrokenNotify_MSGID ProJDDDZGameBrokenNotify_MSGID_MSGID_MAX = ProJDDDZGameBrokenNotify_MSGID_ID;
const int ProJDDDZGameBrokenNotify_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameBrokenNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameBrokenNotify_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameBrokenNotify_MSGID_Name(ProJDDDZGameBrokenNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameBrokenNotify_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameBrokenNotify_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameBrokenNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameBrokenNotify_MSGID>(
    ProJDDDZGameBrokenNotify_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameRuleConfig_MSGID {
  ProJDDDZGameRuleConfig_MSGID_ID = 2227
};
bool ProJDDDZGameRuleConfig_MSGID_IsValid(int value);
const ProJDDDZGameRuleConfig_MSGID ProJDDDZGameRuleConfig_MSGID_MSGID_MIN = ProJDDDZGameRuleConfig_MSGID_ID;
const ProJDDDZGameRuleConfig_MSGID ProJDDDZGameRuleConfig_MSGID_MSGID_MAX = ProJDDDZGameRuleConfig_MSGID_ID;
const int ProJDDDZGameRuleConfig_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameRuleConfig_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameRuleConfig_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameRuleConfig_MSGID_Name(ProJDDDZGameRuleConfig_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameRuleConfig_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameRuleConfig_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameRuleConfig_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameRuleConfig_MSGID>(
    ProJDDDZGameRuleConfig_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameBrokenStatus_MSGID {
  ProJDDDZGameBrokenStatus_MSGID_ID = 2228
};
bool ProJDDDZGameBrokenStatus_MSGID_IsValid(int value);
const ProJDDDZGameBrokenStatus_MSGID ProJDDDZGameBrokenStatus_MSGID_MSGID_MIN = ProJDDDZGameBrokenStatus_MSGID_ID;
const ProJDDDZGameBrokenStatus_MSGID ProJDDDZGameBrokenStatus_MSGID_MSGID_MAX = ProJDDDZGameBrokenStatus_MSGID_ID;
const int ProJDDDZGameBrokenStatus_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameBrokenStatus_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameBrokenStatus_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameBrokenStatus_MSGID_Name(ProJDDDZGameBrokenStatus_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameBrokenStatus_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameBrokenStatus_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameBrokenStatus_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameBrokenStatus_MSGID>(
    ProJDDDZGameBrokenStatus_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameDataResp_MSGID {
  ProJDDDZGameDataResp_MSGID_ID = 2229
};
bool ProJDDDZGameDataResp_MSGID_IsValid(int value);
const ProJDDDZGameDataResp_MSGID ProJDDDZGameDataResp_MSGID_MSGID_MIN = ProJDDDZGameDataResp_MSGID_ID;
const ProJDDDZGameDataResp_MSGID ProJDDDZGameDataResp_MSGID_MSGID_MAX = ProJDDDZGameDataResp_MSGID_ID;
const int ProJDDDZGameDataResp_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameDataResp_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameDataResp_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameDataResp_MSGID_Name(ProJDDDZGameDataResp_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameDataResp_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameDataResp_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameDataResp_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameDataResp_MSGID>(
    ProJDDDZGameDataResp_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameRecordRequest_MSGID {
  ProJDDDZGameRecordRequest_MSGID_ID = 2230
};
bool ProJDDDZGameRecordRequest_MSGID_IsValid(int value);
const ProJDDDZGameRecordRequest_MSGID ProJDDDZGameRecordRequest_MSGID_MSGID_MIN = ProJDDDZGameRecordRequest_MSGID_ID;
const ProJDDDZGameRecordRequest_MSGID ProJDDDZGameRecordRequest_MSGID_MSGID_MAX = ProJDDDZGameRecordRequest_MSGID_ID;
const int ProJDDDZGameRecordRequest_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameRecordRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameRecordRequest_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameRecordRequest_MSGID_Name(ProJDDDZGameRecordRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameRecordRequest_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameRecordRequest_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameRecordRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameRecordRequest_MSGID>(
    ProJDDDZGameRecordRequest_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameRecordResponse_MSGID {
  ProJDDDZGameRecordResponse_MSGID_ID = 2231
};
bool ProJDDDZGameRecordResponse_MSGID_IsValid(int value);
const ProJDDDZGameRecordResponse_MSGID ProJDDDZGameRecordResponse_MSGID_MSGID_MIN = ProJDDDZGameRecordResponse_MSGID_ID;
const ProJDDDZGameRecordResponse_MSGID ProJDDDZGameRecordResponse_MSGID_MSGID_MAX = ProJDDDZGameRecordResponse_MSGID_ID;
const int ProJDDDZGameRecordResponse_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameRecordResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameRecordResponse_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameRecordResponse_MSGID_Name(ProJDDDZGameRecordResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameRecordResponse_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameRecordResponse_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameRecordResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameRecordResponse_MSGID>(
    ProJDDDZGameRecordResponse_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameUserLocationRequest_MSGID {
  ProJDDDZGameUserLocationRequest_MSGID_ID = 2232
};
bool ProJDDDZGameUserLocationRequest_MSGID_IsValid(int value);
const ProJDDDZGameUserLocationRequest_MSGID ProJDDDZGameUserLocationRequest_MSGID_MSGID_MIN = ProJDDDZGameUserLocationRequest_MSGID_ID;
const ProJDDDZGameUserLocationRequest_MSGID ProJDDDZGameUserLocationRequest_MSGID_MSGID_MAX = ProJDDDZGameUserLocationRequest_MSGID_ID;
const int ProJDDDZGameUserLocationRequest_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameUserLocationRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameUserLocationRequest_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameUserLocationRequest_MSGID_Name(ProJDDDZGameUserLocationRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameUserLocationRequest_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameUserLocationRequest_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameUserLocationRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameUserLocationRequest_MSGID>(
    ProJDDDZGameUserLocationRequest_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameSyncCardResponse_MSGID {
  ProJDDDZGameSyncCardResponse_MSGID_ID = 2233
};
bool ProJDDDZGameSyncCardResponse_MSGID_IsValid(int value);
const ProJDDDZGameSyncCardResponse_MSGID ProJDDDZGameSyncCardResponse_MSGID_MSGID_MIN = ProJDDDZGameSyncCardResponse_MSGID_ID;
const ProJDDDZGameSyncCardResponse_MSGID ProJDDDZGameSyncCardResponse_MSGID_MSGID_MAX = ProJDDDZGameSyncCardResponse_MSGID_ID;
const int ProJDDDZGameSyncCardResponse_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameSyncCardResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameSyncCardResponse_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameSyncCardResponse_MSGID_Name(ProJDDDZGameSyncCardResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameSyncCardResponse_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameSyncCardResponse_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameSyncCardResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameSyncCardResponse_MSGID>(
    ProJDDDZGameSyncCardResponse_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameUserPhoneStatusRequest_MSGID {
  ProJDDDZGameUserPhoneStatusRequest_MSGID_ID = 2234
};
bool ProJDDDZGameUserPhoneStatusRequest_MSGID_IsValid(int value);
const ProJDDDZGameUserPhoneStatusRequest_MSGID ProJDDDZGameUserPhoneStatusRequest_MSGID_MSGID_MIN = ProJDDDZGameUserPhoneStatusRequest_MSGID_ID;
const ProJDDDZGameUserPhoneStatusRequest_MSGID ProJDDDZGameUserPhoneStatusRequest_MSGID_MSGID_MAX = ProJDDDZGameUserPhoneStatusRequest_MSGID_ID;
const int ProJDDDZGameUserPhoneStatusRequest_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameUserPhoneStatusRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameUserPhoneStatusRequest_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameUserPhoneStatusRequest_MSGID_Name(ProJDDDZGameUserPhoneStatusRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameUserPhoneStatusRequest_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameUserPhoneStatusRequest_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameUserPhoneStatusRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameUserPhoneStatusRequest_MSGID>(
    ProJDDDZGameUserPhoneStatusRequest_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameUserGiveUpRequest_MSGID {
  ProJDDDZGameUserGiveUpRequest_MSGID_ID = 2235
};
bool ProJDDDZGameUserGiveUpRequest_MSGID_IsValid(int value);
const ProJDDDZGameUserGiveUpRequest_MSGID ProJDDDZGameUserGiveUpRequest_MSGID_MSGID_MIN = ProJDDDZGameUserGiveUpRequest_MSGID_ID;
const ProJDDDZGameUserGiveUpRequest_MSGID ProJDDDZGameUserGiveUpRequest_MSGID_MSGID_MAX = ProJDDDZGameUserGiveUpRequest_MSGID_ID;
const int ProJDDDZGameUserGiveUpRequest_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameUserGiveUpRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameUserGiveUpRequest_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameUserGiveUpRequest_MSGID_Name(ProJDDDZGameUserGiveUpRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameUserGiveUpRequest_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameUserGiveUpRequest_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameUserGiveUpRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameUserGiveUpRequest_MSGID>(
    ProJDDDZGameUserGiveUpRequest_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameUserHintRequest_MSGID {
  ProJDDDZGameUserHintRequest_MSGID_ID = 2236
};
bool ProJDDDZGameUserHintRequest_MSGID_IsValid(int value);
const ProJDDDZGameUserHintRequest_MSGID ProJDDDZGameUserHintRequest_MSGID_MSGID_MIN = ProJDDDZGameUserHintRequest_MSGID_ID;
const ProJDDDZGameUserHintRequest_MSGID ProJDDDZGameUserHintRequest_MSGID_MSGID_MAX = ProJDDDZGameUserHintRequest_MSGID_ID;
const int ProJDDDZGameUserHintRequest_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameUserHintRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameUserHintRequest_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameUserHintRequest_MSGID_Name(ProJDDDZGameUserHintRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameUserHintRequest_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameUserHintRequest_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameUserHintRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameUserHintRequest_MSGID>(
    ProJDDDZGameUserHintRequest_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameUserHintResponse_MSGID {
  ProJDDDZGameUserHintResponse_MSGID_ID = 2237
};
bool ProJDDDZGameUserHintResponse_MSGID_IsValid(int value);
const ProJDDDZGameUserHintResponse_MSGID ProJDDDZGameUserHintResponse_MSGID_MSGID_MIN = ProJDDDZGameUserHintResponse_MSGID_ID;
const ProJDDDZGameUserHintResponse_MSGID ProJDDDZGameUserHintResponse_MSGID_MSGID_MAX = ProJDDDZGameUserHintResponse_MSGID_ID;
const int ProJDDDZGameUserHintResponse_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameUserHintResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameUserHintResponse_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameUserHintResponse_MSGID_Name(ProJDDDZGameUserHintResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameUserHintResponse_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameUserHintResponse_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameUserHintResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameUserHintResponse_MSGID>(
    ProJDDDZGameUserHintResponse_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameUserCallScoreResponse_MSGID {
  ProJDDDZGameUserCallScoreResponse_MSGID_ID = 2238
};
bool ProJDDDZGameUserCallScoreResponse_MSGID_IsValid(int value);
const ProJDDDZGameUserCallScoreResponse_MSGID ProJDDDZGameUserCallScoreResponse_MSGID_MSGID_MIN = ProJDDDZGameUserCallScoreResponse_MSGID_ID;
const ProJDDDZGameUserCallScoreResponse_MSGID ProJDDDZGameUserCallScoreResponse_MSGID_MSGID_MAX = ProJDDDZGameUserCallScoreResponse_MSGID_ID;
const int ProJDDDZGameUserCallScoreResponse_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameUserCallScoreResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameUserCallScoreResponse_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameUserCallScoreResponse_MSGID_Name(ProJDDDZGameUserCallScoreResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameUserCallScoreResponse_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameUserCallScoreResponse_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameUserCallScoreResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameUserCallScoreResponse_MSGID>(
    ProJDDDZGameUserCallScoreResponse_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameUserCallScoreRequest_MSGID {
  ProJDDDZGameUserCallScoreRequest_MSGID_ID = 2239
};
bool ProJDDDZGameUserCallScoreRequest_MSGID_IsValid(int value);
const ProJDDDZGameUserCallScoreRequest_MSGID ProJDDDZGameUserCallScoreRequest_MSGID_MSGID_MIN = ProJDDDZGameUserCallScoreRequest_MSGID_ID;
const ProJDDDZGameUserCallScoreRequest_MSGID ProJDDDZGameUserCallScoreRequest_MSGID_MSGID_MAX = ProJDDDZGameUserCallScoreRequest_MSGID_ID;
const int ProJDDDZGameUserCallScoreRequest_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameUserCallScoreRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameUserCallScoreRequest_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameUserCallScoreRequest_MSGID_Name(ProJDDDZGameUserCallScoreRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameUserCallScoreRequest_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameUserCallScoreRequest_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameUserCallScoreRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameUserCallScoreRequest_MSGID>(
    ProJDDDZGameUserCallScoreRequest_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameCallNotify_MSGID {
  ProJDDDZGameCallNotify_MSGID_ID = 2244
};
bool ProJDDDZGameCallNotify_MSGID_IsValid(int value);
const ProJDDDZGameCallNotify_MSGID ProJDDDZGameCallNotify_MSGID_MSGID_MIN = ProJDDDZGameCallNotify_MSGID_ID;
const ProJDDDZGameCallNotify_MSGID ProJDDDZGameCallNotify_MSGID_MSGID_MAX = ProJDDDZGameCallNotify_MSGID_ID;
const int ProJDDDZGameCallNotify_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameCallNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameCallNotify_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameCallNotify_MSGID_Name(ProJDDDZGameCallNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameCallNotify_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameCallNotify_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameCallNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameCallNotify_MSGID>(
    ProJDDDZGameCallNotify_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameQiangNotify_MSGID {
  ProJDDDZGameQiangNotify_MSGID_ID = 2245
};
bool ProJDDDZGameQiangNotify_MSGID_IsValid(int value);
const ProJDDDZGameQiangNotify_MSGID ProJDDDZGameQiangNotify_MSGID_MSGID_MIN = ProJDDDZGameQiangNotify_MSGID_ID;
const ProJDDDZGameQiangNotify_MSGID ProJDDDZGameQiangNotify_MSGID_MSGID_MAX = ProJDDDZGameQiangNotify_MSGID_ID;
const int ProJDDDZGameQiangNotify_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameQiangNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameQiangNotify_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameQiangNotify_MSGID_Name(ProJDDDZGameQiangNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameQiangNotify_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameQiangNotify_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameQiangNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameQiangNotify_MSGID>(
    ProJDDDZGameQiangNotify_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameUserCallLandlordResponse_MSGID {
  ProJDDDZGameUserCallLandlordResponse_MSGID_ID = 2240
};
bool ProJDDDZGameUserCallLandlordResponse_MSGID_IsValid(int value);
const ProJDDDZGameUserCallLandlordResponse_MSGID ProJDDDZGameUserCallLandlordResponse_MSGID_MSGID_MIN = ProJDDDZGameUserCallLandlordResponse_MSGID_ID;
const ProJDDDZGameUserCallLandlordResponse_MSGID ProJDDDZGameUserCallLandlordResponse_MSGID_MSGID_MAX = ProJDDDZGameUserCallLandlordResponse_MSGID_ID;
const int ProJDDDZGameUserCallLandlordResponse_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameUserCallLandlordResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameUserCallLandlordResponse_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameUserCallLandlordResponse_MSGID_Name(ProJDDDZGameUserCallLandlordResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameUserCallLandlordResponse_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameUserCallLandlordResponse_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameUserCallLandlordResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameUserCallLandlordResponse_MSGID>(
    ProJDDDZGameUserCallLandlordResponse_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameUserCallLandlordRequest_MSGID {
  ProJDDDZGameUserCallLandlordRequest_MSGID_ID = 2241
};
bool ProJDDDZGameUserCallLandlordRequest_MSGID_IsValid(int value);
const ProJDDDZGameUserCallLandlordRequest_MSGID ProJDDDZGameUserCallLandlordRequest_MSGID_MSGID_MIN = ProJDDDZGameUserCallLandlordRequest_MSGID_ID;
const ProJDDDZGameUserCallLandlordRequest_MSGID ProJDDDZGameUserCallLandlordRequest_MSGID_MSGID_MAX = ProJDDDZGameUserCallLandlordRequest_MSGID_ID;
const int ProJDDDZGameUserCallLandlordRequest_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameUserCallLandlordRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameUserCallLandlordRequest_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameUserCallLandlordRequest_MSGID_Name(ProJDDDZGameUserCallLandlordRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameUserCallLandlordRequest_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameUserCallLandlordRequest_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameUserCallLandlordRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameUserCallLandlordRequest_MSGID>(
    ProJDDDZGameUserCallLandlordRequest_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameUserQinagLandlordResponse_MSGID {
  ProJDDDZGameUserQinagLandlordResponse_MSGID_ID = 2242
};
bool ProJDDDZGameUserQinagLandlordResponse_MSGID_IsValid(int value);
const ProJDDDZGameUserQinagLandlordResponse_MSGID ProJDDDZGameUserQinagLandlordResponse_MSGID_MSGID_MIN = ProJDDDZGameUserQinagLandlordResponse_MSGID_ID;
const ProJDDDZGameUserQinagLandlordResponse_MSGID ProJDDDZGameUserQinagLandlordResponse_MSGID_MSGID_MAX = ProJDDDZGameUserQinagLandlordResponse_MSGID_ID;
const int ProJDDDZGameUserQinagLandlordResponse_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameUserQinagLandlordResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameUserQinagLandlordResponse_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameUserQinagLandlordResponse_MSGID_Name(ProJDDDZGameUserQinagLandlordResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameUserQinagLandlordResponse_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameUserQinagLandlordResponse_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameUserQinagLandlordResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameUserQinagLandlordResponse_MSGID>(
    ProJDDDZGameUserQinagLandlordResponse_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameUserQiangLandlordRequest_MSGID {
  ProJDDDZGameUserQiangLandlordRequest_MSGID_ID = 2243
};
bool ProJDDDZGameUserQiangLandlordRequest_MSGID_IsValid(int value);
const ProJDDDZGameUserQiangLandlordRequest_MSGID ProJDDDZGameUserQiangLandlordRequest_MSGID_MSGID_MIN = ProJDDDZGameUserQiangLandlordRequest_MSGID_ID;
const ProJDDDZGameUserQiangLandlordRequest_MSGID ProJDDDZGameUserQiangLandlordRequest_MSGID_MSGID_MAX = ProJDDDZGameUserQiangLandlordRequest_MSGID_ID;
const int ProJDDDZGameUserQiangLandlordRequest_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameUserQiangLandlordRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameUserQiangLandlordRequest_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameUserQiangLandlordRequest_MSGID_Name(ProJDDDZGameUserQiangLandlordRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameUserQiangLandlordRequest_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameUserQiangLandlordRequest_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameUserQiangLandlordRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameUserQiangLandlordRequest_MSGID>(
    ProJDDDZGameUserQiangLandlordRequest_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameSendLastCard_MSGID {
  ProJDDDZGameSendLastCard_MSGID_ID = 2246
};
bool ProJDDDZGameSendLastCard_MSGID_IsValid(int value);
const ProJDDDZGameSendLastCard_MSGID ProJDDDZGameSendLastCard_MSGID_MSGID_MIN = ProJDDDZGameSendLastCard_MSGID_ID;
const ProJDDDZGameSendLastCard_MSGID ProJDDDZGameSendLastCard_MSGID_MSGID_MAX = ProJDDDZGameSendLastCard_MSGID_ID;
const int ProJDDDZGameSendLastCard_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameSendLastCard_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameSendLastCard_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameSendLastCard_MSGID_Name(ProJDDDZGameSendLastCard_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameSendLastCard_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameSendLastCard_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameSendLastCard_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameSendLastCard_MSGID>(
    ProJDDDZGameSendLastCard_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameUserMingPaiRequest_MSGID {
  ProJDDDZGameUserMingPaiRequest_MSGID_ID = 2247
};
bool ProJDDDZGameUserMingPaiRequest_MSGID_IsValid(int value);
const ProJDDDZGameUserMingPaiRequest_MSGID ProJDDDZGameUserMingPaiRequest_MSGID_MSGID_MIN = ProJDDDZGameUserMingPaiRequest_MSGID_ID;
const ProJDDDZGameUserMingPaiRequest_MSGID ProJDDDZGameUserMingPaiRequest_MSGID_MSGID_MAX = ProJDDDZGameUserMingPaiRequest_MSGID_ID;
const int ProJDDDZGameUserMingPaiRequest_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameUserMingPaiRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameUserMingPaiRequest_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameUserMingPaiRequest_MSGID_Name(ProJDDDZGameUserMingPaiRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameUserMingPaiRequest_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameUserMingPaiRequest_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameUserMingPaiRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameUserMingPaiRequest_MSGID>(
    ProJDDDZGameUserMingPaiRequest_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameUserMingPaiResponse_MSGID {
  ProJDDDZGameUserMingPaiResponse_MSGID_ID = 2248
};
bool ProJDDDZGameUserMingPaiResponse_MSGID_IsValid(int value);
const ProJDDDZGameUserMingPaiResponse_MSGID ProJDDDZGameUserMingPaiResponse_MSGID_MSGID_MIN = ProJDDDZGameUserMingPaiResponse_MSGID_ID;
const ProJDDDZGameUserMingPaiResponse_MSGID ProJDDDZGameUserMingPaiResponse_MSGID_MSGID_MAX = ProJDDDZGameUserMingPaiResponse_MSGID_ID;
const int ProJDDDZGameUserMingPaiResponse_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameUserMingPaiResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameUserMingPaiResponse_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameUserMingPaiResponse_MSGID_Name(ProJDDDZGameUserMingPaiResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameUserMingPaiResponse_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameUserMingPaiResponse_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameUserMingPaiResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameUserMingPaiResponse_MSGID>(
    ProJDDDZGameUserMingPaiResponse_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameMingNotify_MSGID {
  ProJDDDZGameMingNotify_MSGID_ID = 2249
};
bool ProJDDDZGameMingNotify_MSGID_IsValid(int value);
const ProJDDDZGameMingNotify_MSGID ProJDDDZGameMingNotify_MSGID_MSGID_MIN = ProJDDDZGameMingNotify_MSGID_ID;
const ProJDDDZGameMingNotify_MSGID ProJDDDZGameMingNotify_MSGID_MSGID_MAX = ProJDDDZGameMingNotify_MSGID_ID;
const int ProJDDDZGameMingNotify_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameMingNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameMingNotify_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameMingNotify_MSGID_Name(ProJDDDZGameMingNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameMingNotify_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameMingNotify_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameMingNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameMingNotify_MSGID>(
    ProJDDDZGameMingNotify_MSGID_descriptor(), name, value);
}
enum ProJDDDZGameStartAgain_MSGID {
  ProJDDDZGameStartAgain_MSGID_ID = 2250
};
bool ProJDDDZGameStartAgain_MSGID_IsValid(int value);
const ProJDDDZGameStartAgain_MSGID ProJDDDZGameStartAgain_MSGID_MSGID_MIN = ProJDDDZGameStartAgain_MSGID_ID;
const ProJDDDZGameStartAgain_MSGID ProJDDDZGameStartAgain_MSGID_MSGID_MAX = ProJDDDZGameStartAgain_MSGID_ID;
const int ProJDDDZGameStartAgain_MSGID_MSGID_ARRAYSIZE = ProJDDDZGameStartAgain_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProJDDDZGameStartAgain_MSGID_descriptor();
inline const ::std::string& ProJDDDZGameStartAgain_MSGID_Name(ProJDDDZGameStartAgain_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProJDDDZGameStartAgain_MSGID_descriptor(), value);
}
inline bool ProJDDDZGameStartAgain_MSGID_Parse(
    const ::std::string& name, ProJDDDZGameStartAgain_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProJDDDZGameStartAgain_MSGID>(
    ProJDDDZGameStartAgain_MSGID_descriptor(), name, value);
}
enum JDDDZGameState {
  JDDDZ_GAME_IDLE = 1,
  JDDDZ_GAME_DICE_BANK = 2,
  JDDDZ_GAME_SEND = 3,
  JDDDZ_GAME_DICE_KING = 4,
  JDDDZ_GAME_CALL = 5,
  JDDDZ_GAME_QIANG = 6,
  JDDDZ_GAME_PLAY = 7,
  JDDDZ_GAME_END = 8
};
bool JDDDZGameState_IsValid(int value);
const JDDDZGameState JDDDZGameState_MIN = JDDDZ_GAME_IDLE;
const JDDDZGameState JDDDZGameState_MAX = JDDDZ_GAME_END;
const int JDDDZGameState_ARRAYSIZE = JDDDZGameState_MAX + 1;

const ::google::protobuf::EnumDescriptor* JDDDZGameState_descriptor();
inline const ::std::string& JDDDZGameState_Name(JDDDZGameState value) {
  return ::google::protobuf::internal::NameOfEnum(
    JDDDZGameState_descriptor(), value);
}
inline bool JDDDZGameState_Parse(
    const ::std::string& name, JDDDZGameState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JDDDZGameState>(
    JDDDZGameState_descriptor(), name, value);
}
enum JDDDZSEND_TYPE {
  JDDDZ_NORMAL_SEND = 1,
  JDDDZ_RECOME_SEND = 2
};
bool JDDDZSEND_TYPE_IsValid(int value);
const JDDDZSEND_TYPE JDDDZSEND_TYPE_MIN = JDDDZ_NORMAL_SEND;
const JDDDZSEND_TYPE JDDDZSEND_TYPE_MAX = JDDDZ_RECOME_SEND;
const int JDDDZSEND_TYPE_ARRAYSIZE = JDDDZSEND_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* JDDDZSEND_TYPE_descriptor();
inline const ::std::string& JDDDZSEND_TYPE_Name(JDDDZSEND_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    JDDDZSEND_TYPE_descriptor(), value);
}
inline bool JDDDZSEND_TYPE_Parse(
    const ::std::string& name, JDDDZSEND_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JDDDZSEND_TYPE>(
    JDDDZSEND_TYPE_descriptor(), name, value);
}
enum JDDDZKIGN_TYPE {
  JDDDZ_KING_UP = 1,
  JDDDZ_KING_HUITOU = 2,
  JDDDZ_KING_MAILEI = 3
};
bool JDDDZKIGN_TYPE_IsValid(int value);
const JDDDZKIGN_TYPE JDDDZKIGN_TYPE_MIN = JDDDZ_KING_UP;
const JDDDZKIGN_TYPE JDDDZKIGN_TYPE_MAX = JDDDZ_KING_MAILEI;
const int JDDDZKIGN_TYPE_ARRAYSIZE = JDDDZKIGN_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* JDDDZKIGN_TYPE_descriptor();
inline const ::std::string& JDDDZKIGN_TYPE_Name(JDDDZKIGN_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    JDDDZKIGN_TYPE_descriptor(), value);
}
inline bool JDDDZKIGN_TYPE_Parse(
    const ::std::string& name, JDDDZKIGN_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JDDDZKIGN_TYPE>(
    JDDDZKIGN_TYPE_descriptor(), name, value);
}
enum JDDDZBROKEN_TYPE {
  JDDDZ_BT_MASTER_QUIT = 0,
  JDDDZ_BT_USER_QUIT = 1,
  JDDDZ_BT_BROKEN = 2
};
bool JDDDZBROKEN_TYPE_IsValid(int value);
const JDDDZBROKEN_TYPE JDDDZBROKEN_TYPE_MIN = JDDDZ_BT_MASTER_QUIT;
const JDDDZBROKEN_TYPE JDDDZBROKEN_TYPE_MAX = JDDDZ_BT_BROKEN;
const int JDDDZBROKEN_TYPE_ARRAYSIZE = JDDDZBROKEN_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* JDDDZBROKEN_TYPE_descriptor();
inline const ::std::string& JDDDZBROKEN_TYPE_Name(JDDDZBROKEN_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    JDDDZBROKEN_TYPE_descriptor(), value);
}
inline bool JDDDZBROKEN_TYPE_Parse(
    const ::std::string& name, JDDDZBROKEN_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JDDDZBROKEN_TYPE>(
    JDDDZBROKEN_TYPE_descriptor(), name, value);
}
enum JDDDZBROKEN_OPERATE {
  JDDDZ_BO_DISAGREE = 0,
  JDDDZ_BO_AGREE = 1
};
bool JDDDZBROKEN_OPERATE_IsValid(int value);
const JDDDZBROKEN_OPERATE JDDDZBROKEN_OPERATE_MIN = JDDDZ_BO_DISAGREE;
const JDDDZBROKEN_OPERATE JDDDZBROKEN_OPERATE_MAX = JDDDZ_BO_AGREE;
const int JDDDZBROKEN_OPERATE_ARRAYSIZE = JDDDZBROKEN_OPERATE_MAX + 1;

const ::google::protobuf::EnumDescriptor* JDDDZBROKEN_OPERATE_descriptor();
inline const ::std::string& JDDDZBROKEN_OPERATE_Name(JDDDZBROKEN_OPERATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    JDDDZBROKEN_OPERATE_descriptor(), value);
}
inline bool JDDDZBROKEN_OPERATE_Parse(
    const ::std::string& name, JDDDZBROKEN_OPERATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JDDDZBROKEN_OPERATE>(
    JDDDZBROKEN_OPERATE_descriptor(), name, value);
}
enum JDDDZBROKEN_CODE {
  JDDDZ_BC_SUCCESS = 0,
  JDDDZ_BC_DISAGREE = 1,
  JDDDZ_BC_QUIT_SUCCESS = 2,
  JDDDZ_BC_EXCEPTION = 3
};
bool JDDDZBROKEN_CODE_IsValid(int value);
const JDDDZBROKEN_CODE JDDDZBROKEN_CODE_MIN = JDDDZ_BC_SUCCESS;
const JDDDZBROKEN_CODE JDDDZBROKEN_CODE_MAX = JDDDZ_BC_EXCEPTION;
const int JDDDZBROKEN_CODE_ARRAYSIZE = JDDDZBROKEN_CODE_MAX + 1;

const ::google::protobuf::EnumDescriptor* JDDDZBROKEN_CODE_descriptor();
inline const ::std::string& JDDDZBROKEN_CODE_Name(JDDDZBROKEN_CODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    JDDDZBROKEN_CODE_descriptor(), value);
}
inline bool JDDDZBROKEN_CODE_Parse(
    const ::std::string& name, JDDDZBROKEN_CODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JDDDZBROKEN_CODE>(
    JDDDZBROKEN_CODE_descriptor(), name, value);
}
// ===================================================================

class ProJDDDZGameStatusResponse : public ::google::protobuf::Message {
 public:
  ProJDDDZGameStatusResponse();
  virtual ~ProJDDDZGameStatusResponse();

  ProJDDDZGameStatusResponse(const ProJDDDZGameStatusResponse& from);

  inline ProJDDDZGameStatusResponse& operator=(const ProJDDDZGameStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameStatusResponse& default_instance();

  void Swap(ProJDDDZGameStatusResponse* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameStatusResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameStatusResponse& from);
  void MergeFrom(const ProJDDDZGameStatusResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameStatusResponse_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameStatusResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameStatusResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameStatusResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameStatusResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameStatusResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameStatusResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameStatusResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameStatusResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .JDDDZGameState status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::JDDDZGameState status() const;
  inline void set_status(::JDDDZGameState value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameStatusResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameStatusResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameDeskInfoResponse : public ::google::protobuf::Message {
 public:
  ProJDDDZGameDeskInfoResponse();
  virtual ~ProJDDDZGameDeskInfoResponse();

  ProJDDDZGameDeskInfoResponse(const ProJDDDZGameDeskInfoResponse& from);

  inline ProJDDDZGameDeskInfoResponse& operator=(const ProJDDDZGameDeskInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameDeskInfoResponse& default_instance();

  void Swap(ProJDDDZGameDeskInfoResponse* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameDeskInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameDeskInfoResponse& from);
  void MergeFrom(const ProJDDDZGameDeskInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameDeskInfoResponse_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameDeskInfoResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameDeskInfoResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameDeskInfoResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameDeskInfoResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameDeskInfoResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameDeskInfoResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameDeskInfoResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameDeskInfoResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 CellScore = 2;
  inline bool has_cellscore() const;
  inline void clear_cellscore();
  static const int kCellScoreFieldNumber = 2;
  inline ::google::protobuf::int32 cellscore() const;
  inline void set_cellscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameDeskInfoResponse)
 private:
  inline void set_has_cellscore();
  inline void clear_has_cellscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 cellscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameDeskInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameReadyNotify : public ::google::protobuf::Message {
 public:
  ProJDDDZGameReadyNotify();
  virtual ~ProJDDDZGameReadyNotify();

  ProJDDDZGameReadyNotify(const ProJDDDZGameReadyNotify& from);

  inline ProJDDDZGameReadyNotify& operator=(const ProJDDDZGameReadyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameReadyNotify& default_instance();

  void Swap(ProJDDDZGameReadyNotify* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameReadyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameReadyNotify& from);
  void MergeFrom(const ProJDDDZGameReadyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameReadyNotify_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameReadyNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameReadyNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameReadyNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameReadyNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameReadyNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameReadyNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameReadyNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameReadyNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameReadyNotify)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameReadyNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameReadyRequest : public ::google::protobuf::Message {
 public:
  ProJDDDZGameReadyRequest();
  virtual ~ProJDDDZGameReadyRequest();

  ProJDDDZGameReadyRequest(const ProJDDDZGameReadyRequest& from);

  inline ProJDDDZGameReadyRequest& operator=(const ProJDDDZGameReadyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameReadyRequest& default_instance();

  void Swap(ProJDDDZGameReadyRequest* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameReadyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameReadyRequest& from);
  void MergeFrom(const ProJDDDZGameReadyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameReadyRequest_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameReadyRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameReadyRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameReadyRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameReadyRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameReadyRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameReadyRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameReadyRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameReadyRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameReadyRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameReadyRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameReadyResponse : public ::google::protobuf::Message {
 public:
  ProJDDDZGameReadyResponse();
  virtual ~ProJDDDZGameReadyResponse();

  ProJDDDZGameReadyResponse(const ProJDDDZGameReadyResponse& from);

  inline ProJDDDZGameReadyResponse& operator=(const ProJDDDZGameReadyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameReadyResponse& default_instance();

  void Swap(ProJDDDZGameReadyResponse* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameReadyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameReadyResponse& from);
  void MergeFrom(const ProJDDDZGameReadyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameReadyResponse_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameReadyResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameReadyResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameReadyResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameReadyResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameReadyResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameReadyResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameReadyResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameReadyResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool isMingPai = 3;
  inline bool has_ismingpai() const;
  inline void clear_ismingpai();
  static const int kIsMingPaiFieldNumber = 3;
  inline bool ismingpai() const;
  inline void set_ismingpai(bool value);

  // optional int32 MingPaiTag = 4;
  inline bool has_mingpaitag() const;
  inline void clear_mingpaitag();
  static const int kMingPaiTagFieldNumber = 4;
  inline ::google::protobuf::int32 mingpaitag() const;
  inline void set_mingpaitag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameReadyResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_ismingpai();
  inline void clear_has_ismingpai();
  inline void set_has_mingpaitag();
  inline void clear_has_mingpaitag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  bool ismingpai_;
  ::google::protobuf::int32 mingpaitag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameReadyResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameStart : public ::google::protobuf::Message {
 public:
  ProJDDDZGameStart();
  virtual ~ProJDDDZGameStart();

  ProJDDDZGameStart(const ProJDDDZGameStart& from);

  inline ProJDDDZGameStart& operator=(const ProJDDDZGameStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameStart& default_instance();

  void Swap(ProJDDDZGameStart* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameStart& from);
  void MergeFrom(const ProJDDDZGameStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameStart_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameStart_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameStart_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameStart_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameStart_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameStart_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameStart_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameStart_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameStart_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 bankerseat = 2;
  inline bool has_bankerseat() const;
  inline void clear_bankerseat();
  static const int kBankerseatFieldNumber = 2;
  inline ::google::protobuf::int32 bankerseat() const;
  inline void set_bankerseat(::google::protobuf::int32 value);

  // optional int32 gamecount = 3;
  inline bool has_gamecount() const;
  inline void clear_gamecount();
  static const int kGamecountFieldNumber = 3;
  inline ::google::protobuf::int32 gamecount() const;
  inline void set_gamecount(::google::protobuf::int32 value);

  // optional int32 outCardtimes = 4;
  inline bool has_outcardtimes() const;
  inline void clear_outcardtimes();
  static const int kOutCardtimesFieldNumber = 4;
  inline ::google::protobuf::int32 outcardtimes() const;
  inline void set_outcardtimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameStart)
 private:
  inline void set_has_bankerseat();
  inline void clear_has_bankerseat();
  inline void set_has_gamecount();
  inline void clear_has_gamecount();
  inline void set_has_outcardtimes();
  inline void clear_has_outcardtimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bankerseat_;
  ::google::protobuf::int32 gamecount_;
  ::google::protobuf::int32 outcardtimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameStart* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameDiceNotify : public ::google::protobuf::Message {
 public:
  ProJDDDZGameDiceNotify();
  virtual ~ProJDDDZGameDiceNotify();

  ProJDDDZGameDiceNotify(const ProJDDDZGameDiceNotify& from);

  inline ProJDDDZGameDiceNotify& operator=(const ProJDDDZGameDiceNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameDiceNotify& default_instance();

  void Swap(ProJDDDZGameDiceNotify* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameDiceNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameDiceNotify& from);
  void MergeFrom(const ProJDDDZGameDiceNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameDiceNotify_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameDiceNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameDiceNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameDiceNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameDiceNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameDiceNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameDiceNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameDiceNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameDiceNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 dicecount = 4;
  inline bool has_dicecount() const;
  inline void clear_dicecount();
  static const int kDicecountFieldNumber = 4;
  inline ::google::protobuf::int32 dicecount() const;
  inline void set_dicecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameDiceNotify)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_dicecount();
  inline void clear_has_dicecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 dicecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameDiceNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameDiceRequest : public ::google::protobuf::Message {
 public:
  ProJDDDZGameDiceRequest();
  virtual ~ProJDDDZGameDiceRequest();

  ProJDDDZGameDiceRequest(const ProJDDDZGameDiceRequest& from);

  inline ProJDDDZGameDiceRequest& operator=(const ProJDDDZGameDiceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameDiceRequest& default_instance();

  void Swap(ProJDDDZGameDiceRequest* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameDiceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameDiceRequest& from);
  void MergeFrom(const ProJDDDZGameDiceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameDiceRequest_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameDiceRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameDiceRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameDiceRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameDiceRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameDiceRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameDiceRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameDiceRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameDiceRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 dicecount = 3;
  inline bool has_dicecount() const;
  inline void clear_dicecount();
  static const int kDicecountFieldNumber = 3;
  inline ::google::protobuf::int32 dicecount() const;
  inline void set_dicecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameDiceRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_dicecount();
  inline void clear_has_dicecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 dicecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameDiceRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameDiceResult : public ::google::protobuf::Message {
 public:
  ProJDDDZGameDiceResult();
  virtual ~ProJDDDZGameDiceResult();

  ProJDDDZGameDiceResult(const ProJDDDZGameDiceResult& from);

  inline ProJDDDZGameDiceResult& operator=(const ProJDDDZGameDiceResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameDiceResult& default_instance();

  void Swap(ProJDDDZGameDiceResult* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameDiceResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameDiceResult& from);
  void MergeFrom(const ProJDDDZGameDiceResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameDiceResult_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameDiceResult_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameDiceResult_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameDiceResult_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameDiceResult_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameDiceResult_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameDiceResult_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameDiceResult_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameDiceResult_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 result = 3;
  inline int result_size() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::int32 result(int index) const;
  inline void set_result(int index, ::google::protobuf::int32 value);
  inline void add_result(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      result() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_result();

  // optional int32 dicecount = 4;
  inline bool has_dicecount() const;
  inline void clear_dicecount();
  static const int kDicecountFieldNumber = 4;
  inline ::google::protobuf::int32 dicecount() const;
  inline void set_dicecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameDiceResult)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_dicecount();
  inline void clear_has_dicecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > result_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 dicecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameDiceResult* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameSendMahs : public ::google::protobuf::Message {
 public:
  ProJDDDZGameSendMahs();
  virtual ~ProJDDDZGameSendMahs();

  ProJDDDZGameSendMahs(const ProJDDDZGameSendMahs& from);

  inline ProJDDDZGameSendMahs& operator=(const ProJDDDZGameSendMahs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameSendMahs& default_instance();

  void Swap(ProJDDDZGameSendMahs* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameSendMahs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameSendMahs& from);
  void MergeFrom(const ProJDDDZGameSendMahs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameSendMahs_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameSendMahs_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameSendMahs_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameSendMahs_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameSendMahs_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameSendMahs_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameSendMahs_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameSendMahs_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameSendMahs_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated .JDDDZMahList cbHandCardData = 3;
  inline int cbhandcarddata_size() const;
  inline void clear_cbhandcarddata();
  static const int kCbHandCardDataFieldNumber = 3;
  inline const ::JDDDZMahList& cbhandcarddata(int index) const;
  inline ::JDDDZMahList* mutable_cbhandcarddata(int index);
  inline ::JDDDZMahList* add_cbhandcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::JDDDZMahList >&
      cbhandcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::JDDDZMahList >*
      mutable_cbhandcarddata();

  // repeated int32 mahscount = 4;
  inline int mahscount_size() const;
  inline void clear_mahscount();
  static const int kMahscountFieldNumber = 4;
  inline ::google::protobuf::int32 mahscount(int index) const;
  inline void set_mahscount(int index, ::google::protobuf::int32 value);
  inline void add_mahscount(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mahscount() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mahscount();

  // optional int32 cbLeftCount = 5;
  inline bool has_cbleftcount() const;
  inline void clear_cbleftcount();
  static const int kCbLeftCountFieldNumber = 5;
  inline ::google::protobuf::int32 cbleftcount() const;
  inline void set_cbleftcount(::google::protobuf::int32 value);

  // optional int32 offlineTag = 6;
  inline bool has_offlinetag() const;
  inline void clear_offlinetag();
  static const int kOfflineTagFieldNumber = 6;
  inline ::google::protobuf::int32 offlinetag() const;
  inline void set_offlinetag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameSendMahs)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_cbleftcount();
  inline void clear_has_cbleftcount();
  inline void set_has_offlinetag();
  inline void clear_has_offlinetag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::JDDDZMahList > cbhandcarddata_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 cbleftcount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mahscount_;
  ::google::protobuf::int32 offlinetag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameSendMahs* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameKingData : public ::google::protobuf::Message {
 public:
  ProJDDDZGameKingData();
  virtual ~ProJDDDZGameKingData();

  ProJDDDZGameKingData(const ProJDDDZGameKingData& from);

  inline ProJDDDZGameKingData& operator=(const ProJDDDZGameKingData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameKingData& default_instance();

  void Swap(ProJDDDZGameKingData* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameKingData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameKingData& from);
  void MergeFrom(const ProJDDDZGameKingData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameKingData_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameKingData_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameKingData_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameKingData_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameKingData_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameKingData_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameKingData_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameKingData_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameKingData_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 mahs = 3;
  inline int mahs_size() const;
  inline void clear_mahs();
  static const int kMahsFieldNumber = 3;
  inline ::google::protobuf::int32 mahs(int index) const;
  inline void set_mahs(int index, ::google::protobuf::int32 value);
  inline void add_mahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mahs();

  // repeated int32 downKingScore = 4;
  inline int downkingscore_size() const;
  inline void clear_downkingscore();
  static const int kDownKingScoreFieldNumber = 4;
  inline ::google::protobuf::int32 downkingscore(int index) const;
  inline void set_downkingscore(int index, ::google::protobuf::int32 value);
  inline void add_downkingscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      downkingscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_downkingscore();

  // repeated int32 kingcount = 5;
  inline int kingcount_size() const;
  inline void clear_kingcount();
  static const int kKingcountFieldNumber = 5;
  inline ::google::protobuf::int32 kingcount(int index) const;
  inline void set_kingcount(int index, ::google::protobuf::int32 value);
  inline void add_kingcount(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      kingcount() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_kingcount();

  // repeated int32 viceking = 6;
  inline int viceking_size() const;
  inline void clear_viceking();
  static const int kVicekingFieldNumber = 6;
  inline ::google::protobuf::int32 viceking(int index) const;
  inline void set_viceking(int index, ::google::protobuf::int32 value);
  inline void add_viceking(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      viceking() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_viceking();

  // optional .JDDDZSEND_TYPE notify_type = 7 [default = JDDDZ_NORMAL_SEND];
  inline bool has_notify_type() const;
  inline void clear_notify_type();
  static const int kNotifyTypeFieldNumber = 7;
  inline ::JDDDZSEND_TYPE notify_type() const;
  inline void set_notify_type(::JDDDZSEND_TYPE value);

  // optional .JDDDZKIGN_TYPE king_type = 8 [default = JDDDZ_KING_UP];
  inline bool has_king_type() const;
  inline void clear_king_type();
  static const int kKingTypeFieldNumber = 8;
  inline ::JDDDZKIGN_TYPE king_type() const;
  inline void set_king_type(::JDDDZKIGN_TYPE value);

  // repeated int32 cbChongGuang = 9;
  inline int cbchongguang_size() const;
  inline void clear_cbchongguang();
  static const int kCbChongGuangFieldNumber = 9;
  inline ::google::protobuf::int32 cbchongguang(int index) const;
  inline void set_cbchongguang(int index, ::google::protobuf::int32 value);
  inline void add_cbchongguang(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbchongguang() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbchongguang();

  // repeated int32 cbBaWangKing = 10;
  inline int cbbawangking_size() const;
  inline void clear_cbbawangking();
  static const int kCbBaWangKingFieldNumber = 10;
  inline ::google::protobuf::int32 cbbawangking(int index) const;
  inline void set_cbbawangking(int index, ::google::protobuf::int32 value);
  inline void add_cbbawangking(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbbawangking() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbbawangking();

  // @@protoc_insertion_point(class_scope:ProJDDDZGameKingData)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_notify_type();
  inline void clear_has_notify_type();
  inline void set_has_king_type();
  inline void clear_has_king_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mahs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > downkingscore_;
  ::google::protobuf::int32 seat_;
  int notify_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > kingcount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > viceking_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbchongguang_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbbawangking_;
  int king_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameKingData* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameOutMahsResponse : public ::google::protobuf::Message {
 public:
  ProJDDDZGameOutMahsResponse();
  virtual ~ProJDDDZGameOutMahsResponse();

  ProJDDDZGameOutMahsResponse(const ProJDDDZGameOutMahsResponse& from);

  inline ProJDDDZGameOutMahsResponse& operator=(const ProJDDDZGameOutMahsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameOutMahsResponse& default_instance();

  void Swap(ProJDDDZGameOutMahsResponse* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameOutMahsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameOutMahsResponse& from);
  void MergeFrom(const ProJDDDZGameOutMahsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameOutMahsResponse_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameOutMahsResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameOutMahsResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameOutMahsResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameOutMahsResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameOutMahsResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameOutMahsResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameOutMahsResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameOutMahsResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 outMahs = 3;
  inline int outmahs_size() const;
  inline void clear_outmahs();
  static const int kOutMahsFieldNumber = 3;
  inline ::google::protobuf::int32 outmahs(int index) const;
  inline void set_outmahs(int index, ::google::protobuf::int32 value);
  inline void add_outmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      outmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_outmahs();

  // repeated int32 handmahs = 4;
  inline int handmahs_size() const;
  inline void clear_handmahs();
  static const int kHandmahsFieldNumber = 4;
  inline ::google::protobuf::int32 handmahs(int index) const;
  inline void set_handmahs(int index, ::google::protobuf::int32 value);
  inline void add_handmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      handmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_handmahs();

  // optional int32 cardCount = 5;
  inline bool has_cardcount() const;
  inline void clear_cardcount();
  static const int kCardCountFieldNumber = 5;
  inline ::google::protobuf::int32 cardcount() const;
  inline void set_cardcount(::google::protobuf::int32 value);

  // optional int32 cardType = 6;
  inline bool has_cardtype() const;
  inline void clear_cardtype();
  static const int kCardTypeFieldNumber = 6;
  inline ::google::protobuf::int32 cardtype() const;
  inline void set_cardtype(::google::protobuf::int32 value);

  // repeated int32 noChangeMahs = 7;
  inline int nochangemahs_size() const;
  inline void clear_nochangemahs();
  static const int kNoChangeMahsFieldNumber = 7;
  inline ::google::protobuf::int32 nochangemahs(int index) const;
  inline void set_nochangemahs(int index, ::google::protobuf::int32 value);
  inline void add_nochangemahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nochangemahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nochangemahs();

  // @@protoc_insertion_point(class_scope:ProJDDDZGameOutMahsResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_cardcount();
  inline void clear_has_cardcount();
  inline void set_has_cardtype();
  inline void clear_has_cardtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > outmahs_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 cardcount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > handmahs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nochangemahs_;
  ::google::protobuf::int32 cardtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameOutMahsResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameTimerPower : public ::google::protobuf::Message {
 public:
  ProJDDDZGameTimerPower();
  virtual ~ProJDDDZGameTimerPower();

  ProJDDDZGameTimerPower(const ProJDDDZGameTimerPower& from);

  inline ProJDDDZGameTimerPower& operator=(const ProJDDDZGameTimerPower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameTimerPower& default_instance();

  void Swap(ProJDDDZGameTimerPower* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameTimerPower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameTimerPower& from);
  void MergeFrom(const ProJDDDZGameTimerPower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameTimerPower_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameTimerPower_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameTimerPower_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameTimerPower_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameTimerPower_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameTimerPower_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameTimerPower_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameTimerPower_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameTimerPower_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 outcardTime = 4;
  inline bool has_outcardtime() const;
  inline void clear_outcardtime();
  static const int kOutcardTimeFieldNumber = 4;
  inline ::google::protobuf::int32 outcardtime() const;
  inline void set_outcardtime(::google::protobuf::int32 value);

  // optional int32 lastCardType = 5;
  inline bool has_lastcardtype() const;
  inline void clear_lastcardtype();
  static const int kLastCardTypeFieldNumber = 5;
  inline ::google::protobuf::int32 lastcardtype() const;
  inline void set_lastcardtype(::google::protobuf::int32 value);

  // optional int32 lastPoint = 6;
  inline bool has_lastpoint() const;
  inline void clear_lastpoint();
  static const int kLastPointFieldNumber = 6;
  inline ::google::protobuf::int32 lastpoint() const;
  inline void set_lastpoint(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameTimerPower)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_outcardtime();
  inline void clear_has_outcardtime();
  inline void set_has_lastcardtype();
  inline void clear_has_lastcardtype();
  inline void set_has_lastpoint();
  inline void clear_has_lastpoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 outcardtime_;
  ::google::protobuf::int32 lastcardtype_;
  ::google::protobuf::int32 lastpoint_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameTimerPower* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameOperateNotify : public ::google::protobuf::Message {
 public:
  ProJDDDZGameOperateNotify();
  virtual ~ProJDDDZGameOperateNotify();

  ProJDDDZGameOperateNotify(const ProJDDDZGameOperateNotify& from);

  inline ProJDDDZGameOperateNotify& operator=(const ProJDDDZGameOperateNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameOperateNotify& default_instance();

  void Swap(ProJDDDZGameOperateNotify* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameOperateNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameOperateNotify& from);
  void MergeFrom(const ProJDDDZGameOperateNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameOperateNotify_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameOperateNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameOperateNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameOperateNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameOperateNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameOperateNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameOperateNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameOperateNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameOperateNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 resumeSeat = 2;
  inline bool has_resumeseat() const;
  inline void clear_resumeseat();
  static const int kResumeSeatFieldNumber = 2;
  inline ::google::protobuf::int32 resumeseat() const;
  inline void set_resumeseat(::google::protobuf::int32 value);

  // optional int32 ActionMask = 3;
  inline bool has_actionmask() const;
  inline void clear_actionmask();
  static const int kActionMaskFieldNumber = 3;
  inline ::google::protobuf::int32 actionmask() const;
  inline void set_actionmask(::google::protobuf::int32 value);

  // optional int32 ActionCard = 4;
  inline bool has_actioncard() const;
  inline void clear_actioncard();
  static const int kActionCardFieldNumber = 4;
  inline ::google::protobuf::int32 actioncard() const;
  inline void set_actioncard(::google::protobuf::int32 value);

  // optional int32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 operateseat = 6;
  inline bool has_operateseat() const;
  inline void clear_operateseat();
  static const int kOperateseatFieldNumber = 6;
  inline ::google::protobuf::int32 operateseat() const;
  inline void set_operateseat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameOperateNotify)
 private:
  inline void set_has_resumeseat();
  inline void clear_has_resumeseat();
  inline void set_has_actionmask();
  inline void clear_has_actionmask();
  inline void set_has_actioncard();
  inline void clear_has_actioncard();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_operateseat();
  inline void clear_has_operateseat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 resumeseat_;
  ::google::protobuf::int32 actionmask_;
  ::google::protobuf::int32 actioncard_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 operateseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameOperateNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameOperateResult : public ::google::protobuf::Message {
 public:
  ProJDDDZGameOperateResult();
  virtual ~ProJDDDZGameOperateResult();

  ProJDDDZGameOperateResult(const ProJDDDZGameOperateResult& from);

  inline ProJDDDZGameOperateResult& operator=(const ProJDDDZGameOperateResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameOperateResult& default_instance();

  void Swap(ProJDDDZGameOperateResult* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameOperateResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameOperateResult& from);
  void MergeFrom(const ProJDDDZGameOperateResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameOperateResult_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameOperateResult_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameOperateResult_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameOperateResult_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameOperateResult_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameOperateResult_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameOperateResult_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameOperateResult_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameOperateResult_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 wOperateUser = 2;
  inline bool has_woperateuser() const;
  inline void clear_woperateuser();
  static const int kWOperateUserFieldNumber = 2;
  inline ::google::protobuf::int32 woperateuser() const;
  inline void set_woperateuser(::google::protobuf::int32 value);

  // optional int32 wProvideUser = 3;
  inline bool has_wprovideuser() const;
  inline void clear_wprovideuser();
  static const int kWProvideUserFieldNumber = 3;
  inline ::google::protobuf::int32 wprovideuser() const;
  inline void set_wprovideuser(::google::protobuf::int32 value);

  // optional int32 wOperateCode = 4;
  inline bool has_woperatecode() const;
  inline void clear_woperatecode();
  static const int kWOperateCodeFieldNumber = 4;
  inline ::google::protobuf::int32 woperatecode() const;
  inline void set_woperatecode(::google::protobuf::int32 value);

  // optional int32 cbOperateCard = 5;
  inline bool has_cboperatecard() const;
  inline void clear_cboperatecard();
  static const int kCbOperateCardFieldNumber = 5;
  inline ::google::protobuf::int32 cboperatecard() const;
  inline void set_cboperatecard(::google::protobuf::int32 value);

  // repeated int32 handmahs = 6;
  inline int handmahs_size() const;
  inline void clear_handmahs();
  static const int kHandmahsFieldNumber = 6;
  inline ::google::protobuf::int32 handmahs(int index) const;
  inline void set_handmahs(int index, ::google::protobuf::int32 value);
  inline void add_handmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      handmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_handmahs();

  // optional int32 handcount = 7;
  inline bool has_handcount() const;
  inline void clear_handcount();
  static const int kHandcountFieldNumber = 7;
  inline ::google::protobuf::int32 handcount() const;
  inline void set_handcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameOperateResult)
 private:
  inline void set_has_woperateuser();
  inline void clear_has_woperateuser();
  inline void set_has_wprovideuser();
  inline void clear_has_wprovideuser();
  inline void set_has_woperatecode();
  inline void clear_has_woperatecode();
  inline void set_has_cboperatecard();
  inline void clear_has_cboperatecard();
  inline void set_has_handcount();
  inline void clear_has_handcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 woperateuser_;
  ::google::protobuf::int32 wprovideuser_;
  ::google::protobuf::int32 woperatecode_;
  ::google::protobuf::int32 cboperatecard_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > handmahs_;
  ::google::protobuf::int32 handcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameOperateResult* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameOperateRequest : public ::google::protobuf::Message {
 public:
  ProJDDDZGameOperateRequest();
  virtual ~ProJDDDZGameOperateRequest();

  ProJDDDZGameOperateRequest(const ProJDDDZGameOperateRequest& from);

  inline ProJDDDZGameOperateRequest& operator=(const ProJDDDZGameOperateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameOperateRequest& default_instance();

  void Swap(ProJDDDZGameOperateRequest* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameOperateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameOperateRequest& from);
  void MergeFrom(const ProJDDDZGameOperateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameOperateRequest_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameOperateRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameOperateRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameOperateRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameOperateRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameOperateRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameOperateRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameOperateRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameOperateRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 wOperateCode = 3;
  inline bool has_woperatecode() const;
  inline void clear_woperatecode();
  static const int kWOperateCodeFieldNumber = 3;
  inline ::google::protobuf::int32 woperatecode() const;
  inline void set_woperatecode(::google::protobuf::int32 value);

  // optional int32 cbOperateCard = 4;
  inline bool has_cboperatecard() const;
  inline void clear_cboperatecard();
  static const int kCbOperateCardFieldNumber = 4;
  inline ::google::protobuf::int32 cboperatecard() const;
  inline void set_cboperatecard(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameOperateRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_woperatecode();
  inline void clear_has_woperatecode();
  inline void set_has_cboperatecard();
  inline void clear_has_cboperatecard();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 woperatecode_;
  ::google::protobuf::int32 cboperatecard_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameOperateRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameTrust : public ::google::protobuf::Message {
 public:
  ProJDDDZGameTrust();
  virtual ~ProJDDDZGameTrust();

  ProJDDDZGameTrust(const ProJDDDZGameTrust& from);

  inline ProJDDDZGameTrust& operator=(const ProJDDDZGameTrust& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameTrust& default_instance();

  void Swap(ProJDDDZGameTrust* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameTrust* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameTrust& from);
  void MergeFrom(const ProJDDDZGameTrust& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameTrust_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameTrust_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameTrust_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameTrust_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameTrust_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameTrust_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameTrust_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameTrust_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameTrust_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool isTrust = 3;
  inline bool has_istrust() const;
  inline void clear_istrust();
  static const int kIsTrustFieldNumber = 3;
  inline bool istrust() const;
  inline void set_istrust(bool value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameTrust)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_istrust();
  inline void clear_has_istrust();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  bool istrust_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameTrust* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameOutMahRequest : public ::google::protobuf::Message {
 public:
  ProJDDDZGameOutMahRequest();
  virtual ~ProJDDDZGameOutMahRequest();

  ProJDDDZGameOutMahRequest(const ProJDDDZGameOutMahRequest& from);

  inline ProJDDDZGameOutMahRequest& operator=(const ProJDDDZGameOutMahRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameOutMahRequest& default_instance();

  void Swap(ProJDDDZGameOutMahRequest* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameOutMahRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameOutMahRequest& from);
  void MergeFrom(const ProJDDDZGameOutMahRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameOutMahRequest_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameOutMahRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameOutMahRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameOutMahRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameOutMahRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameOutMahRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameOutMahRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameOutMahRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameOutMahRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 outMahs = 3;
  inline int outmahs_size() const;
  inline void clear_outmahs();
  static const int kOutMahsFieldNumber = 3;
  inline ::google::protobuf::int32 outmahs(int index) const;
  inline void set_outmahs(int index, ::google::protobuf::int32 value);
  inline void add_outmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      outmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_outmahs();

  // repeated int32 noChangeMahs = 4;
  inline int nochangemahs_size() const;
  inline void clear_nochangemahs();
  static const int kNoChangeMahsFieldNumber = 4;
  inline ::google::protobuf::int32 nochangemahs(int index) const;
  inline void set_nochangemahs(int index, ::google::protobuf::int32 value);
  inline void add_nochangemahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nochangemahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nochangemahs();

  // @@protoc_insertion_point(class_scope:ProJDDDZGameOutMahRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > outmahs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nochangemahs_;
  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameOutMahRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameCatchCard : public ::google::protobuf::Message {
 public:
  ProJDDDZGameCatchCard();
  virtual ~ProJDDDZGameCatchCard();

  ProJDDDZGameCatchCard(const ProJDDDZGameCatchCard& from);

  inline ProJDDDZGameCatchCard& operator=(const ProJDDDZGameCatchCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameCatchCard& default_instance();

  void Swap(ProJDDDZGameCatchCard* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameCatchCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameCatchCard& from);
  void MergeFrom(const ProJDDDZGameCatchCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameCatchCard_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameCatchCard_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameCatchCard_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameCatchCard_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameCatchCard_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameCatchCard_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameCatchCard_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameCatchCard_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameCatchCard_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 cbCardData = 3;
  inline bool has_cbcarddata() const;
  inline void clear_cbcarddata();
  static const int kCbCardDataFieldNumber = 3;
  inline ::google::protobuf::int32 cbcarddata() const;
  inline void set_cbcarddata(::google::protobuf::int32 value);

  // optional int32 wActionMask = 4;
  inline bool has_wactionmask() const;
  inline void clear_wactionmask();
  static const int kWActionMaskFieldNumber = 4;
  inline ::google::protobuf::int32 wactionmask() const;
  inline void set_wactionmask(::google::protobuf::int32 value);

  // optional bool cbIsNotGang = 5;
  inline bool has_cbisnotgang() const;
  inline void clear_cbisnotgang();
  static const int kCbIsNotGangFieldNumber = 5;
  inline bool cbisnotgang() const;
  inline void set_cbisnotgang(bool value);

  // optional int32 cbLeftCount = 6;
  inline bool has_cbleftcount() const;
  inline void clear_cbleftcount();
  static const int kCbLeftCountFieldNumber = 6;
  inline ::google::protobuf::int32 cbleftcount() const;
  inline void set_cbleftcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameCatchCard)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_cbcarddata();
  inline void clear_has_cbcarddata();
  inline void set_has_wactionmask();
  inline void clear_has_wactionmask();
  inline void set_has_cbisnotgang();
  inline void clear_has_cbisnotgang();
  inline void set_has_cbleftcount();
  inline void clear_has_cbleftcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 cbcarddata_;
  ::google::protobuf::int32 wactionmask_;
  bool cbisnotgang_;
  ::google::protobuf::int32 cbleftcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameCatchCard* default_instance_;
};
// -------------------------------------------------------------------

class JDDDZMahList : public ::google::protobuf::Message {
 public:
  JDDDZMahList();
  virtual ~JDDDZMahList();

  JDDDZMahList(const JDDDZMahList& from);

  inline JDDDZMahList& operator=(const JDDDZMahList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JDDDZMahList& default_instance();

  void Swap(JDDDZMahList* other);

  // implements Message ----------------------------------------------

  JDDDZMahList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JDDDZMahList& from);
  void MergeFrom(const JDDDZMahList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 Mahs = 1;
  inline int mahs_size() const;
  inline void clear_mahs();
  static const int kMahsFieldNumber = 1;
  inline ::google::protobuf::int32 mahs(int index) const;
  inline void set_mahs(int index, ::google::protobuf::int32 value);
  inline void add_mahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mahs();

  // @@protoc_insertion_point(class_scope:JDDDZMahList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mahs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static JDDDZMahList* default_instance_;
};
// -------------------------------------------------------------------

class JDDDZScoreList : public ::google::protobuf::Message {
 public:
  JDDDZScoreList();
  virtual ~JDDDZScoreList();

  JDDDZScoreList(const JDDDZScoreList& from);

  inline JDDDZScoreList& operator=(const JDDDZScoreList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JDDDZScoreList& default_instance();

  void Swap(JDDDZScoreList* other);

  // implements Message ----------------------------------------------

  JDDDZScoreList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JDDDZScoreList& from);
  void MergeFrom(const JDDDZScoreList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 roundScore = 1;
  inline int roundscore_size() const;
  inline void clear_roundscore();
  static const int kRoundScoreFieldNumber = 1;
  inline ::google::protobuf::int32 roundscore(int index) const;
  inline void set_roundscore(int index, ::google::protobuf::int32 value);
  inline void add_roundscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      roundscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_roundscore();

  // @@protoc_insertion_point(class_scope:JDDDZScoreList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > roundscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static JDDDZScoreList* default_instance_;
};
// -------------------------------------------------------------------

class JDDDZAwardList : public ::google::protobuf::Message {
 public:
  JDDDZAwardList();
  virtual ~JDDDZAwardList();

  JDDDZAwardList(const JDDDZAwardList& from);

  inline JDDDZAwardList& operator=(const JDDDZAwardList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JDDDZAwardList& default_instance();

  void Swap(JDDDZAwardList* other);

  // implements Message ----------------------------------------------

  JDDDZAwardList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JDDDZAwardList& from);
  void MergeFrom(const JDDDZAwardList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 CardsData = 2;
  inline int cardsdata_size() const;
  inline void clear_cardsdata();
  static const int kCardsDataFieldNumber = 2;
  inline ::google::protobuf::int32 cardsdata(int index) const;
  inline void set_cardsdata(int index, ::google::protobuf::int32 value);
  inline void add_cardsdata(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cardsdata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cardsdata();

  // optional int32 awardScore = 3;
  inline bool has_awardscore() const;
  inline void clear_awardscore();
  static const int kAwardScoreFieldNumber = 3;
  inline ::google::protobuf::int32 awardscore() const;
  inline void set_awardscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:JDDDZAwardList)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_awardscore();
  inline void clear_has_awardscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cardsdata_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 awardscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static JDDDZAwardList* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameEnd : public ::google::protobuf::Message {
 public:
  ProJDDDZGameEnd();
  virtual ~ProJDDDZGameEnd();

  ProJDDDZGameEnd(const ProJDDDZGameEnd& from);

  inline ProJDDDZGameEnd& operator=(const ProJDDDZGameEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameEnd& default_instance();

  void Swap(ProJDDDZGameEnd* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameEnd& from);
  void MergeFrom(const ProJDDDZGameEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameEnd_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameEnd_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameEnd_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameEnd_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameEnd_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameEnd_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameEnd_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameEnd_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameEnd_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 lGameTax = 2;
  inline bool has_lgametax() const;
  inline void clear_lgametax();
  static const int kLGameTaxFieldNumber = 2;
  inline ::google::protobuf::int32 lgametax() const;
  inline void set_lgametax(::google::protobuf::int32 value);

  // repeated int32 cbChongGuang = 3;
  inline int cbchongguang_size() const;
  inline void clear_cbchongguang();
  static const int kCbChongGuangFieldNumber = 3;
  inline ::google::protobuf::int32 cbchongguang(int index) const;
  inline void set_cbchongguang(int index, ::google::protobuf::int32 value);
  inline void add_cbchongguang(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbchongguang() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbchongguang();

  // repeated int32 cbBaWangKing = 4;
  inline int cbbawangking_size() const;
  inline void clear_cbbawangking();
  static const int kCbBaWangKingFieldNumber = 4;
  inline ::google::protobuf::int32 cbbawangking(int index) const;
  inline void set_cbbawangking(int index, ::google::protobuf::int32 value);
  inline void add_cbbawangking(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbbawangking() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbbawangking();

  // optional int32 wProvideUser = 5;
  inline bool has_wprovideuser() const;
  inline void clear_wprovideuser();
  static const int kWProvideUserFieldNumber = 5;
  inline ::google::protobuf::int32 wprovideuser() const;
  inline void set_wprovideuser(::google::protobuf::int32 value);

  // optional int32 cbChiHuCard = 6;
  inline bool has_cbchihucard() const;
  inline void clear_cbchihucard();
  static const int kCbChiHuCardFieldNumber = 6;
  inline ::google::protobuf::int32 cbchihucard() const;
  inline void set_cbchihucard(::google::protobuf::int32 value);

  // repeated int32 dwChiHuKind = 7;
  inline int dwchihukind_size() const;
  inline void clear_dwchihukind();
  static const int kDwChiHuKindFieldNumber = 7;
  inline ::google::protobuf::int32 dwchihukind(int index) const;
  inline void set_dwchihukind(int index, ::google::protobuf::int32 value);
  inline void add_dwchihukind(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dwchihukind() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dwchihukind();

  // repeated int32 dwChiHuRight = 8;
  inline int dwchihuright_size() const;
  inline void clear_dwchihuright();
  static const int kDwChiHuRightFieldNumber = 8;
  inline ::google::protobuf::int32 dwchihuright(int index) const;
  inline void set_dwchihuright(int index, ::google::protobuf::int32 value);
  inline void add_dwchihuright(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dwchihuright() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dwchihuright();

  // repeated int32 lTotaslGameScore = 9;
  inline int ltotaslgamescore_size() const;
  inline void clear_ltotaslgamescore();
  static const int kLTotaslGameScoreFieldNumber = 9;
  inline ::google::protobuf::int32 ltotaslgamescore(int index) const;
  inline void set_ltotaslgamescore(int index, ::google::protobuf::int32 value);
  inline void add_ltotaslgamescore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ltotaslgamescore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ltotaslgamescore();

  // repeated int32 lCurrentGameScore = 10;
  inline int lcurrentgamescore_size() const;
  inline void clear_lcurrentgamescore();
  static const int kLCurrentGameScoreFieldNumber = 10;
  inline ::google::protobuf::int32 lcurrentgamescore(int index) const;
  inline void set_lcurrentgamescore(int index, ::google::protobuf::int32 value);
  inline void add_lcurrentgamescore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lcurrentgamescore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lcurrentgamescore();

  // repeated int32 lCurrentPointScore = 11;
  inline int lcurrentpointscore_size() const;
  inline void clear_lcurrentpointscore();
  static const int kLCurrentPointScoreFieldNumber = 11;
  inline ::google::protobuf::int32 lcurrentpointscore(int index) const;
  inline void set_lcurrentpointscore(int index, ::google::protobuf::int32 value);
  inline void add_lcurrentpointscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lcurrentpointscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lcurrentpointscore();

  // repeated int32 lAttachScore = 12;
  inline int lattachscore_size() const;
  inline void clear_lattachscore();
  static const int kLAttachScoreFieldNumber = 12;
  inline ::google::protobuf::int32 lattachscore(int index) const;
  inline void set_lattachscore(int index, ::google::protobuf::int32 value);
  inline void add_lattachscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lattachscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lattachscore();

  // repeated .JDDDZMahList cbHandCardData = 13;
  inline int cbhandcarddata_size() const;
  inline void clear_cbhandcarddata();
  static const int kCbHandCardDataFieldNumber = 13;
  inline const ::JDDDZMahList& cbhandcarddata(int index) const;
  inline ::JDDDZMahList* mutable_cbhandcarddata(int index);
  inline ::JDDDZMahList* add_cbhandcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::JDDDZMahList >&
      cbhandcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::JDDDZMahList >*
      mutable_cbhandcarddata();

  // repeated .JDDDZAwardList cbAwardCardData = 14;
  inline int cbawardcarddata_size() const;
  inline void clear_cbawardcarddata();
  static const int kCbAwardCardDataFieldNumber = 14;
  inline const ::JDDDZAwardList& cbawardcarddata(int index) const;
  inline ::JDDDZAwardList* mutable_cbawardcarddata(int index);
  inline ::JDDDZAwardList* add_cbawardcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::JDDDZAwardList >&
      cbawardcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::JDDDZAwardList >*
      mutable_cbawardcarddata();

  // repeated int32 lOnlyWinScore = 15;
  inline int lonlywinscore_size() const;
  inline void clear_lonlywinscore();
  static const int kLOnlyWinScoreFieldNumber = 15;
  inline ::google::protobuf::int32 lonlywinscore(int index) const;
  inline void set_lonlywinscore(int index, ::google::protobuf::int32 value);
  inline void add_lonlywinscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lonlywinscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lonlywinscore();

  // optional bool bRoundEnd = 16;
  inline bool has_broundend() const;
  inline void clear_broundend();
  static const int kBRoundEndFieldNumber = 16;
  inline bool broundend() const;
  inline void set_broundend(bool value);

  // repeated int32 lHuiTouScore = 17;
  inline int lhuitouscore_size() const;
  inline void clear_lhuitouscore();
  static const int kLHuiTouScoreFieldNumber = 17;
  inline ::google::protobuf::int32 lhuitouscore(int index) const;
  inline void set_lhuitouscore(int index, ::google::protobuf::int32 value);
  inline void add_lhuitouscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lhuitouscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lhuitouscore();

  // optional bool bZhuangWin = 18;
  inline bool has_bzhuangwin() const;
  inline void clear_bzhuangwin();
  static const int kBZhuangWinFieldNumber = 18;
  inline bool bzhuangwin() const;
  inline void set_bzhuangwin(bool value);

  // repeated int32 cbJiangMaCardData = 19;
  inline int cbjiangmacarddata_size() const;
  inline void clear_cbjiangmacarddata();
  static const int kCbJiangMaCardDataFieldNumber = 19;
  inline ::google::protobuf::int32 cbjiangmacarddata(int index) const;
  inline void set_cbjiangmacarddata(int index, ::google::protobuf::int32 value);
  inline void add_cbjiangmacarddata(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbjiangmacarddata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbjiangmacarddata();

  // repeated .JDDDZScoreList detailedScores = 20;
  inline int detailedscores_size() const;
  inline void clear_detailedscores();
  static const int kDetailedScoresFieldNumber = 20;
  inline const ::JDDDZScoreList& detailedscores(int index) const;
  inline ::JDDDZScoreList* mutable_detailedscores(int index);
  inline ::JDDDZScoreList* add_detailedscores();
  inline const ::google::protobuf::RepeatedPtrField< ::JDDDZScoreList >&
      detailedscores() const;
  inline ::google::protobuf::RepeatedPtrField< ::JDDDZScoreList >*
      mutable_detailedscores();

  // @@protoc_insertion_point(class_scope:ProJDDDZGameEnd)
 private:
  inline void set_has_lgametax();
  inline void clear_has_lgametax();
  inline void set_has_wprovideuser();
  inline void clear_has_wprovideuser();
  inline void set_has_cbchihucard();
  inline void clear_has_cbchihucard();
  inline void set_has_broundend();
  inline void clear_has_broundend();
  inline void set_has_bzhuangwin();
  inline void clear_has_bzhuangwin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbchongguang_;
  ::google::protobuf::int32 lgametax_;
  ::google::protobuf::int32 wprovideuser_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbbawangking_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dwchihukind_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dwchihuright_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ltotaslgamescore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lcurrentgamescore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lcurrentpointscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lattachscore_;
  ::google::protobuf::RepeatedPtrField< ::JDDDZMahList > cbhandcarddata_;
  ::google::protobuf::int32 cbchihucard_;
  bool broundend_;
  bool bzhuangwin_;
  ::google::protobuf::RepeatedPtrField< ::JDDDZAwardList > cbawardcarddata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lonlywinscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lhuitouscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbjiangmacarddata_;
  ::google::protobuf::RepeatedPtrField< ::JDDDZScoreList > detailedscores_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameEnd* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameQuickSoundRequest : public ::google::protobuf::Message {
 public:
  ProJDDDZGameQuickSoundRequest();
  virtual ~ProJDDDZGameQuickSoundRequest();

  ProJDDDZGameQuickSoundRequest(const ProJDDDZGameQuickSoundRequest& from);

  inline ProJDDDZGameQuickSoundRequest& operator=(const ProJDDDZGameQuickSoundRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameQuickSoundRequest& default_instance();

  void Swap(ProJDDDZGameQuickSoundRequest* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameQuickSoundRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameQuickSoundRequest& from);
  void MergeFrom(const ProJDDDZGameQuickSoundRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameQuickSoundRequest_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameQuickSoundRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameQuickSoundRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameQuickSoundRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameQuickSoundRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameQuickSoundRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameQuickSoundRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameQuickSoundRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameQuickSoundRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 desk_id = 2;
  inline bool has_desk_id() const;
  inline void clear_desk_id();
  static const int kDeskIdFieldNumber = 2;
  inline ::google::protobuf::int32 desk_id() const;
  inline void set_desk_id(::google::protobuf::int32 value);

  // optional int32 seat_id = 3;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 3;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional int32 sound_id = 4;
  inline bool has_sound_id() const;
  inline void clear_sound_id();
  static const int kSoundIdFieldNumber = 4;
  inline ::google::protobuf::int32 sound_id() const;
  inline void set_sound_id(::google::protobuf::int32 value);

  // optional bytes text = 5;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 5;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const void* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameQuickSoundRequest)
 private:
  inline void set_has_desk_id();
  inline void clear_has_desk_id();
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_sound_id();
  inline void clear_has_sound_id();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 desk_id_;
  ::google::protobuf::int32 seat_id_;
  ::std::string* text_;
  ::google::protobuf::int32 sound_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameQuickSoundRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameQuickSoundResponse : public ::google::protobuf::Message {
 public:
  ProJDDDZGameQuickSoundResponse();
  virtual ~ProJDDDZGameQuickSoundResponse();

  ProJDDDZGameQuickSoundResponse(const ProJDDDZGameQuickSoundResponse& from);

  inline ProJDDDZGameQuickSoundResponse& operator=(const ProJDDDZGameQuickSoundResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameQuickSoundResponse& default_instance();

  void Swap(ProJDDDZGameQuickSoundResponse* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameQuickSoundResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameQuickSoundResponse& from);
  void MergeFrom(const ProJDDDZGameQuickSoundResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameQuickSoundResponse_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameQuickSoundResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameQuickSoundResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameQuickSoundResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameQuickSoundResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameQuickSoundResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameQuickSoundResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameQuickSoundResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameQuickSoundResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 desk_id = 2;
  inline bool has_desk_id() const;
  inline void clear_desk_id();
  static const int kDeskIdFieldNumber = 2;
  inline ::google::protobuf::int32 desk_id() const;
  inline void set_desk_id(::google::protobuf::int32 value);

  // optional int32 seat_id = 3;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 3;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional int32 sound_id = 4;
  inline bool has_sound_id() const;
  inline void clear_sound_id();
  static const int kSoundIdFieldNumber = 4;
  inline ::google::protobuf::int32 sound_id() const;
  inline void set_sound_id(::google::protobuf::int32 value);

  // optional bytes text = 5;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 5;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const void* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameQuickSoundResponse)
 private:
  inline void set_has_desk_id();
  inline void clear_has_desk_id();
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_sound_id();
  inline void clear_has_sound_id();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 desk_id_;
  ::google::protobuf::int32 seat_id_;
  ::std::string* text_;
  ::google::protobuf::int32 sound_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameQuickSoundResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameSendDiscardMahs : public ::google::protobuf::Message {
 public:
  ProJDDDZGameSendDiscardMahs();
  virtual ~ProJDDDZGameSendDiscardMahs();

  ProJDDDZGameSendDiscardMahs(const ProJDDDZGameSendDiscardMahs& from);

  inline ProJDDDZGameSendDiscardMahs& operator=(const ProJDDDZGameSendDiscardMahs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameSendDiscardMahs& default_instance();

  void Swap(ProJDDDZGameSendDiscardMahs* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameSendDiscardMahs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameSendDiscardMahs& from);
  void MergeFrom(const ProJDDDZGameSendDiscardMahs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameSendDiscardMahs_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameSendDiscardMahs_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameSendDiscardMahs_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameSendDiscardMahs_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameSendDiscardMahs_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameSendDiscardMahs_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameSendDiscardMahs_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameSendDiscardMahs_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameSendDiscardMahs_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // repeated .JDDDZMahList cbCardData = 3;
  inline int cbcarddata_size() const;
  inline void clear_cbcarddata();
  static const int kCbCardDataFieldNumber = 3;
  inline const ::JDDDZMahList& cbcarddata(int index) const;
  inline ::JDDDZMahList* mutable_cbcarddata(int index);
  inline ::JDDDZMahList* add_cbcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::JDDDZMahList >&
      cbcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::JDDDZMahList >*
      mutable_cbcarddata();

  // optional int32 deskCount = 4;
  inline bool has_deskcount() const;
  inline void clear_deskcount();
  static const int kDeskCountFieldNumber = 4;
  inline ::google::protobuf::int32 deskcount() const;
  inline void set_deskcount(::google::protobuf::int32 value);

  // repeated int32 outCardCount = 5;
  inline int outcardcount_size() const;
  inline void clear_outcardcount();
  static const int kOutCardCountFieldNumber = 5;
  inline ::google::protobuf::int32 outcardcount(int index) const;
  inline void set_outcardcount(int index, ::google::protobuf::int32 value);
  inline void add_outcardcount(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      outcardcount() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_outcardcount();

  // @@protoc_insertion_point(class_scope:ProJDDDZGameSendDiscardMahs)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_deskcount();
  inline void clear_has_deskcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::JDDDZMahList > cbcarddata_;
  ::google::protobuf::int32 seat_id_;
  ::google::protobuf::int32 deskcount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > outcardcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameSendDiscardMahs* default_instance_;
};
// -------------------------------------------------------------------

class JDDDZWeaveItem : public ::google::protobuf::Message {
 public:
  JDDDZWeaveItem();
  virtual ~JDDDZWeaveItem();

  JDDDZWeaveItem(const JDDDZWeaveItem& from);

  inline JDDDZWeaveItem& operator=(const JDDDZWeaveItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JDDDZWeaveItem& default_instance();

  void Swap(JDDDZWeaveItem* other);

  // implements Message ----------------------------------------------

  JDDDZWeaveItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JDDDZWeaveItem& from);
  void MergeFrom(const JDDDZWeaveItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 weaveKind = 1;
  inline bool has_weavekind() const;
  inline void clear_weavekind();
  static const int kWeaveKindFieldNumber = 1;
  inline ::google::protobuf::int32 weavekind() const;
  inline void set_weavekind(::google::protobuf::int32 value);

  // optional int32 centercard = 2;
  inline bool has_centercard() const;
  inline void clear_centercard();
  static const int kCentercardFieldNumber = 2;
  inline ::google::protobuf::int32 centercard() const;
  inline void set_centercard(::google::protobuf::int32 value);

  // optional int32 provideUser = 3;
  inline bool has_provideuser() const;
  inline void clear_provideuser();
  static const int kProvideUserFieldNumber = 3;
  inline ::google::protobuf::int32 provideuser() const;
  inline void set_provideuser(::google::protobuf::int32 value);

  // optional int32 cardsize = 4;
  inline bool has_cardsize() const;
  inline void clear_cardsize();
  static const int kCardsizeFieldNumber = 4;
  inline ::google::protobuf::int32 cardsize() const;
  inline void set_cardsize(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:JDDDZWeaveItem)
 private:
  inline void set_has_weavekind();
  inline void clear_has_weavekind();
  inline void set_has_centercard();
  inline void clear_has_centercard();
  inline void set_has_provideuser();
  inline void clear_has_provideuser();
  inline void set_has_cardsize();
  inline void clear_has_cardsize();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 weavekind_;
  ::google::protobuf::int32 centercard_;
  ::google::protobuf::int32 provideuser_;
  ::google::protobuf::int32 cardsize_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static JDDDZWeaveItem* default_instance_;
};
// -------------------------------------------------------------------

class JDDDZWeaveItems : public ::google::protobuf::Message {
 public:
  JDDDZWeaveItems();
  virtual ~JDDDZWeaveItems();

  JDDDZWeaveItems(const JDDDZWeaveItems& from);

  inline JDDDZWeaveItems& operator=(const JDDDZWeaveItems& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JDDDZWeaveItems& default_instance();

  void Swap(JDDDZWeaveItems* other);

  // implements Message ----------------------------------------------

  JDDDZWeaveItems* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JDDDZWeaveItems& from);
  void MergeFrom(const JDDDZWeaveItems& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .JDDDZWeaveItem items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::JDDDZWeaveItem& items(int index) const;
  inline ::JDDDZWeaveItem* mutable_items(int index);
  inline ::JDDDZWeaveItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::JDDDZWeaveItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::JDDDZWeaveItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:JDDDZWeaveItems)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::JDDDZWeaveItem > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static JDDDZWeaveItems* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameSendActionMahs : public ::google::protobuf::Message {
 public:
  ProJDDDZGameSendActionMahs();
  virtual ~ProJDDDZGameSendActionMahs();

  ProJDDDZGameSendActionMahs(const ProJDDDZGameSendActionMahs& from);

  inline ProJDDDZGameSendActionMahs& operator=(const ProJDDDZGameSendActionMahs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameSendActionMahs& default_instance();

  void Swap(ProJDDDZGameSendActionMahs* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameSendActionMahs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameSendActionMahs& from);
  void MergeFrom(const ProJDDDZGameSendActionMahs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameSendActionMahs_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameSendActionMahs_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameSendActionMahs_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameSendActionMahs_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameSendActionMahs_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameSendActionMahs_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameSendActionMahs_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameSendActionMahs_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameSendActionMahs_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // repeated .JDDDZWeaveItems weaves = 3;
  inline int weaves_size() const;
  inline void clear_weaves();
  static const int kWeavesFieldNumber = 3;
  inline const ::JDDDZWeaveItems& weaves(int index) const;
  inline ::JDDDZWeaveItems* mutable_weaves(int index);
  inline ::JDDDZWeaveItems* add_weaves();
  inline const ::google::protobuf::RepeatedPtrField< ::JDDDZWeaveItems >&
      weaves() const;
  inline ::google::protobuf::RepeatedPtrField< ::JDDDZWeaveItems >*
      mutable_weaves();

  // @@protoc_insertion_point(class_scope:ProJDDDZGameSendActionMahs)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::JDDDZWeaveItems > weaves_;
  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameSendActionMahs* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameBrokenRequest : public ::google::protobuf::Message {
 public:
  ProJDDDZGameBrokenRequest();
  virtual ~ProJDDDZGameBrokenRequest();

  ProJDDDZGameBrokenRequest(const ProJDDDZGameBrokenRequest& from);

  inline ProJDDDZGameBrokenRequest& operator=(const ProJDDDZGameBrokenRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameBrokenRequest& default_instance();

  void Swap(ProJDDDZGameBrokenRequest* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameBrokenRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameBrokenRequest& from);
  void MergeFrom(const ProJDDDZGameBrokenRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameBrokenRequest_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameBrokenRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameBrokenRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameBrokenRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameBrokenRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameBrokenRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameBrokenRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameBrokenRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameBrokenRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional .JDDDZBROKEN_TYPE type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::JDDDZBROKEN_TYPE type() const;
  inline void set_type(::JDDDZBROKEN_TYPE value);

  // optional int32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameBrokenRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;
  int type_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameBrokenRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameBrokenOperate : public ::google::protobuf::Message {
 public:
  ProJDDDZGameBrokenOperate();
  virtual ~ProJDDDZGameBrokenOperate();

  ProJDDDZGameBrokenOperate(const ProJDDDZGameBrokenOperate& from);

  inline ProJDDDZGameBrokenOperate& operator=(const ProJDDDZGameBrokenOperate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameBrokenOperate& default_instance();

  void Swap(ProJDDDZGameBrokenOperate* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameBrokenOperate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameBrokenOperate& from);
  void MergeFrom(const ProJDDDZGameBrokenOperate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameBrokenOperate_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameBrokenOperate_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameBrokenOperate_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameBrokenOperate_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameBrokenOperate_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameBrokenOperate_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameBrokenOperate_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameBrokenOperate_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameBrokenOperate_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional .JDDDZBROKEN_OPERATE result = 3 [default = JDDDZ_BO_DISAGREE];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::JDDDZBROKEN_OPERATE result() const;
  inline void set_result(::JDDDZBROKEN_OPERATE value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameBrokenOperate)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameBrokenOperate* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameBrokenNotify : public ::google::protobuf::Message {
 public:
  ProJDDDZGameBrokenNotify();
  virtual ~ProJDDDZGameBrokenNotify();

  ProJDDDZGameBrokenNotify(const ProJDDDZGameBrokenNotify& from);

  inline ProJDDDZGameBrokenNotify& operator=(const ProJDDDZGameBrokenNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameBrokenNotify& default_instance();

  void Swap(ProJDDDZGameBrokenNotify* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameBrokenNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameBrokenNotify& from);
  void MergeFrom(const ProJDDDZGameBrokenNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameBrokenNotify_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameBrokenNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameBrokenNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameBrokenNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameBrokenNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameBrokenNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameBrokenNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameBrokenNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameBrokenNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional .JDDDZBROKEN_CODE operate_code = 3 [default = JDDDZ_BC_SUCCESS];
  inline bool has_operate_code() const;
  inline void clear_operate_code();
  static const int kOperateCodeFieldNumber = 3;
  inline ::JDDDZBROKEN_CODE operate_code() const;
  inline void set_operate_code(::JDDDZBROKEN_CODE value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameBrokenNotify)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_operate_code();
  inline void clear_has_operate_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;
  int operate_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameBrokenNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameRuleConfig : public ::google::protobuf::Message {
 public:
  ProJDDDZGameRuleConfig();
  virtual ~ProJDDDZGameRuleConfig();

  ProJDDDZGameRuleConfig(const ProJDDDZGameRuleConfig& from);

  inline ProJDDDZGameRuleConfig& operator=(const ProJDDDZGameRuleConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameRuleConfig& default_instance();

  void Swap(ProJDDDZGameRuleConfig* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameRuleConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameRuleConfig& from);
  void MergeFrom(const ProJDDDZGameRuleConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameRuleConfig_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameRuleConfig_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameRuleConfig_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameRuleConfig_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameRuleConfig_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameRuleConfig_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameRuleConfig_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameRuleConfig_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameRuleConfig_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 game_round = 1;
  inline bool has_game_round() const;
  inline void clear_game_round();
  static const int kGameRoundFieldNumber = 1;
  inline ::google::protobuf::int32 game_round() const;
  inline void set_game_round(::google::protobuf::int32 value);

  // optional int32 need_card = 2;
  inline bool has_need_card() const;
  inline void clear_need_card();
  static const int kNeedCardFieldNumber = 2;
  inline ::google::protobuf::int32 need_card() const;
  inline void set_need_card(::google::protobuf::int32 value);

  // optional bool have_bottom_king = 3;
  inline bool has_have_bottom_king() const;
  inline void clear_have_bottom_king();
  static const int kHaveBottomKingFieldNumber = 3;
  inline bool have_bottom_king() const;
  inline void set_have_bottom_king(bool value);

  // optional bool have_mai_lei = 4;
  inline bool has_have_mai_lei() const;
  inline void clear_have_mai_lei();
  static const int kHaveMaiLeiFieldNumber = 4;
  inline bool have_mai_lei() const;
  inline void set_have_mai_lei(bool value);

  // optional bool hava_hui_tou = 5;
  inline bool has_hava_hui_tou() const;
  inline void clear_hava_hui_tou();
  static const int kHavaHuiTouFieldNumber = 5;
  inline bool hava_hui_tou() const;
  inline void set_hava_hui_tou(bool value);

  // optional int32 nMasterSeat = 6;
  inline bool has_nmasterseat() const;
  inline void clear_nmasterseat();
  static const int kNMasterSeatFieldNumber = 6;
  inline ::google::protobuf::int32 nmasterseat() const;
  inline void set_nmasterseat(::google::protobuf::int32 value);

  // optional int32 current_game_count = 7;
  inline bool has_current_game_count() const;
  inline void clear_current_game_count();
  static const int kCurrentGameCountFieldNumber = 7;
  inline ::google::protobuf::int32 current_game_count() const;
  inline void set_current_game_count(::google::protobuf::int32 value);

  // optional bool have_jianma = 8;
  inline bool has_have_jianma() const;
  inline void clear_have_jianma();
  static const int kHaveJianmaFieldNumber = 8;
  inline bool have_jianma() const;
  inline void set_have_jianma(bool value);

  // optional int32 nChongguanNum = 9;
  inline bool has_nchongguannum() const;
  inline void clear_nchongguannum();
  static const int kNChongguanNumFieldNumber = 9;
  inline ::google::protobuf::int32 nchongguannum() const;
  inline void set_nchongguannum(::google::protobuf::int32 value);

  // optional bool bbawangfanbei = 10;
  inline bool has_bbawangfanbei() const;
  inline void clear_bbawangfanbei();
  static const int kBbawangfanbeiFieldNumber = 10;
  inline bool bbawangfanbei() const;
  inline void set_bbawangfanbei(bool value);

  // optional int32 nPlayerNum = 11;
  inline bool has_nplayernum() const;
  inline void clear_nplayernum();
  static const int kNPlayerNumFieldNumber = 11;
  inline ::google::protobuf::int32 nplayernum() const;
  inline void set_nplayernum(::google::protobuf::int32 value);

  // optional bytes sRoomNum = 12;
  inline bool has_sroomnum() const;
  inline void clear_sroomnum();
  static const int kSRoomNumFieldNumber = 12;
  inline const ::std::string& sroomnum() const;
  inline void set_sroomnum(const ::std::string& value);
  inline void set_sroomnum(const char* value);
  inline void set_sroomnum(const void* value, size_t size);
  inline ::std::string* mutable_sroomnum();
  inline ::std::string* release_sroomnum();
  inline void set_allocated_sroomnum(::std::string* sroomnum);

  // optional bytes sPlayTime = 13;
  inline bool has_splaytime() const;
  inline void clear_splaytime();
  static const int kSPlayTimeFieldNumber = 13;
  inline const ::std::string& splaytime() const;
  inline void set_splaytime(const ::std::string& value);
  inline void set_splaytime(const char* value);
  inline void set_splaytime(const void* value, size_t size);
  inline ::std::string* mutable_splaytime();
  inline ::std::string* release_splaytime();
  inline void set_allocated_splaytime(::std::string* splaytime);

  // optional int32 nselfSeat = 14;
  inline bool has_nselfseat() const;
  inline void clear_nselfseat();
  static const int kNselfSeatFieldNumber = 14;
  inline ::google::protobuf::int32 nselfseat() const;
  inline void set_nselfseat(::google::protobuf::int32 value);

  // optional bool bJingDian = 15;
  inline bool has_bjingdian() const;
  inline void clear_bjingdian();
  static const int kBJingDianFieldNumber = 15;
  inline bool bjingdian() const;
  inline void set_bjingdian(bool value);

  // optional bool bMagicCard = 16;
  inline bool has_bmagiccard() const;
  inline void clear_bmagiccard();
  static const int kBMagicCardFieldNumber = 16;
  inline bool bmagiccard() const;
  inline void set_bmagiccard(bool value);

  // optional bool bMasterThebe = 17;
  inline bool has_bmasterthebe() const;
  inline void clear_bmasterthebe();
  static const int kBMasterThebeFieldNumber = 17;
  inline bool bmasterthebe() const;
  inline void set_bmasterthebe(bool value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameRuleConfig)
 private:
  inline void set_has_game_round();
  inline void clear_has_game_round();
  inline void set_has_need_card();
  inline void clear_has_need_card();
  inline void set_has_have_bottom_king();
  inline void clear_has_have_bottom_king();
  inline void set_has_have_mai_lei();
  inline void clear_has_have_mai_lei();
  inline void set_has_hava_hui_tou();
  inline void clear_has_hava_hui_tou();
  inline void set_has_nmasterseat();
  inline void clear_has_nmasterseat();
  inline void set_has_current_game_count();
  inline void clear_has_current_game_count();
  inline void set_has_have_jianma();
  inline void clear_has_have_jianma();
  inline void set_has_nchongguannum();
  inline void clear_has_nchongguannum();
  inline void set_has_bbawangfanbei();
  inline void clear_has_bbawangfanbei();
  inline void set_has_nplayernum();
  inline void clear_has_nplayernum();
  inline void set_has_sroomnum();
  inline void clear_has_sroomnum();
  inline void set_has_splaytime();
  inline void clear_has_splaytime();
  inline void set_has_nselfseat();
  inline void clear_has_nselfseat();
  inline void set_has_bjingdian();
  inline void clear_has_bjingdian();
  inline void set_has_bmagiccard();
  inline void clear_has_bmagiccard();
  inline void set_has_bmasterthebe();
  inline void clear_has_bmasterthebe();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 game_round_;
  ::google::protobuf::int32 need_card_;
  bool have_bottom_king_;
  bool have_mai_lei_;
  bool hava_hui_tou_;
  bool have_jianma_;
  ::google::protobuf::int32 nmasterseat_;
  ::google::protobuf::int32 current_game_count_;
  ::google::protobuf::int32 nchongguannum_;
  ::std::string* sroomnum_;
  ::google::protobuf::int32 nplayernum_;
  ::google::protobuf::int32 nselfseat_;
  ::std::string* splaytime_;
  bool bbawangfanbei_;
  bool bjingdian_;
  bool bmagiccard_;
  bool bmasterthebe_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameRuleConfig* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameBrokenStatus : public ::google::protobuf::Message {
 public:
  ProJDDDZGameBrokenStatus();
  virtual ~ProJDDDZGameBrokenStatus();

  ProJDDDZGameBrokenStatus(const ProJDDDZGameBrokenStatus& from);

  inline ProJDDDZGameBrokenStatus& operator=(const ProJDDDZGameBrokenStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameBrokenStatus& default_instance();

  void Swap(ProJDDDZGameBrokenStatus* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameBrokenStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameBrokenStatus& from);
  void MergeFrom(const ProJDDDZGameBrokenStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameBrokenStatus_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameBrokenStatus_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameBrokenStatus_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameBrokenStatus_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameBrokenStatus_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameBrokenStatus_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameBrokenStatus_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameBrokenStatus_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameBrokenStatus_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 broken_seat = 1;
  inline bool has_broken_seat() const;
  inline void clear_broken_seat();
  static const int kBrokenSeatFieldNumber = 1;
  inline ::google::protobuf::int32 broken_seat() const;
  inline void set_broken_seat(::google::protobuf::int32 value);

  // repeated bool broken_status = 2;
  inline int broken_status_size() const;
  inline void clear_broken_status();
  static const int kBrokenStatusFieldNumber = 2;
  inline bool broken_status(int index) const;
  inline void set_broken_status(int index, bool value);
  inline void add_broken_status(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      broken_status() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_broken_status();

  // optional int32 left_time = 3;
  inline bool has_left_time() const;
  inline void clear_left_time();
  static const int kLeftTimeFieldNumber = 3;
  inline ::google::protobuf::int32 left_time() const;
  inline void set_left_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameBrokenStatus)
 private:
  inline void set_has_broken_seat();
  inline void clear_has_broken_seat();
  inline void set_has_left_time();
  inline void clear_has_left_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< bool > broken_status_;
  ::google::protobuf::int32 broken_seat_;
  ::google::protobuf::int32 left_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameBrokenStatus* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameDataResp : public ::google::protobuf::Message {
 public:
  ProJDDDZGameDataResp();
  virtual ~ProJDDDZGameDataResp();

  ProJDDDZGameDataResp(const ProJDDDZGameDataResp& from);

  inline ProJDDDZGameDataResp& operator=(const ProJDDDZGameDataResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameDataResp& default_instance();

  void Swap(ProJDDDZGameDataResp* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameDataResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameDataResp& from);
  void MergeFrom(const ProJDDDZGameDataResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameDataResp_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameDataResp_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameDataResp_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameDataResp_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameDataResp_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameDataResp_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameDataResp_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameDataResp_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameDataResp_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 total_score = 1;
  inline int total_score_size() const;
  inline void clear_total_score();
  static const int kTotalScoreFieldNumber = 1;
  inline ::google::protobuf::int32 total_score(int index) const;
  inline void set_total_score(int index, ::google::protobuf::int32 value);
  inline void add_total_score(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      total_score() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_total_score();

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameDataResp)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > total_score_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameDataResp* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameRecordRequest : public ::google::protobuf::Message {
 public:
  ProJDDDZGameRecordRequest();
  virtual ~ProJDDDZGameRecordRequest();

  ProJDDDZGameRecordRequest(const ProJDDDZGameRecordRequest& from);

  inline ProJDDDZGameRecordRequest& operator=(const ProJDDDZGameRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameRecordRequest& default_instance();

  void Swap(ProJDDDZGameRecordRequest* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameRecordRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameRecordRequest& from);
  void MergeFrom(const ProJDDDZGameRecordRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameRecordRequest_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameRecordRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameRecordRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameRecordRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameRecordRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameRecordRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameRecordRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameRecordRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameRecordRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional bytes url = 2;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 2;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const void* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameRecordRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_url();
  inline void clear_has_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* url_;
  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameRecordRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameRecordResponse : public ::google::protobuf::Message {
 public:
  ProJDDDZGameRecordResponse();
  virtual ~ProJDDDZGameRecordResponse();

  ProJDDDZGameRecordResponse(const ProJDDDZGameRecordResponse& from);

  inline ProJDDDZGameRecordResponse& operator=(const ProJDDDZGameRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameRecordResponse& default_instance();

  void Swap(ProJDDDZGameRecordResponse* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameRecordResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameRecordResponse& from);
  void MergeFrom(const ProJDDDZGameRecordResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameRecordResponse_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameRecordResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameRecordResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameRecordResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameRecordResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameRecordResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameRecordResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameRecordResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameRecordResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional bytes url = 2;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 2;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const void* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameRecordResponse)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_url();
  inline void clear_has_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* url_;
  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameRecordResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameUserLocationRequest : public ::google::protobuf::Message {
 public:
  ProJDDDZGameUserLocationRequest();
  virtual ~ProJDDDZGameUserLocationRequest();

  ProJDDDZGameUserLocationRequest(const ProJDDDZGameUserLocationRequest& from);

  inline ProJDDDZGameUserLocationRequest& operator=(const ProJDDDZGameUserLocationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameUserLocationRequest& default_instance();

  void Swap(ProJDDDZGameUserLocationRequest* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameUserLocationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameUserLocationRequest& from);
  void MergeFrom(const ProJDDDZGameUserLocationRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameUserLocationRequest_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameUserLocationRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameUserLocationRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameUserLocationRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameUserLocationRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameUserLocationRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameUserLocationRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameUserLocationRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameUserLocationRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional double dwlongitude = 2;
  inline bool has_dwlongitude() const;
  inline void clear_dwlongitude();
  static const int kDwlongitudeFieldNumber = 2;
  inline double dwlongitude() const;
  inline void set_dwlongitude(double value);

  // optional double dwlatitude = 3;
  inline bool has_dwlatitude() const;
  inline void clear_dwlatitude();
  static const int kDwlatitudeFieldNumber = 3;
  inline double dwlatitude() const;
  inline void set_dwlatitude(double value);

  // optional bytes strDistrict = 4;
  inline bool has_strdistrict() const;
  inline void clear_strdistrict();
  static const int kStrDistrictFieldNumber = 4;
  inline const ::std::string& strdistrict() const;
  inline void set_strdistrict(const ::std::string& value);
  inline void set_strdistrict(const char* value);
  inline void set_strdistrict(const void* value, size_t size);
  inline ::std::string* mutable_strdistrict();
  inline ::std::string* release_strdistrict();
  inline void set_allocated_strdistrict(::std::string* strdistrict);

  // optional bytes strStreetName = 5;
  inline bool has_strstreetname() const;
  inline void clear_strstreetname();
  static const int kStrStreetNameFieldNumber = 5;
  inline const ::std::string& strstreetname() const;
  inline void set_strstreetname(const ::std::string& value);
  inline void set_strstreetname(const char* value);
  inline void set_strstreetname(const void* value, size_t size);
  inline ::std::string* mutable_strstreetname();
  inline ::std::string* release_strstreetname();
  inline void set_allocated_strstreetname(::std::string* strstreetname);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameUserLocationRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_dwlongitude();
  inline void clear_has_dwlongitude();
  inline void set_has_dwlatitude();
  inline void clear_has_dwlatitude();
  inline void set_has_strdistrict();
  inline void clear_has_strdistrict();
  inline void set_has_strstreetname();
  inline void clear_has_strstreetname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  double dwlongitude_;
  double dwlatitude_;
  ::std::string* strdistrict_;
  ::std::string* strstreetname_;
  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameUserLocationRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameSyncCardResponse : public ::google::protobuf::Message {
 public:
  ProJDDDZGameSyncCardResponse();
  virtual ~ProJDDDZGameSyncCardResponse();

  ProJDDDZGameSyncCardResponse(const ProJDDDZGameSyncCardResponse& from);

  inline ProJDDDZGameSyncCardResponse& operator=(const ProJDDDZGameSyncCardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameSyncCardResponse& default_instance();

  void Swap(ProJDDDZGameSyncCardResponse* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameSyncCardResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameSyncCardResponse& from);
  void MergeFrom(const ProJDDDZGameSyncCardResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameSyncCardResponse_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameSyncCardResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameSyncCardResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameSyncCardResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameSyncCardResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameSyncCardResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameSyncCardResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameSyncCardResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameSyncCardResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 handmahs = 3;
  inline int handmahs_size() const;
  inline void clear_handmahs();
  static const int kHandmahsFieldNumber = 3;
  inline ::google::protobuf::int32 handmahs(int index) const;
  inline void set_handmahs(int index, ::google::protobuf::int32 value);
  inline void add_handmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      handmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_handmahs();

  // @@protoc_insertion_point(class_scope:ProJDDDZGameSyncCardResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > handmahs_;
  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameSyncCardResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameUserPhoneStatusRequest : public ::google::protobuf::Message {
 public:
  ProJDDDZGameUserPhoneStatusRequest();
  virtual ~ProJDDDZGameUserPhoneStatusRequest();

  ProJDDDZGameUserPhoneStatusRequest(const ProJDDDZGameUserPhoneStatusRequest& from);

  inline ProJDDDZGameUserPhoneStatusRequest& operator=(const ProJDDDZGameUserPhoneStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameUserPhoneStatusRequest& default_instance();

  void Swap(ProJDDDZGameUserPhoneStatusRequest* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameUserPhoneStatusRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameUserPhoneStatusRequest& from);
  void MergeFrom(const ProJDDDZGameUserPhoneStatusRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameUserPhoneStatusRequest_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameUserPhoneStatusRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameUserPhoneStatusRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameUserPhoneStatusRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameUserPhoneStatusRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameUserPhoneStatusRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameUserPhoneStatusRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameUserPhoneStatusRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameUserPhoneStatusRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional int32 userstatus = 2;
  inline bool has_userstatus() const;
  inline void clear_userstatus();
  static const int kUserstatusFieldNumber = 2;
  inline ::google::protobuf::int32 userstatus() const;
  inline void set_userstatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameUserPhoneStatusRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_userstatus();
  inline void clear_has_userstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;
  ::google::protobuf::int32 userstatus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameUserPhoneStatusRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameUserGiveUpRequest : public ::google::protobuf::Message {
 public:
  ProJDDDZGameUserGiveUpRequest();
  virtual ~ProJDDDZGameUserGiveUpRequest();

  ProJDDDZGameUserGiveUpRequest(const ProJDDDZGameUserGiveUpRequest& from);

  inline ProJDDDZGameUserGiveUpRequest& operator=(const ProJDDDZGameUserGiveUpRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameUserGiveUpRequest& default_instance();

  void Swap(ProJDDDZGameUserGiveUpRequest* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameUserGiveUpRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameUserGiveUpRequest& from);
  void MergeFrom(const ProJDDDZGameUserGiveUpRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameUserGiveUpRequest_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameUserGiveUpRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameUserGiveUpRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameUserGiveUpRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameUserGiveUpRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameUserGiveUpRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameUserGiveUpRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameUserGiveUpRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameUserGiveUpRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameUserGiveUpRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameUserGiveUpRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameUserHintRequest : public ::google::protobuf::Message {
 public:
  ProJDDDZGameUserHintRequest();
  virtual ~ProJDDDZGameUserHintRequest();

  ProJDDDZGameUserHintRequest(const ProJDDDZGameUserHintRequest& from);

  inline ProJDDDZGameUserHintRequest& operator=(const ProJDDDZGameUserHintRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameUserHintRequest& default_instance();

  void Swap(ProJDDDZGameUserHintRequest* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameUserHintRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameUserHintRequest& from);
  void MergeFrom(const ProJDDDZGameUserHintRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameUserHintRequest_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameUserHintRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameUserHintRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameUserHintRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameUserHintRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameUserHintRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameUserHintRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameUserHintRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameUserHintRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProJDDDZGameUserHintRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameUserHintRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameUserHintResponse : public ::google::protobuf::Message {
 public:
  ProJDDDZGameUserHintResponse();
  virtual ~ProJDDDZGameUserHintResponse();

  ProJDDDZGameUserHintResponse(const ProJDDDZGameUserHintResponse& from);

  inline ProJDDDZGameUserHintResponse& operator=(const ProJDDDZGameUserHintResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameUserHintResponse& default_instance();

  void Swap(ProJDDDZGameUserHintResponse* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameUserHintResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameUserHintResponse& from);
  void MergeFrom(const ProJDDDZGameUserHintResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameUserHintResponse_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameUserHintResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameUserHintResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameUserHintResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameUserHintResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameUserHintResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameUserHintResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameUserHintResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameUserHintResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 lenth = 1;
  inline bool has_lenth() const;
  inline void clear_lenth();
  static const int kLenthFieldNumber = 1;
  inline ::google::protobuf::int32 lenth() const;
  inline void set_lenth(::google::protobuf::int32 value);

  // repeated int32 outMahs = 2;
  inline int outmahs_size() const;
  inline void clear_outmahs();
  static const int kOutMahsFieldNumber = 2;
  inline ::google::protobuf::int32 outmahs(int index) const;
  inline void set_outmahs(int index, ::google::protobuf::int32 value);
  inline void add_outmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      outmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_outmahs();

  // @@protoc_insertion_point(class_scope:ProJDDDZGameUserHintResponse)
 private:
  inline void set_has_lenth();
  inline void clear_has_lenth();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > outmahs_;
  ::google::protobuf::int32 lenth_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameUserHintResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameUserCallScoreResponse : public ::google::protobuf::Message {
 public:
  ProJDDDZGameUserCallScoreResponse();
  virtual ~ProJDDDZGameUserCallScoreResponse();

  ProJDDDZGameUserCallScoreResponse(const ProJDDDZGameUserCallScoreResponse& from);

  inline ProJDDDZGameUserCallScoreResponse& operator=(const ProJDDDZGameUserCallScoreResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameUserCallScoreResponse& default_instance();

  void Swap(ProJDDDZGameUserCallScoreResponse* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameUserCallScoreResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameUserCallScoreResponse& from);
  void MergeFrom(const ProJDDDZGameUserCallScoreResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameUserCallScoreResponse_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameUserCallScoreResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameUserCallScoreResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameUserCallScoreResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameUserCallScoreResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameUserCallScoreResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameUserCallScoreResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameUserCallScoreResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameUserCallScoreResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 usercallscore = 2;
  inline bool has_usercallscore() const;
  inline void clear_usercallscore();
  static const int kUsercallscoreFieldNumber = 2;
  inline ::google::protobuf::int32 usercallscore() const;
  inline void set_usercallscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameUserCallScoreResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_usercallscore();
  inline void clear_has_usercallscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 usercallscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameUserCallScoreResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameUserCallScoreRequest : public ::google::protobuf::Message {
 public:
  ProJDDDZGameUserCallScoreRequest();
  virtual ~ProJDDDZGameUserCallScoreRequest();

  ProJDDDZGameUserCallScoreRequest(const ProJDDDZGameUserCallScoreRequest& from);

  inline ProJDDDZGameUserCallScoreRequest& operator=(const ProJDDDZGameUserCallScoreRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameUserCallScoreRequest& default_instance();

  void Swap(ProJDDDZGameUserCallScoreRequest* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameUserCallScoreRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameUserCallScoreRequest& from);
  void MergeFrom(const ProJDDDZGameUserCallScoreRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameUserCallScoreRequest_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameUserCallScoreRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameUserCallScoreRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameUserCallScoreRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameUserCallScoreRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameUserCallScoreRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameUserCallScoreRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameUserCallScoreRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameUserCallScoreRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 usercallscore = 2;
  inline bool has_usercallscore() const;
  inline void clear_usercallscore();
  static const int kUsercallscoreFieldNumber = 2;
  inline ::google::protobuf::int32 usercallscore() const;
  inline void set_usercallscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameUserCallScoreRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_usercallscore();
  inline void clear_has_usercallscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 usercallscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameUserCallScoreRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameCallNotify : public ::google::protobuf::Message {
 public:
  ProJDDDZGameCallNotify();
  virtual ~ProJDDDZGameCallNotify();

  ProJDDDZGameCallNotify(const ProJDDDZGameCallNotify& from);

  inline ProJDDDZGameCallNotify& operator=(const ProJDDDZGameCallNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameCallNotify& default_instance();

  void Swap(ProJDDDZGameCallNotify* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameCallNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameCallNotify& from);
  void MergeFrom(const ProJDDDZGameCallNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameCallNotify_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameCallNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameCallNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameCallNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameCallNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameCallNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameCallNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameCallNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameCallNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 maxCallScore = 2;
  inline bool has_maxcallscore() const;
  inline void clear_maxcallscore();
  static const int kMaxCallScoreFieldNumber = 2;
  inline ::google::protobuf::int32 maxcallscore() const;
  inline void set_maxcallscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameCallNotify)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_maxcallscore();
  inline void clear_has_maxcallscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 maxcallscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameCallNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameQiangNotify : public ::google::protobuf::Message {
 public:
  ProJDDDZGameQiangNotify();
  virtual ~ProJDDDZGameQiangNotify();

  ProJDDDZGameQiangNotify(const ProJDDDZGameQiangNotify& from);

  inline ProJDDDZGameQiangNotify& operator=(const ProJDDDZGameQiangNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameQiangNotify& default_instance();

  void Swap(ProJDDDZGameQiangNotify* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameQiangNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameQiangNotify& from);
  void MergeFrom(const ProJDDDZGameQiangNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameQiangNotify_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameQiangNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameQiangNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameQiangNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameQiangNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameQiangNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameQiangNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameQiangNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameQiangNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameQiangNotify)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameQiangNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameUserCallLandlordResponse : public ::google::protobuf::Message {
 public:
  ProJDDDZGameUserCallLandlordResponse();
  virtual ~ProJDDDZGameUserCallLandlordResponse();

  ProJDDDZGameUserCallLandlordResponse(const ProJDDDZGameUserCallLandlordResponse& from);

  inline ProJDDDZGameUserCallLandlordResponse& operator=(const ProJDDDZGameUserCallLandlordResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameUserCallLandlordResponse& default_instance();

  void Swap(ProJDDDZGameUserCallLandlordResponse* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameUserCallLandlordResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameUserCallLandlordResponse& from);
  void MergeFrom(const ProJDDDZGameUserCallLandlordResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameUserCallLandlordResponse_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameUserCallLandlordResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameUserCallLandlordResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameUserCallLandlordResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameUserCallLandlordResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameUserCallLandlordResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameUserCallLandlordResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameUserCallLandlordResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameUserCallLandlordResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 iscallandlord = 1;
  inline bool has_iscallandlord() const;
  inline void clear_iscallandlord();
  static const int kIscallandlordFieldNumber = 1;
  inline ::google::protobuf::int32 iscallandlord() const;
  inline void set_iscallandlord(::google::protobuf::int32 value);

  // optional int32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // optional int32 landlordSeat = 3;
  inline bool has_landlordseat() const;
  inline void clear_landlordseat();
  static const int kLandlordSeatFieldNumber = 3;
  inline ::google::protobuf::int32 landlordseat() const;
  inline void set_landlordseat(::google::protobuf::int32 value);

  // optional int32 seat = 4;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 4;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool isSoundCall = 5;
  inline bool has_issoundcall() const;
  inline void clear_issoundcall();
  static const int kIsSoundCallFieldNumber = 5;
  inline bool issoundcall() const;
  inline void set_issoundcall(bool value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameUserCallLandlordResponse)
 private:
  inline void set_has_iscallandlord();
  inline void clear_has_iscallandlord();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_landlordseat();
  inline void clear_has_landlordseat();
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_issoundcall();
  inline void clear_has_issoundcall();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iscallandlord_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 landlordseat_;
  ::google::protobuf::int32 seat_;
  bool issoundcall_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameUserCallLandlordResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameUserCallLandlordRequest : public ::google::protobuf::Message {
 public:
  ProJDDDZGameUserCallLandlordRequest();
  virtual ~ProJDDDZGameUserCallLandlordRequest();

  ProJDDDZGameUserCallLandlordRequest(const ProJDDDZGameUserCallLandlordRequest& from);

  inline ProJDDDZGameUserCallLandlordRequest& operator=(const ProJDDDZGameUserCallLandlordRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameUserCallLandlordRequest& default_instance();

  void Swap(ProJDDDZGameUserCallLandlordRequest* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameUserCallLandlordRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameUserCallLandlordRequest& from);
  void MergeFrom(const ProJDDDZGameUserCallLandlordRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameUserCallLandlordRequest_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameUserCallLandlordRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameUserCallLandlordRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameUserCallLandlordRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameUserCallLandlordRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameUserCallLandlordRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameUserCallLandlordRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameUserCallLandlordRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameUserCallLandlordRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 iscallandlord = 2;
  inline bool has_iscallandlord() const;
  inline void clear_iscallandlord();
  static const int kIscallandlordFieldNumber = 2;
  inline ::google::protobuf::int32 iscallandlord() const;
  inline void set_iscallandlord(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameUserCallLandlordRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_iscallandlord();
  inline void clear_has_iscallandlord();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 iscallandlord_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameUserCallLandlordRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameUserQinagLandlordResponse : public ::google::protobuf::Message {
 public:
  ProJDDDZGameUserQinagLandlordResponse();
  virtual ~ProJDDDZGameUserQinagLandlordResponse();

  ProJDDDZGameUserQinagLandlordResponse(const ProJDDDZGameUserQinagLandlordResponse& from);

  inline ProJDDDZGameUserQinagLandlordResponse& operator=(const ProJDDDZGameUserQinagLandlordResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameUserQinagLandlordResponse& default_instance();

  void Swap(ProJDDDZGameUserQinagLandlordResponse* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameUserQinagLandlordResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameUserQinagLandlordResponse& from);
  void MergeFrom(const ProJDDDZGameUserQinagLandlordResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameUserQinagLandlordResponse_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameUserQinagLandlordResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameUserQinagLandlordResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameUserQinagLandlordResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameUserQinagLandlordResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameUserQinagLandlordResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameUserQinagLandlordResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameUserQinagLandlordResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameUserQinagLandlordResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 isQiangLandlord = 1;
  inline bool has_isqianglandlord() const;
  inline void clear_isqianglandlord();
  static const int kIsQiangLandlordFieldNumber = 1;
  inline ::google::protobuf::int32 isqianglandlord() const;
  inline void set_isqianglandlord(::google::protobuf::int32 value);

  // optional int32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // optional int32 landlordSeat = 3;
  inline bool has_landlordseat() const;
  inline void clear_landlordseat();
  static const int kLandlordSeatFieldNumber = 3;
  inline ::google::protobuf::int32 landlordseat() const;
  inline void set_landlordseat(::google::protobuf::int32 value);

  // optional int32 seat = 4;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 4;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameUserQinagLandlordResponse)
 private:
  inline void set_has_isqianglandlord();
  inline void clear_has_isqianglandlord();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_landlordseat();
  inline void clear_has_landlordseat();
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isqianglandlord_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 landlordseat_;
  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameUserQinagLandlordResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameUserQiangLandlordRequest : public ::google::protobuf::Message {
 public:
  ProJDDDZGameUserQiangLandlordRequest();
  virtual ~ProJDDDZGameUserQiangLandlordRequest();

  ProJDDDZGameUserQiangLandlordRequest(const ProJDDDZGameUserQiangLandlordRequest& from);

  inline ProJDDDZGameUserQiangLandlordRequest& operator=(const ProJDDDZGameUserQiangLandlordRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameUserQiangLandlordRequest& default_instance();

  void Swap(ProJDDDZGameUserQiangLandlordRequest* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameUserQiangLandlordRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameUserQiangLandlordRequest& from);
  void MergeFrom(const ProJDDDZGameUserQiangLandlordRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameUserQiangLandlordRequest_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameUserQiangLandlordRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameUserQiangLandlordRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameUserQiangLandlordRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameUserQiangLandlordRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameUserQiangLandlordRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameUserQiangLandlordRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameUserQiangLandlordRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameUserQiangLandlordRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 isQiangLandlord = 2;
  inline bool has_isqianglandlord() const;
  inline void clear_isqianglandlord();
  static const int kIsQiangLandlordFieldNumber = 2;
  inline ::google::protobuf::int32 isqianglandlord() const;
  inline void set_isqianglandlord(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameUserQiangLandlordRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_isqianglandlord();
  inline void clear_has_isqianglandlord();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 isqianglandlord_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameUserQiangLandlordRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameSendLastCard : public ::google::protobuf::Message {
 public:
  ProJDDDZGameSendLastCard();
  virtual ~ProJDDDZGameSendLastCard();

  ProJDDDZGameSendLastCard(const ProJDDDZGameSendLastCard& from);

  inline ProJDDDZGameSendLastCard& operator=(const ProJDDDZGameSendLastCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameSendLastCard& default_instance();

  void Swap(ProJDDDZGameSendLastCard* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameSendLastCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameSendLastCard& from);
  void MergeFrom(const ProJDDDZGameSendLastCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameSendLastCard_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameSendLastCard_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameSendLastCard_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameSendLastCard_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameSendLastCard_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameSendLastCard_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameSendLastCard_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameSendLastCard_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameSendLastCard_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated .JDDDZMahList cbHandCardData = 2;
  inline int cbhandcarddata_size() const;
  inline void clear_cbhandcarddata();
  static const int kCbHandCardDataFieldNumber = 2;
  inline const ::JDDDZMahList& cbhandcarddata(int index) const;
  inline ::JDDDZMahList* mutable_cbhandcarddata(int index);
  inline ::JDDDZMahList* add_cbhandcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::JDDDZMahList >&
      cbhandcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::JDDDZMahList >*
      mutable_cbhandcarddata();

  // repeated int32 lastmahs = 3;
  inline int lastmahs_size() const;
  inline void clear_lastmahs();
  static const int kLastmahsFieldNumber = 3;
  inline ::google::protobuf::int32 lastmahs(int index) const;
  inline void set_lastmahs(int index, ::google::protobuf::int32 value);
  inline void add_lastmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lastmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lastmahs();

  // optional int32 laizi = 4;
  inline bool has_laizi() const;
  inline void clear_laizi();
  static const int kLaiziFieldNumber = 4;
  inline ::google::protobuf::int32 laizi() const;
  inline void set_laizi(::google::protobuf::int32 value);

  // optional bool isReCome = 5;
  inline bool has_isrecome() const;
  inline void clear_isrecome();
  static const int kIsReComeFieldNumber = 5;
  inline bool isrecome() const;
  inline void set_isrecome(bool value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameSendLastCard)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_laizi();
  inline void clear_has_laizi();
  inline void set_has_isrecome();
  inline void clear_has_isrecome();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::JDDDZMahList > cbhandcarddata_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 laizi_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lastmahs_;
  bool isrecome_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameSendLastCard* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameUserMingPaiRequest : public ::google::protobuf::Message {
 public:
  ProJDDDZGameUserMingPaiRequest();
  virtual ~ProJDDDZGameUserMingPaiRequest();

  ProJDDDZGameUserMingPaiRequest(const ProJDDDZGameUserMingPaiRequest& from);

  inline ProJDDDZGameUserMingPaiRequest& operator=(const ProJDDDZGameUserMingPaiRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameUserMingPaiRequest& default_instance();

  void Swap(ProJDDDZGameUserMingPaiRequest* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameUserMingPaiRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameUserMingPaiRequest& from);
  void MergeFrom(const ProJDDDZGameUserMingPaiRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameUserMingPaiRequest_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameUserMingPaiRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameUserMingPaiRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameUserMingPaiRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameUserMingPaiRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameUserMingPaiRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameUserMingPaiRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameUserMingPaiRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameUserMingPaiRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool isMingPai = 2;
  inline bool has_ismingpai() const;
  inline void clear_ismingpai();
  static const int kIsMingPaiFieldNumber = 2;
  inline bool ismingpai() const;
  inline void set_ismingpai(bool value);

  // optional int32 beilv = 3;
  inline bool has_beilv() const;
  inline void clear_beilv();
  static const int kBeilvFieldNumber = 3;
  inline ::google::protobuf::int32 beilv() const;
  inline void set_beilv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameUserMingPaiRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_ismingpai();
  inline void clear_has_ismingpai();
  inline void set_has_beilv();
  inline void clear_has_beilv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  bool ismingpai_;
  ::google::protobuf::int32 beilv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameUserMingPaiRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameUserMingPaiResponse : public ::google::protobuf::Message {
 public:
  ProJDDDZGameUserMingPaiResponse();
  virtual ~ProJDDDZGameUserMingPaiResponse();

  ProJDDDZGameUserMingPaiResponse(const ProJDDDZGameUserMingPaiResponse& from);

  inline ProJDDDZGameUserMingPaiResponse& operator=(const ProJDDDZGameUserMingPaiResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameUserMingPaiResponse& default_instance();

  void Swap(ProJDDDZGameUserMingPaiResponse* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameUserMingPaiResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameUserMingPaiResponse& from);
  void MergeFrom(const ProJDDDZGameUserMingPaiResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameUserMingPaiResponse_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameUserMingPaiResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameUserMingPaiResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameUserMingPaiResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameUserMingPaiResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameUserMingPaiResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameUserMingPaiResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameUserMingPaiResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameUserMingPaiResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool isMingPai = 2;
  inline bool has_ismingpai() const;
  inline void clear_ismingpai();
  static const int kIsMingPaiFieldNumber = 2;
  inline bool ismingpai() const;
  inline void set_ismingpai(bool value);

  // optional int32 score = 3;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 3;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // optional int32 mingtag = 4;
  inline bool has_mingtag() const;
  inline void clear_mingtag();
  static const int kMingtagFieldNumber = 4;
  inline ::google::protobuf::int32 mingtag() const;
  inline void set_mingtag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameUserMingPaiResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_ismingpai();
  inline void clear_has_ismingpai();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_mingtag();
  inline void clear_has_mingtag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  bool ismingpai_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::int32 mingtag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameUserMingPaiResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameMingNotify : public ::google::protobuf::Message {
 public:
  ProJDDDZGameMingNotify();
  virtual ~ProJDDDZGameMingNotify();

  ProJDDDZGameMingNotify(const ProJDDDZGameMingNotify& from);

  inline ProJDDDZGameMingNotify& operator=(const ProJDDDZGameMingNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameMingNotify& default_instance();

  void Swap(ProJDDDZGameMingNotify* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameMingNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameMingNotify& from);
  void MergeFrom(const ProJDDDZGameMingNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameMingNotify_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameMingNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameMingNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameMingNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameMingNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameMingNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameMingNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameMingNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameMingNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 tag = 2;
  inline bool has_tag() const;
  inline void clear_tag();
  static const int kTagFieldNumber = 2;
  inline ::google::protobuf::int32 tag() const;
  inline void set_tag(::google::protobuf::int32 value);

  // optional float time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline float time() const;
  inline void set_time(float value);

  // @@protoc_insertion_point(class_scope:ProJDDDZGameMingNotify)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_tag();
  inline void clear_has_tag();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 tag_;
  float time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameMingNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProJDDDZGameStartAgain : public ::google::protobuf::Message {
 public:
  ProJDDDZGameStartAgain();
  virtual ~ProJDDDZGameStartAgain();

  ProJDDDZGameStartAgain(const ProJDDDZGameStartAgain& from);

  inline ProJDDDZGameStartAgain& operator=(const ProJDDDZGameStartAgain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProJDDDZGameStartAgain& default_instance();

  void Swap(ProJDDDZGameStartAgain* other);

  // implements Message ----------------------------------------------

  ProJDDDZGameStartAgain* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProJDDDZGameStartAgain& from);
  void MergeFrom(const ProJDDDZGameStartAgain& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProJDDDZGameStartAgain_MSGID MSGID;
  static const MSGID ID = ProJDDDZGameStartAgain_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProJDDDZGameStartAgain_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProJDDDZGameStartAgain_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProJDDDZGameStartAgain_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProJDDDZGameStartAgain_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProJDDDZGameStartAgain_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProJDDDZGameStartAgain_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProJDDDZGameStartAgain_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProJDDDZGameStartAgain)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_jdddzpk_2eproto();
  friend void protobuf_AssignDesc_jdddzpk_2eproto();
  friend void protobuf_ShutdownFile_jdddzpk_2eproto();

  void InitAsDefaultInstance();
  static ProJDDDZGameStartAgain* default_instance_;
};
// ===================================================================


// ===================================================================

// ProJDDDZGameStatusResponse

// optional .JDDDZGameState status = 2;
inline bool ProJDDDZGameStatusResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameStatusResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameStatusResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameStatusResponse::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::JDDDZGameState ProJDDDZGameStatusResponse::status() const {
  return static_cast< ::JDDDZGameState >(status_);
}
inline void ProJDDDZGameStatusResponse::set_status(::JDDDZGameState value) {
  assert(::JDDDZGameState_IsValid(value));
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameDeskInfoResponse

// optional int32 CellScore = 2;
inline bool ProJDDDZGameDeskInfoResponse::has_cellscore() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameDeskInfoResponse::set_has_cellscore() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameDeskInfoResponse::clear_has_cellscore() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameDeskInfoResponse::clear_cellscore() {
  cellscore_ = 0;
  clear_has_cellscore();
}
inline ::google::protobuf::int32 ProJDDDZGameDeskInfoResponse::cellscore() const {
  return cellscore_;
}
inline void ProJDDDZGameDeskInfoResponse::set_cellscore(::google::protobuf::int32 value) {
  set_has_cellscore();
  cellscore_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameReadyNotify

// optional int32 seat = 2;
inline bool ProJDDDZGameReadyNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameReadyNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameReadyNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameReadyNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameReadyNotify::seat() const {
  return seat_;
}
inline void ProJDDDZGameReadyNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 time = 3;
inline bool ProJDDDZGameReadyNotify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameReadyNotify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameReadyNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameReadyNotify::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProJDDDZGameReadyNotify::time() const {
  return time_;
}
inline void ProJDDDZGameReadyNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameReadyRequest

// optional int32 seat = 2;
inline bool ProJDDDZGameReadyRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameReadyRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameReadyRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameReadyRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameReadyRequest::seat() const {
  return seat_;
}
inline void ProJDDDZGameReadyRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameReadyResponse

// optional int32 seat = 2;
inline bool ProJDDDZGameReadyResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameReadyResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameReadyResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameReadyResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameReadyResponse::seat() const {
  return seat_;
}
inline void ProJDDDZGameReadyResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool isMingPai = 3;
inline bool ProJDDDZGameReadyResponse::has_ismingpai() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameReadyResponse::set_has_ismingpai() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameReadyResponse::clear_has_ismingpai() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameReadyResponse::clear_ismingpai() {
  ismingpai_ = false;
  clear_has_ismingpai();
}
inline bool ProJDDDZGameReadyResponse::ismingpai() const {
  return ismingpai_;
}
inline void ProJDDDZGameReadyResponse::set_ismingpai(bool value) {
  set_has_ismingpai();
  ismingpai_ = value;
}

// optional int32 MingPaiTag = 4;
inline bool ProJDDDZGameReadyResponse::has_mingpaitag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameReadyResponse::set_has_mingpaitag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameReadyResponse::clear_has_mingpaitag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameReadyResponse::clear_mingpaitag() {
  mingpaitag_ = 0;
  clear_has_mingpaitag();
}
inline ::google::protobuf::int32 ProJDDDZGameReadyResponse::mingpaitag() const {
  return mingpaitag_;
}
inline void ProJDDDZGameReadyResponse::set_mingpaitag(::google::protobuf::int32 value) {
  set_has_mingpaitag();
  mingpaitag_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameStart

// optional int32 bankerseat = 2;
inline bool ProJDDDZGameStart::has_bankerseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameStart::set_has_bankerseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameStart::clear_has_bankerseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameStart::clear_bankerseat() {
  bankerseat_ = 0;
  clear_has_bankerseat();
}
inline ::google::protobuf::int32 ProJDDDZGameStart::bankerseat() const {
  return bankerseat_;
}
inline void ProJDDDZGameStart::set_bankerseat(::google::protobuf::int32 value) {
  set_has_bankerseat();
  bankerseat_ = value;
}

// optional int32 gamecount = 3;
inline bool ProJDDDZGameStart::has_gamecount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameStart::set_has_gamecount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameStart::clear_has_gamecount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameStart::clear_gamecount() {
  gamecount_ = 0;
  clear_has_gamecount();
}
inline ::google::protobuf::int32 ProJDDDZGameStart::gamecount() const {
  return gamecount_;
}
inline void ProJDDDZGameStart::set_gamecount(::google::protobuf::int32 value) {
  set_has_gamecount();
  gamecount_ = value;
}

// optional int32 outCardtimes = 4;
inline bool ProJDDDZGameStart::has_outcardtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameStart::set_has_outcardtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameStart::clear_has_outcardtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameStart::clear_outcardtimes() {
  outcardtimes_ = 0;
  clear_has_outcardtimes();
}
inline ::google::protobuf::int32 ProJDDDZGameStart::outcardtimes() const {
  return outcardtimes_;
}
inline void ProJDDDZGameStart::set_outcardtimes(::google::protobuf::int32 value) {
  set_has_outcardtimes();
  outcardtimes_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameDiceNotify

// optional int32 seat = 2;
inline bool ProJDDDZGameDiceNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameDiceNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameDiceNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameDiceNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameDiceNotify::seat() const {
  return seat_;
}
inline void ProJDDDZGameDiceNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 time = 3;
inline bool ProJDDDZGameDiceNotify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameDiceNotify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameDiceNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameDiceNotify::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProJDDDZGameDiceNotify::time() const {
  return time_;
}
inline void ProJDDDZGameDiceNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 dicecount = 4;
inline bool ProJDDDZGameDiceNotify::has_dicecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameDiceNotify::set_has_dicecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameDiceNotify::clear_has_dicecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameDiceNotify::clear_dicecount() {
  dicecount_ = 0;
  clear_has_dicecount();
}
inline ::google::protobuf::int32 ProJDDDZGameDiceNotify::dicecount() const {
  return dicecount_;
}
inline void ProJDDDZGameDiceNotify::set_dicecount(::google::protobuf::int32 value) {
  set_has_dicecount();
  dicecount_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameDiceRequest

// optional int32 seat = 2;
inline bool ProJDDDZGameDiceRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameDiceRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameDiceRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameDiceRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameDiceRequest::seat() const {
  return seat_;
}
inline void ProJDDDZGameDiceRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 dicecount = 3;
inline bool ProJDDDZGameDiceRequest::has_dicecount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameDiceRequest::set_has_dicecount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameDiceRequest::clear_has_dicecount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameDiceRequest::clear_dicecount() {
  dicecount_ = 0;
  clear_has_dicecount();
}
inline ::google::protobuf::int32 ProJDDDZGameDiceRequest::dicecount() const {
  return dicecount_;
}
inline void ProJDDDZGameDiceRequest::set_dicecount(::google::protobuf::int32 value) {
  set_has_dicecount();
  dicecount_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameDiceResult

// optional int32 seat = 2;
inline bool ProJDDDZGameDiceResult::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameDiceResult::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameDiceResult::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameDiceResult::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameDiceResult::seat() const {
  return seat_;
}
inline void ProJDDDZGameDiceResult::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 result = 3;
inline int ProJDDDZGameDiceResult::result_size() const {
  return result_.size();
}
inline void ProJDDDZGameDiceResult::clear_result() {
  result_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameDiceResult::result(int index) const {
  return result_.Get(index);
}
inline void ProJDDDZGameDiceResult::set_result(int index, ::google::protobuf::int32 value) {
  result_.Set(index, value);
}
inline void ProJDDDZGameDiceResult::add_result(::google::protobuf::int32 value) {
  result_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameDiceResult::result() const {
  return result_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameDiceResult::mutable_result() {
  return &result_;
}

// optional int32 dicecount = 4;
inline bool ProJDDDZGameDiceResult::has_dicecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameDiceResult::set_has_dicecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameDiceResult::clear_has_dicecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameDiceResult::clear_dicecount() {
  dicecount_ = 0;
  clear_has_dicecount();
}
inline ::google::protobuf::int32 ProJDDDZGameDiceResult::dicecount() const {
  return dicecount_;
}
inline void ProJDDDZGameDiceResult::set_dicecount(::google::protobuf::int32 value) {
  set_has_dicecount();
  dicecount_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameSendMahs

// optional int32 seat = 2;
inline bool ProJDDDZGameSendMahs::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameSendMahs::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameSendMahs::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameSendMahs::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameSendMahs::seat() const {
  return seat_;
}
inline void ProJDDDZGameSendMahs::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated .JDDDZMahList cbHandCardData = 3;
inline int ProJDDDZGameSendMahs::cbhandcarddata_size() const {
  return cbhandcarddata_.size();
}
inline void ProJDDDZGameSendMahs::clear_cbhandcarddata() {
  cbhandcarddata_.Clear();
}
inline const ::JDDDZMahList& ProJDDDZGameSendMahs::cbhandcarddata(int index) const {
  return cbhandcarddata_.Get(index);
}
inline ::JDDDZMahList* ProJDDDZGameSendMahs::mutable_cbhandcarddata(int index) {
  return cbhandcarddata_.Mutable(index);
}
inline ::JDDDZMahList* ProJDDDZGameSendMahs::add_cbhandcarddata() {
  return cbhandcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::JDDDZMahList >&
ProJDDDZGameSendMahs::cbhandcarddata() const {
  return cbhandcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::JDDDZMahList >*
ProJDDDZGameSendMahs::mutable_cbhandcarddata() {
  return &cbhandcarddata_;
}

// repeated int32 mahscount = 4;
inline int ProJDDDZGameSendMahs::mahscount_size() const {
  return mahscount_.size();
}
inline void ProJDDDZGameSendMahs::clear_mahscount() {
  mahscount_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameSendMahs::mahscount(int index) const {
  return mahscount_.Get(index);
}
inline void ProJDDDZGameSendMahs::set_mahscount(int index, ::google::protobuf::int32 value) {
  mahscount_.Set(index, value);
}
inline void ProJDDDZGameSendMahs::add_mahscount(::google::protobuf::int32 value) {
  mahscount_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameSendMahs::mahscount() const {
  return mahscount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameSendMahs::mutable_mahscount() {
  return &mahscount_;
}

// optional int32 cbLeftCount = 5;
inline bool ProJDDDZGameSendMahs::has_cbleftcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProJDDDZGameSendMahs::set_has_cbleftcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProJDDDZGameSendMahs::clear_has_cbleftcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProJDDDZGameSendMahs::clear_cbleftcount() {
  cbleftcount_ = 0;
  clear_has_cbleftcount();
}
inline ::google::protobuf::int32 ProJDDDZGameSendMahs::cbleftcount() const {
  return cbleftcount_;
}
inline void ProJDDDZGameSendMahs::set_cbleftcount(::google::protobuf::int32 value) {
  set_has_cbleftcount();
  cbleftcount_ = value;
}

// optional int32 offlineTag = 6;
inline bool ProJDDDZGameSendMahs::has_offlinetag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProJDDDZGameSendMahs::set_has_offlinetag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProJDDDZGameSendMahs::clear_has_offlinetag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProJDDDZGameSendMahs::clear_offlinetag() {
  offlinetag_ = 0;
  clear_has_offlinetag();
}
inline ::google::protobuf::int32 ProJDDDZGameSendMahs::offlinetag() const {
  return offlinetag_;
}
inline void ProJDDDZGameSendMahs::set_offlinetag(::google::protobuf::int32 value) {
  set_has_offlinetag();
  offlinetag_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameKingData

// optional int32 seat = 2;
inline bool ProJDDDZGameKingData::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameKingData::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameKingData::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameKingData::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameKingData::seat() const {
  return seat_;
}
inline void ProJDDDZGameKingData::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 mahs = 3;
inline int ProJDDDZGameKingData::mahs_size() const {
  return mahs_.size();
}
inline void ProJDDDZGameKingData::clear_mahs() {
  mahs_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameKingData::mahs(int index) const {
  return mahs_.Get(index);
}
inline void ProJDDDZGameKingData::set_mahs(int index, ::google::protobuf::int32 value) {
  mahs_.Set(index, value);
}
inline void ProJDDDZGameKingData::add_mahs(::google::protobuf::int32 value) {
  mahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameKingData::mahs() const {
  return mahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameKingData::mutable_mahs() {
  return &mahs_;
}

// repeated int32 downKingScore = 4;
inline int ProJDDDZGameKingData::downkingscore_size() const {
  return downkingscore_.size();
}
inline void ProJDDDZGameKingData::clear_downkingscore() {
  downkingscore_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameKingData::downkingscore(int index) const {
  return downkingscore_.Get(index);
}
inline void ProJDDDZGameKingData::set_downkingscore(int index, ::google::protobuf::int32 value) {
  downkingscore_.Set(index, value);
}
inline void ProJDDDZGameKingData::add_downkingscore(::google::protobuf::int32 value) {
  downkingscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameKingData::downkingscore() const {
  return downkingscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameKingData::mutable_downkingscore() {
  return &downkingscore_;
}

// repeated int32 kingcount = 5;
inline int ProJDDDZGameKingData::kingcount_size() const {
  return kingcount_.size();
}
inline void ProJDDDZGameKingData::clear_kingcount() {
  kingcount_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameKingData::kingcount(int index) const {
  return kingcount_.Get(index);
}
inline void ProJDDDZGameKingData::set_kingcount(int index, ::google::protobuf::int32 value) {
  kingcount_.Set(index, value);
}
inline void ProJDDDZGameKingData::add_kingcount(::google::protobuf::int32 value) {
  kingcount_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameKingData::kingcount() const {
  return kingcount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameKingData::mutable_kingcount() {
  return &kingcount_;
}

// repeated int32 viceking = 6;
inline int ProJDDDZGameKingData::viceking_size() const {
  return viceking_.size();
}
inline void ProJDDDZGameKingData::clear_viceking() {
  viceking_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameKingData::viceking(int index) const {
  return viceking_.Get(index);
}
inline void ProJDDDZGameKingData::set_viceking(int index, ::google::protobuf::int32 value) {
  viceking_.Set(index, value);
}
inline void ProJDDDZGameKingData::add_viceking(::google::protobuf::int32 value) {
  viceking_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameKingData::viceking() const {
  return viceking_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameKingData::mutable_viceking() {
  return &viceking_;
}

// optional .JDDDZSEND_TYPE notify_type = 7 [default = JDDDZ_NORMAL_SEND];
inline bool ProJDDDZGameKingData::has_notify_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProJDDDZGameKingData::set_has_notify_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProJDDDZGameKingData::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProJDDDZGameKingData::clear_notify_type() {
  notify_type_ = 1;
  clear_has_notify_type();
}
inline ::JDDDZSEND_TYPE ProJDDDZGameKingData::notify_type() const {
  return static_cast< ::JDDDZSEND_TYPE >(notify_type_);
}
inline void ProJDDDZGameKingData::set_notify_type(::JDDDZSEND_TYPE value) {
  assert(::JDDDZSEND_TYPE_IsValid(value));
  set_has_notify_type();
  notify_type_ = value;
}

// optional .JDDDZKIGN_TYPE king_type = 8 [default = JDDDZ_KING_UP];
inline bool ProJDDDZGameKingData::has_king_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProJDDDZGameKingData::set_has_king_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProJDDDZGameKingData::clear_has_king_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProJDDDZGameKingData::clear_king_type() {
  king_type_ = 1;
  clear_has_king_type();
}
inline ::JDDDZKIGN_TYPE ProJDDDZGameKingData::king_type() const {
  return static_cast< ::JDDDZKIGN_TYPE >(king_type_);
}
inline void ProJDDDZGameKingData::set_king_type(::JDDDZKIGN_TYPE value) {
  assert(::JDDDZKIGN_TYPE_IsValid(value));
  set_has_king_type();
  king_type_ = value;
}

// repeated int32 cbChongGuang = 9;
inline int ProJDDDZGameKingData::cbchongguang_size() const {
  return cbchongguang_.size();
}
inline void ProJDDDZGameKingData::clear_cbchongguang() {
  cbchongguang_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameKingData::cbchongguang(int index) const {
  return cbchongguang_.Get(index);
}
inline void ProJDDDZGameKingData::set_cbchongguang(int index, ::google::protobuf::int32 value) {
  cbchongguang_.Set(index, value);
}
inline void ProJDDDZGameKingData::add_cbchongguang(::google::protobuf::int32 value) {
  cbchongguang_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameKingData::cbchongguang() const {
  return cbchongguang_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameKingData::mutable_cbchongguang() {
  return &cbchongguang_;
}

// repeated int32 cbBaWangKing = 10;
inline int ProJDDDZGameKingData::cbbawangking_size() const {
  return cbbawangking_.size();
}
inline void ProJDDDZGameKingData::clear_cbbawangking() {
  cbbawangking_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameKingData::cbbawangking(int index) const {
  return cbbawangking_.Get(index);
}
inline void ProJDDDZGameKingData::set_cbbawangking(int index, ::google::protobuf::int32 value) {
  cbbawangking_.Set(index, value);
}
inline void ProJDDDZGameKingData::add_cbbawangking(::google::protobuf::int32 value) {
  cbbawangking_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameKingData::cbbawangking() const {
  return cbbawangking_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameKingData::mutable_cbbawangking() {
  return &cbbawangking_;
}

// -------------------------------------------------------------------

// ProJDDDZGameOutMahsResponse

// optional int32 seat = 2;
inline bool ProJDDDZGameOutMahsResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameOutMahsResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameOutMahsResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameOutMahsResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameOutMahsResponse::seat() const {
  return seat_;
}
inline void ProJDDDZGameOutMahsResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 outMahs = 3;
inline int ProJDDDZGameOutMahsResponse::outmahs_size() const {
  return outmahs_.size();
}
inline void ProJDDDZGameOutMahsResponse::clear_outmahs() {
  outmahs_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameOutMahsResponse::outmahs(int index) const {
  return outmahs_.Get(index);
}
inline void ProJDDDZGameOutMahsResponse::set_outmahs(int index, ::google::protobuf::int32 value) {
  outmahs_.Set(index, value);
}
inline void ProJDDDZGameOutMahsResponse::add_outmahs(::google::protobuf::int32 value) {
  outmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameOutMahsResponse::outmahs() const {
  return outmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameOutMahsResponse::mutable_outmahs() {
  return &outmahs_;
}

// repeated int32 handmahs = 4;
inline int ProJDDDZGameOutMahsResponse::handmahs_size() const {
  return handmahs_.size();
}
inline void ProJDDDZGameOutMahsResponse::clear_handmahs() {
  handmahs_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameOutMahsResponse::handmahs(int index) const {
  return handmahs_.Get(index);
}
inline void ProJDDDZGameOutMahsResponse::set_handmahs(int index, ::google::protobuf::int32 value) {
  handmahs_.Set(index, value);
}
inline void ProJDDDZGameOutMahsResponse::add_handmahs(::google::protobuf::int32 value) {
  handmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameOutMahsResponse::handmahs() const {
  return handmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameOutMahsResponse::mutable_handmahs() {
  return &handmahs_;
}

// optional int32 cardCount = 5;
inline bool ProJDDDZGameOutMahsResponse::has_cardcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProJDDDZGameOutMahsResponse::set_has_cardcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProJDDDZGameOutMahsResponse::clear_has_cardcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProJDDDZGameOutMahsResponse::clear_cardcount() {
  cardcount_ = 0;
  clear_has_cardcount();
}
inline ::google::protobuf::int32 ProJDDDZGameOutMahsResponse::cardcount() const {
  return cardcount_;
}
inline void ProJDDDZGameOutMahsResponse::set_cardcount(::google::protobuf::int32 value) {
  set_has_cardcount();
  cardcount_ = value;
}

// optional int32 cardType = 6;
inline bool ProJDDDZGameOutMahsResponse::has_cardtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProJDDDZGameOutMahsResponse::set_has_cardtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProJDDDZGameOutMahsResponse::clear_has_cardtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProJDDDZGameOutMahsResponse::clear_cardtype() {
  cardtype_ = 0;
  clear_has_cardtype();
}
inline ::google::protobuf::int32 ProJDDDZGameOutMahsResponse::cardtype() const {
  return cardtype_;
}
inline void ProJDDDZGameOutMahsResponse::set_cardtype(::google::protobuf::int32 value) {
  set_has_cardtype();
  cardtype_ = value;
}

// repeated int32 noChangeMahs = 7;
inline int ProJDDDZGameOutMahsResponse::nochangemahs_size() const {
  return nochangemahs_.size();
}
inline void ProJDDDZGameOutMahsResponse::clear_nochangemahs() {
  nochangemahs_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameOutMahsResponse::nochangemahs(int index) const {
  return nochangemahs_.Get(index);
}
inline void ProJDDDZGameOutMahsResponse::set_nochangemahs(int index, ::google::protobuf::int32 value) {
  nochangemahs_.Set(index, value);
}
inline void ProJDDDZGameOutMahsResponse::add_nochangemahs(::google::protobuf::int32 value) {
  nochangemahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameOutMahsResponse::nochangemahs() const {
  return nochangemahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameOutMahsResponse::mutable_nochangemahs() {
  return &nochangemahs_;
}

// -------------------------------------------------------------------

// ProJDDDZGameTimerPower

// optional int32 seat = 2;
inline bool ProJDDDZGameTimerPower::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameTimerPower::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameTimerPower::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameTimerPower::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameTimerPower::seat() const {
  return seat_;
}
inline void ProJDDDZGameTimerPower::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 time = 3;
inline bool ProJDDDZGameTimerPower::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameTimerPower::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameTimerPower::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameTimerPower::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProJDDDZGameTimerPower::time() const {
  return time_;
}
inline void ProJDDDZGameTimerPower::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 outcardTime = 4;
inline bool ProJDDDZGameTimerPower::has_outcardtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameTimerPower::set_has_outcardtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameTimerPower::clear_has_outcardtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameTimerPower::clear_outcardtime() {
  outcardtime_ = 0;
  clear_has_outcardtime();
}
inline ::google::protobuf::int32 ProJDDDZGameTimerPower::outcardtime() const {
  return outcardtime_;
}
inline void ProJDDDZGameTimerPower::set_outcardtime(::google::protobuf::int32 value) {
  set_has_outcardtime();
  outcardtime_ = value;
}

// optional int32 lastCardType = 5;
inline bool ProJDDDZGameTimerPower::has_lastcardtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProJDDDZGameTimerPower::set_has_lastcardtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProJDDDZGameTimerPower::clear_has_lastcardtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProJDDDZGameTimerPower::clear_lastcardtype() {
  lastcardtype_ = 0;
  clear_has_lastcardtype();
}
inline ::google::protobuf::int32 ProJDDDZGameTimerPower::lastcardtype() const {
  return lastcardtype_;
}
inline void ProJDDDZGameTimerPower::set_lastcardtype(::google::protobuf::int32 value) {
  set_has_lastcardtype();
  lastcardtype_ = value;
}

// optional int32 lastPoint = 6;
inline bool ProJDDDZGameTimerPower::has_lastpoint() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProJDDDZGameTimerPower::set_has_lastpoint() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProJDDDZGameTimerPower::clear_has_lastpoint() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProJDDDZGameTimerPower::clear_lastpoint() {
  lastpoint_ = 0;
  clear_has_lastpoint();
}
inline ::google::protobuf::int32 ProJDDDZGameTimerPower::lastpoint() const {
  return lastpoint_;
}
inline void ProJDDDZGameTimerPower::set_lastpoint(::google::protobuf::int32 value) {
  set_has_lastpoint();
  lastpoint_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameOperateNotify

// optional int32 resumeSeat = 2;
inline bool ProJDDDZGameOperateNotify::has_resumeseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameOperateNotify::set_has_resumeseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameOperateNotify::clear_has_resumeseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameOperateNotify::clear_resumeseat() {
  resumeseat_ = 0;
  clear_has_resumeseat();
}
inline ::google::protobuf::int32 ProJDDDZGameOperateNotify::resumeseat() const {
  return resumeseat_;
}
inline void ProJDDDZGameOperateNotify::set_resumeseat(::google::protobuf::int32 value) {
  set_has_resumeseat();
  resumeseat_ = value;
}

// optional int32 ActionMask = 3;
inline bool ProJDDDZGameOperateNotify::has_actionmask() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameOperateNotify::set_has_actionmask() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameOperateNotify::clear_has_actionmask() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameOperateNotify::clear_actionmask() {
  actionmask_ = 0;
  clear_has_actionmask();
}
inline ::google::protobuf::int32 ProJDDDZGameOperateNotify::actionmask() const {
  return actionmask_;
}
inline void ProJDDDZGameOperateNotify::set_actionmask(::google::protobuf::int32 value) {
  set_has_actionmask();
  actionmask_ = value;
}

// optional int32 ActionCard = 4;
inline bool ProJDDDZGameOperateNotify::has_actioncard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameOperateNotify::set_has_actioncard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameOperateNotify::clear_has_actioncard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameOperateNotify::clear_actioncard() {
  actioncard_ = 0;
  clear_has_actioncard();
}
inline ::google::protobuf::int32 ProJDDDZGameOperateNotify::actioncard() const {
  return actioncard_;
}
inline void ProJDDDZGameOperateNotify::set_actioncard(::google::protobuf::int32 value) {
  set_has_actioncard();
  actioncard_ = value;
}

// optional int32 time = 5;
inline bool ProJDDDZGameOperateNotify::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProJDDDZGameOperateNotify::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProJDDDZGameOperateNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProJDDDZGameOperateNotify::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProJDDDZGameOperateNotify::time() const {
  return time_;
}
inline void ProJDDDZGameOperateNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 operateseat = 6;
inline bool ProJDDDZGameOperateNotify::has_operateseat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProJDDDZGameOperateNotify::set_has_operateseat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProJDDDZGameOperateNotify::clear_has_operateseat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProJDDDZGameOperateNotify::clear_operateseat() {
  operateseat_ = 0;
  clear_has_operateseat();
}
inline ::google::protobuf::int32 ProJDDDZGameOperateNotify::operateseat() const {
  return operateseat_;
}
inline void ProJDDDZGameOperateNotify::set_operateseat(::google::protobuf::int32 value) {
  set_has_operateseat();
  operateseat_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameOperateResult

// optional int32 wOperateUser = 2;
inline bool ProJDDDZGameOperateResult::has_woperateuser() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameOperateResult::set_has_woperateuser() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameOperateResult::clear_has_woperateuser() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameOperateResult::clear_woperateuser() {
  woperateuser_ = 0;
  clear_has_woperateuser();
}
inline ::google::protobuf::int32 ProJDDDZGameOperateResult::woperateuser() const {
  return woperateuser_;
}
inline void ProJDDDZGameOperateResult::set_woperateuser(::google::protobuf::int32 value) {
  set_has_woperateuser();
  woperateuser_ = value;
}

// optional int32 wProvideUser = 3;
inline bool ProJDDDZGameOperateResult::has_wprovideuser() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameOperateResult::set_has_wprovideuser() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameOperateResult::clear_has_wprovideuser() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameOperateResult::clear_wprovideuser() {
  wprovideuser_ = 0;
  clear_has_wprovideuser();
}
inline ::google::protobuf::int32 ProJDDDZGameOperateResult::wprovideuser() const {
  return wprovideuser_;
}
inline void ProJDDDZGameOperateResult::set_wprovideuser(::google::protobuf::int32 value) {
  set_has_wprovideuser();
  wprovideuser_ = value;
}

// optional int32 wOperateCode = 4;
inline bool ProJDDDZGameOperateResult::has_woperatecode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameOperateResult::set_has_woperatecode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameOperateResult::clear_has_woperatecode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameOperateResult::clear_woperatecode() {
  woperatecode_ = 0;
  clear_has_woperatecode();
}
inline ::google::protobuf::int32 ProJDDDZGameOperateResult::woperatecode() const {
  return woperatecode_;
}
inline void ProJDDDZGameOperateResult::set_woperatecode(::google::protobuf::int32 value) {
  set_has_woperatecode();
  woperatecode_ = value;
}

// optional int32 cbOperateCard = 5;
inline bool ProJDDDZGameOperateResult::has_cboperatecard() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProJDDDZGameOperateResult::set_has_cboperatecard() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProJDDDZGameOperateResult::clear_has_cboperatecard() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProJDDDZGameOperateResult::clear_cboperatecard() {
  cboperatecard_ = 0;
  clear_has_cboperatecard();
}
inline ::google::protobuf::int32 ProJDDDZGameOperateResult::cboperatecard() const {
  return cboperatecard_;
}
inline void ProJDDDZGameOperateResult::set_cboperatecard(::google::protobuf::int32 value) {
  set_has_cboperatecard();
  cboperatecard_ = value;
}

// repeated int32 handmahs = 6;
inline int ProJDDDZGameOperateResult::handmahs_size() const {
  return handmahs_.size();
}
inline void ProJDDDZGameOperateResult::clear_handmahs() {
  handmahs_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameOperateResult::handmahs(int index) const {
  return handmahs_.Get(index);
}
inline void ProJDDDZGameOperateResult::set_handmahs(int index, ::google::protobuf::int32 value) {
  handmahs_.Set(index, value);
}
inline void ProJDDDZGameOperateResult::add_handmahs(::google::protobuf::int32 value) {
  handmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameOperateResult::handmahs() const {
  return handmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameOperateResult::mutable_handmahs() {
  return &handmahs_;
}

// optional int32 handcount = 7;
inline bool ProJDDDZGameOperateResult::has_handcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProJDDDZGameOperateResult::set_has_handcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProJDDDZGameOperateResult::clear_has_handcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProJDDDZGameOperateResult::clear_handcount() {
  handcount_ = 0;
  clear_has_handcount();
}
inline ::google::protobuf::int32 ProJDDDZGameOperateResult::handcount() const {
  return handcount_;
}
inline void ProJDDDZGameOperateResult::set_handcount(::google::protobuf::int32 value) {
  set_has_handcount();
  handcount_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameOperateRequest

// optional int32 seat = 2;
inline bool ProJDDDZGameOperateRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameOperateRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameOperateRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameOperateRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameOperateRequest::seat() const {
  return seat_;
}
inline void ProJDDDZGameOperateRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 wOperateCode = 3;
inline bool ProJDDDZGameOperateRequest::has_woperatecode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameOperateRequest::set_has_woperatecode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameOperateRequest::clear_has_woperatecode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameOperateRequest::clear_woperatecode() {
  woperatecode_ = 0;
  clear_has_woperatecode();
}
inline ::google::protobuf::int32 ProJDDDZGameOperateRequest::woperatecode() const {
  return woperatecode_;
}
inline void ProJDDDZGameOperateRequest::set_woperatecode(::google::protobuf::int32 value) {
  set_has_woperatecode();
  woperatecode_ = value;
}

// optional int32 cbOperateCard = 4;
inline bool ProJDDDZGameOperateRequest::has_cboperatecard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameOperateRequest::set_has_cboperatecard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameOperateRequest::clear_has_cboperatecard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameOperateRequest::clear_cboperatecard() {
  cboperatecard_ = 0;
  clear_has_cboperatecard();
}
inline ::google::protobuf::int32 ProJDDDZGameOperateRequest::cboperatecard() const {
  return cboperatecard_;
}
inline void ProJDDDZGameOperateRequest::set_cboperatecard(::google::protobuf::int32 value) {
  set_has_cboperatecard();
  cboperatecard_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameTrust

// optional int32 seat = 2;
inline bool ProJDDDZGameTrust::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameTrust::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameTrust::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameTrust::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameTrust::seat() const {
  return seat_;
}
inline void ProJDDDZGameTrust::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool isTrust = 3;
inline bool ProJDDDZGameTrust::has_istrust() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameTrust::set_has_istrust() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameTrust::clear_has_istrust() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameTrust::clear_istrust() {
  istrust_ = false;
  clear_has_istrust();
}
inline bool ProJDDDZGameTrust::istrust() const {
  return istrust_;
}
inline void ProJDDDZGameTrust::set_istrust(bool value) {
  set_has_istrust();
  istrust_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameOutMahRequest

// optional int32 seat = 2;
inline bool ProJDDDZGameOutMahRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameOutMahRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameOutMahRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameOutMahRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameOutMahRequest::seat() const {
  return seat_;
}
inline void ProJDDDZGameOutMahRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 outMahs = 3;
inline int ProJDDDZGameOutMahRequest::outmahs_size() const {
  return outmahs_.size();
}
inline void ProJDDDZGameOutMahRequest::clear_outmahs() {
  outmahs_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameOutMahRequest::outmahs(int index) const {
  return outmahs_.Get(index);
}
inline void ProJDDDZGameOutMahRequest::set_outmahs(int index, ::google::protobuf::int32 value) {
  outmahs_.Set(index, value);
}
inline void ProJDDDZGameOutMahRequest::add_outmahs(::google::protobuf::int32 value) {
  outmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameOutMahRequest::outmahs() const {
  return outmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameOutMahRequest::mutable_outmahs() {
  return &outmahs_;
}

// repeated int32 noChangeMahs = 4;
inline int ProJDDDZGameOutMahRequest::nochangemahs_size() const {
  return nochangemahs_.size();
}
inline void ProJDDDZGameOutMahRequest::clear_nochangemahs() {
  nochangemahs_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameOutMahRequest::nochangemahs(int index) const {
  return nochangemahs_.Get(index);
}
inline void ProJDDDZGameOutMahRequest::set_nochangemahs(int index, ::google::protobuf::int32 value) {
  nochangemahs_.Set(index, value);
}
inline void ProJDDDZGameOutMahRequest::add_nochangemahs(::google::protobuf::int32 value) {
  nochangemahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameOutMahRequest::nochangemahs() const {
  return nochangemahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameOutMahRequest::mutable_nochangemahs() {
  return &nochangemahs_;
}

// -------------------------------------------------------------------

// ProJDDDZGameCatchCard

// optional int32 seat = 2;
inline bool ProJDDDZGameCatchCard::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameCatchCard::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameCatchCard::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameCatchCard::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameCatchCard::seat() const {
  return seat_;
}
inline void ProJDDDZGameCatchCard::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 cbCardData = 3;
inline bool ProJDDDZGameCatchCard::has_cbcarddata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameCatchCard::set_has_cbcarddata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameCatchCard::clear_has_cbcarddata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameCatchCard::clear_cbcarddata() {
  cbcarddata_ = 0;
  clear_has_cbcarddata();
}
inline ::google::protobuf::int32 ProJDDDZGameCatchCard::cbcarddata() const {
  return cbcarddata_;
}
inline void ProJDDDZGameCatchCard::set_cbcarddata(::google::protobuf::int32 value) {
  set_has_cbcarddata();
  cbcarddata_ = value;
}

// optional int32 wActionMask = 4;
inline bool ProJDDDZGameCatchCard::has_wactionmask() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameCatchCard::set_has_wactionmask() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameCatchCard::clear_has_wactionmask() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameCatchCard::clear_wactionmask() {
  wactionmask_ = 0;
  clear_has_wactionmask();
}
inline ::google::protobuf::int32 ProJDDDZGameCatchCard::wactionmask() const {
  return wactionmask_;
}
inline void ProJDDDZGameCatchCard::set_wactionmask(::google::protobuf::int32 value) {
  set_has_wactionmask();
  wactionmask_ = value;
}

// optional bool cbIsNotGang = 5;
inline bool ProJDDDZGameCatchCard::has_cbisnotgang() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProJDDDZGameCatchCard::set_has_cbisnotgang() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProJDDDZGameCatchCard::clear_has_cbisnotgang() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProJDDDZGameCatchCard::clear_cbisnotgang() {
  cbisnotgang_ = false;
  clear_has_cbisnotgang();
}
inline bool ProJDDDZGameCatchCard::cbisnotgang() const {
  return cbisnotgang_;
}
inline void ProJDDDZGameCatchCard::set_cbisnotgang(bool value) {
  set_has_cbisnotgang();
  cbisnotgang_ = value;
}

// optional int32 cbLeftCount = 6;
inline bool ProJDDDZGameCatchCard::has_cbleftcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProJDDDZGameCatchCard::set_has_cbleftcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProJDDDZGameCatchCard::clear_has_cbleftcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProJDDDZGameCatchCard::clear_cbleftcount() {
  cbleftcount_ = 0;
  clear_has_cbleftcount();
}
inline ::google::protobuf::int32 ProJDDDZGameCatchCard::cbleftcount() const {
  return cbleftcount_;
}
inline void ProJDDDZGameCatchCard::set_cbleftcount(::google::protobuf::int32 value) {
  set_has_cbleftcount();
  cbleftcount_ = value;
}

// -------------------------------------------------------------------

// JDDDZMahList

// repeated int32 Mahs = 1;
inline int JDDDZMahList::mahs_size() const {
  return mahs_.size();
}
inline void JDDDZMahList::clear_mahs() {
  mahs_.Clear();
}
inline ::google::protobuf::int32 JDDDZMahList::mahs(int index) const {
  return mahs_.Get(index);
}
inline void JDDDZMahList::set_mahs(int index, ::google::protobuf::int32 value) {
  mahs_.Set(index, value);
}
inline void JDDDZMahList::add_mahs(::google::protobuf::int32 value) {
  mahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
JDDDZMahList::mahs() const {
  return mahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
JDDDZMahList::mutable_mahs() {
  return &mahs_;
}

// -------------------------------------------------------------------

// JDDDZScoreList

// repeated int32 roundScore = 1;
inline int JDDDZScoreList::roundscore_size() const {
  return roundscore_.size();
}
inline void JDDDZScoreList::clear_roundscore() {
  roundscore_.Clear();
}
inline ::google::protobuf::int32 JDDDZScoreList::roundscore(int index) const {
  return roundscore_.Get(index);
}
inline void JDDDZScoreList::set_roundscore(int index, ::google::protobuf::int32 value) {
  roundscore_.Set(index, value);
}
inline void JDDDZScoreList::add_roundscore(::google::protobuf::int32 value) {
  roundscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
JDDDZScoreList::roundscore() const {
  return roundscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
JDDDZScoreList::mutable_roundscore() {
  return &roundscore_;
}

// -------------------------------------------------------------------

// JDDDZAwardList

// optional int32 seat = 1;
inline bool JDDDZAwardList::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JDDDZAwardList::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JDDDZAwardList::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JDDDZAwardList::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 JDDDZAwardList::seat() const {
  return seat_;
}
inline void JDDDZAwardList::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 CardsData = 2;
inline int JDDDZAwardList::cardsdata_size() const {
  return cardsdata_.size();
}
inline void JDDDZAwardList::clear_cardsdata() {
  cardsdata_.Clear();
}
inline ::google::protobuf::int32 JDDDZAwardList::cardsdata(int index) const {
  return cardsdata_.Get(index);
}
inline void JDDDZAwardList::set_cardsdata(int index, ::google::protobuf::int32 value) {
  cardsdata_.Set(index, value);
}
inline void JDDDZAwardList::add_cardsdata(::google::protobuf::int32 value) {
  cardsdata_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
JDDDZAwardList::cardsdata() const {
  return cardsdata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
JDDDZAwardList::mutable_cardsdata() {
  return &cardsdata_;
}

// optional int32 awardScore = 3;
inline bool JDDDZAwardList::has_awardscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JDDDZAwardList::set_has_awardscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JDDDZAwardList::clear_has_awardscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JDDDZAwardList::clear_awardscore() {
  awardscore_ = 0;
  clear_has_awardscore();
}
inline ::google::protobuf::int32 JDDDZAwardList::awardscore() const {
  return awardscore_;
}
inline void JDDDZAwardList::set_awardscore(::google::protobuf::int32 value) {
  set_has_awardscore();
  awardscore_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameEnd

// optional int32 lGameTax = 2;
inline bool ProJDDDZGameEnd::has_lgametax() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameEnd::set_has_lgametax() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameEnd::clear_has_lgametax() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameEnd::clear_lgametax() {
  lgametax_ = 0;
  clear_has_lgametax();
}
inline ::google::protobuf::int32 ProJDDDZGameEnd::lgametax() const {
  return lgametax_;
}
inline void ProJDDDZGameEnd::set_lgametax(::google::protobuf::int32 value) {
  set_has_lgametax();
  lgametax_ = value;
}

// repeated int32 cbChongGuang = 3;
inline int ProJDDDZGameEnd::cbchongguang_size() const {
  return cbchongguang_.size();
}
inline void ProJDDDZGameEnd::clear_cbchongguang() {
  cbchongguang_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameEnd::cbchongguang(int index) const {
  return cbchongguang_.Get(index);
}
inline void ProJDDDZGameEnd::set_cbchongguang(int index, ::google::protobuf::int32 value) {
  cbchongguang_.Set(index, value);
}
inline void ProJDDDZGameEnd::add_cbchongguang(::google::protobuf::int32 value) {
  cbchongguang_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameEnd::cbchongguang() const {
  return cbchongguang_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameEnd::mutable_cbchongguang() {
  return &cbchongguang_;
}

// repeated int32 cbBaWangKing = 4;
inline int ProJDDDZGameEnd::cbbawangking_size() const {
  return cbbawangking_.size();
}
inline void ProJDDDZGameEnd::clear_cbbawangking() {
  cbbawangking_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameEnd::cbbawangking(int index) const {
  return cbbawangking_.Get(index);
}
inline void ProJDDDZGameEnd::set_cbbawangking(int index, ::google::protobuf::int32 value) {
  cbbawangking_.Set(index, value);
}
inline void ProJDDDZGameEnd::add_cbbawangking(::google::protobuf::int32 value) {
  cbbawangking_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameEnd::cbbawangking() const {
  return cbbawangking_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameEnd::mutable_cbbawangking() {
  return &cbbawangking_;
}

// optional int32 wProvideUser = 5;
inline bool ProJDDDZGameEnd::has_wprovideuser() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProJDDDZGameEnd::set_has_wprovideuser() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProJDDDZGameEnd::clear_has_wprovideuser() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProJDDDZGameEnd::clear_wprovideuser() {
  wprovideuser_ = 0;
  clear_has_wprovideuser();
}
inline ::google::protobuf::int32 ProJDDDZGameEnd::wprovideuser() const {
  return wprovideuser_;
}
inline void ProJDDDZGameEnd::set_wprovideuser(::google::protobuf::int32 value) {
  set_has_wprovideuser();
  wprovideuser_ = value;
}

// optional int32 cbChiHuCard = 6;
inline bool ProJDDDZGameEnd::has_cbchihucard() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProJDDDZGameEnd::set_has_cbchihucard() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProJDDDZGameEnd::clear_has_cbchihucard() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProJDDDZGameEnd::clear_cbchihucard() {
  cbchihucard_ = 0;
  clear_has_cbchihucard();
}
inline ::google::protobuf::int32 ProJDDDZGameEnd::cbchihucard() const {
  return cbchihucard_;
}
inline void ProJDDDZGameEnd::set_cbchihucard(::google::protobuf::int32 value) {
  set_has_cbchihucard();
  cbchihucard_ = value;
}

// repeated int32 dwChiHuKind = 7;
inline int ProJDDDZGameEnd::dwchihukind_size() const {
  return dwchihukind_.size();
}
inline void ProJDDDZGameEnd::clear_dwchihukind() {
  dwchihukind_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameEnd::dwchihukind(int index) const {
  return dwchihukind_.Get(index);
}
inline void ProJDDDZGameEnd::set_dwchihukind(int index, ::google::protobuf::int32 value) {
  dwchihukind_.Set(index, value);
}
inline void ProJDDDZGameEnd::add_dwchihukind(::google::protobuf::int32 value) {
  dwchihukind_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameEnd::dwchihukind() const {
  return dwchihukind_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameEnd::mutable_dwchihukind() {
  return &dwchihukind_;
}

// repeated int32 dwChiHuRight = 8;
inline int ProJDDDZGameEnd::dwchihuright_size() const {
  return dwchihuright_.size();
}
inline void ProJDDDZGameEnd::clear_dwchihuright() {
  dwchihuright_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameEnd::dwchihuright(int index) const {
  return dwchihuright_.Get(index);
}
inline void ProJDDDZGameEnd::set_dwchihuright(int index, ::google::protobuf::int32 value) {
  dwchihuright_.Set(index, value);
}
inline void ProJDDDZGameEnd::add_dwchihuright(::google::protobuf::int32 value) {
  dwchihuright_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameEnd::dwchihuright() const {
  return dwchihuright_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameEnd::mutable_dwchihuright() {
  return &dwchihuright_;
}

// repeated int32 lTotaslGameScore = 9;
inline int ProJDDDZGameEnd::ltotaslgamescore_size() const {
  return ltotaslgamescore_.size();
}
inline void ProJDDDZGameEnd::clear_ltotaslgamescore() {
  ltotaslgamescore_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameEnd::ltotaslgamescore(int index) const {
  return ltotaslgamescore_.Get(index);
}
inline void ProJDDDZGameEnd::set_ltotaslgamescore(int index, ::google::protobuf::int32 value) {
  ltotaslgamescore_.Set(index, value);
}
inline void ProJDDDZGameEnd::add_ltotaslgamescore(::google::protobuf::int32 value) {
  ltotaslgamescore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameEnd::ltotaslgamescore() const {
  return ltotaslgamescore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameEnd::mutable_ltotaslgamescore() {
  return &ltotaslgamescore_;
}

// repeated int32 lCurrentGameScore = 10;
inline int ProJDDDZGameEnd::lcurrentgamescore_size() const {
  return lcurrentgamescore_.size();
}
inline void ProJDDDZGameEnd::clear_lcurrentgamescore() {
  lcurrentgamescore_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameEnd::lcurrentgamescore(int index) const {
  return lcurrentgamescore_.Get(index);
}
inline void ProJDDDZGameEnd::set_lcurrentgamescore(int index, ::google::protobuf::int32 value) {
  lcurrentgamescore_.Set(index, value);
}
inline void ProJDDDZGameEnd::add_lcurrentgamescore(::google::protobuf::int32 value) {
  lcurrentgamescore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameEnd::lcurrentgamescore() const {
  return lcurrentgamescore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameEnd::mutable_lcurrentgamescore() {
  return &lcurrentgamescore_;
}

// repeated int32 lCurrentPointScore = 11;
inline int ProJDDDZGameEnd::lcurrentpointscore_size() const {
  return lcurrentpointscore_.size();
}
inline void ProJDDDZGameEnd::clear_lcurrentpointscore() {
  lcurrentpointscore_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameEnd::lcurrentpointscore(int index) const {
  return lcurrentpointscore_.Get(index);
}
inline void ProJDDDZGameEnd::set_lcurrentpointscore(int index, ::google::protobuf::int32 value) {
  lcurrentpointscore_.Set(index, value);
}
inline void ProJDDDZGameEnd::add_lcurrentpointscore(::google::protobuf::int32 value) {
  lcurrentpointscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameEnd::lcurrentpointscore() const {
  return lcurrentpointscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameEnd::mutable_lcurrentpointscore() {
  return &lcurrentpointscore_;
}

// repeated int32 lAttachScore = 12;
inline int ProJDDDZGameEnd::lattachscore_size() const {
  return lattachscore_.size();
}
inline void ProJDDDZGameEnd::clear_lattachscore() {
  lattachscore_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameEnd::lattachscore(int index) const {
  return lattachscore_.Get(index);
}
inline void ProJDDDZGameEnd::set_lattachscore(int index, ::google::protobuf::int32 value) {
  lattachscore_.Set(index, value);
}
inline void ProJDDDZGameEnd::add_lattachscore(::google::protobuf::int32 value) {
  lattachscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameEnd::lattachscore() const {
  return lattachscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameEnd::mutable_lattachscore() {
  return &lattachscore_;
}

// repeated .JDDDZMahList cbHandCardData = 13;
inline int ProJDDDZGameEnd::cbhandcarddata_size() const {
  return cbhandcarddata_.size();
}
inline void ProJDDDZGameEnd::clear_cbhandcarddata() {
  cbhandcarddata_.Clear();
}
inline const ::JDDDZMahList& ProJDDDZGameEnd::cbhandcarddata(int index) const {
  return cbhandcarddata_.Get(index);
}
inline ::JDDDZMahList* ProJDDDZGameEnd::mutable_cbhandcarddata(int index) {
  return cbhandcarddata_.Mutable(index);
}
inline ::JDDDZMahList* ProJDDDZGameEnd::add_cbhandcarddata() {
  return cbhandcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::JDDDZMahList >&
ProJDDDZGameEnd::cbhandcarddata() const {
  return cbhandcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::JDDDZMahList >*
ProJDDDZGameEnd::mutable_cbhandcarddata() {
  return &cbhandcarddata_;
}

// repeated .JDDDZAwardList cbAwardCardData = 14;
inline int ProJDDDZGameEnd::cbawardcarddata_size() const {
  return cbawardcarddata_.size();
}
inline void ProJDDDZGameEnd::clear_cbawardcarddata() {
  cbawardcarddata_.Clear();
}
inline const ::JDDDZAwardList& ProJDDDZGameEnd::cbawardcarddata(int index) const {
  return cbawardcarddata_.Get(index);
}
inline ::JDDDZAwardList* ProJDDDZGameEnd::mutable_cbawardcarddata(int index) {
  return cbawardcarddata_.Mutable(index);
}
inline ::JDDDZAwardList* ProJDDDZGameEnd::add_cbawardcarddata() {
  return cbawardcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::JDDDZAwardList >&
ProJDDDZGameEnd::cbawardcarddata() const {
  return cbawardcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::JDDDZAwardList >*
ProJDDDZGameEnd::mutable_cbawardcarddata() {
  return &cbawardcarddata_;
}

// repeated int32 lOnlyWinScore = 15;
inline int ProJDDDZGameEnd::lonlywinscore_size() const {
  return lonlywinscore_.size();
}
inline void ProJDDDZGameEnd::clear_lonlywinscore() {
  lonlywinscore_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameEnd::lonlywinscore(int index) const {
  return lonlywinscore_.Get(index);
}
inline void ProJDDDZGameEnd::set_lonlywinscore(int index, ::google::protobuf::int32 value) {
  lonlywinscore_.Set(index, value);
}
inline void ProJDDDZGameEnd::add_lonlywinscore(::google::protobuf::int32 value) {
  lonlywinscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameEnd::lonlywinscore() const {
  return lonlywinscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameEnd::mutable_lonlywinscore() {
  return &lonlywinscore_;
}

// optional bool bRoundEnd = 16;
inline bool ProJDDDZGameEnd::has_broundend() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ProJDDDZGameEnd::set_has_broundend() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ProJDDDZGameEnd::clear_has_broundend() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ProJDDDZGameEnd::clear_broundend() {
  broundend_ = false;
  clear_has_broundend();
}
inline bool ProJDDDZGameEnd::broundend() const {
  return broundend_;
}
inline void ProJDDDZGameEnd::set_broundend(bool value) {
  set_has_broundend();
  broundend_ = value;
}

// repeated int32 lHuiTouScore = 17;
inline int ProJDDDZGameEnd::lhuitouscore_size() const {
  return lhuitouscore_.size();
}
inline void ProJDDDZGameEnd::clear_lhuitouscore() {
  lhuitouscore_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameEnd::lhuitouscore(int index) const {
  return lhuitouscore_.Get(index);
}
inline void ProJDDDZGameEnd::set_lhuitouscore(int index, ::google::protobuf::int32 value) {
  lhuitouscore_.Set(index, value);
}
inline void ProJDDDZGameEnd::add_lhuitouscore(::google::protobuf::int32 value) {
  lhuitouscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameEnd::lhuitouscore() const {
  return lhuitouscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameEnd::mutable_lhuitouscore() {
  return &lhuitouscore_;
}

// optional bool bZhuangWin = 18;
inline bool ProJDDDZGameEnd::has_bzhuangwin() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ProJDDDZGameEnd::set_has_bzhuangwin() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ProJDDDZGameEnd::clear_has_bzhuangwin() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ProJDDDZGameEnd::clear_bzhuangwin() {
  bzhuangwin_ = false;
  clear_has_bzhuangwin();
}
inline bool ProJDDDZGameEnd::bzhuangwin() const {
  return bzhuangwin_;
}
inline void ProJDDDZGameEnd::set_bzhuangwin(bool value) {
  set_has_bzhuangwin();
  bzhuangwin_ = value;
}

// repeated int32 cbJiangMaCardData = 19;
inline int ProJDDDZGameEnd::cbjiangmacarddata_size() const {
  return cbjiangmacarddata_.size();
}
inline void ProJDDDZGameEnd::clear_cbjiangmacarddata() {
  cbjiangmacarddata_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameEnd::cbjiangmacarddata(int index) const {
  return cbjiangmacarddata_.Get(index);
}
inline void ProJDDDZGameEnd::set_cbjiangmacarddata(int index, ::google::protobuf::int32 value) {
  cbjiangmacarddata_.Set(index, value);
}
inline void ProJDDDZGameEnd::add_cbjiangmacarddata(::google::protobuf::int32 value) {
  cbjiangmacarddata_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameEnd::cbjiangmacarddata() const {
  return cbjiangmacarddata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameEnd::mutable_cbjiangmacarddata() {
  return &cbjiangmacarddata_;
}

// repeated .JDDDZScoreList detailedScores = 20;
inline int ProJDDDZGameEnd::detailedscores_size() const {
  return detailedscores_.size();
}
inline void ProJDDDZGameEnd::clear_detailedscores() {
  detailedscores_.Clear();
}
inline const ::JDDDZScoreList& ProJDDDZGameEnd::detailedscores(int index) const {
  return detailedscores_.Get(index);
}
inline ::JDDDZScoreList* ProJDDDZGameEnd::mutable_detailedscores(int index) {
  return detailedscores_.Mutable(index);
}
inline ::JDDDZScoreList* ProJDDDZGameEnd::add_detailedscores() {
  return detailedscores_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::JDDDZScoreList >&
ProJDDDZGameEnd::detailedscores() const {
  return detailedscores_;
}
inline ::google::protobuf::RepeatedPtrField< ::JDDDZScoreList >*
ProJDDDZGameEnd::mutable_detailedscores() {
  return &detailedscores_;
}

// -------------------------------------------------------------------

// ProJDDDZGameQuickSoundRequest

// optional int32 desk_id = 2;
inline bool ProJDDDZGameQuickSoundRequest::has_desk_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameQuickSoundRequest::set_has_desk_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameQuickSoundRequest::clear_has_desk_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameQuickSoundRequest::clear_desk_id() {
  desk_id_ = 0;
  clear_has_desk_id();
}
inline ::google::protobuf::int32 ProJDDDZGameQuickSoundRequest::desk_id() const {
  return desk_id_;
}
inline void ProJDDDZGameQuickSoundRequest::set_desk_id(::google::protobuf::int32 value) {
  set_has_desk_id();
  desk_id_ = value;
}

// optional int32 seat_id = 3;
inline bool ProJDDDZGameQuickSoundRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameQuickSoundRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameQuickSoundRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameQuickSoundRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProJDDDZGameQuickSoundRequest::seat_id() const {
  return seat_id_;
}
inline void ProJDDDZGameQuickSoundRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional int32 sound_id = 4;
inline bool ProJDDDZGameQuickSoundRequest::has_sound_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameQuickSoundRequest::set_has_sound_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameQuickSoundRequest::clear_has_sound_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameQuickSoundRequest::clear_sound_id() {
  sound_id_ = 0;
  clear_has_sound_id();
}
inline ::google::protobuf::int32 ProJDDDZGameQuickSoundRequest::sound_id() const {
  return sound_id_;
}
inline void ProJDDDZGameQuickSoundRequest::set_sound_id(::google::protobuf::int32 value) {
  set_has_sound_id();
  sound_id_ = value;
}

// optional bytes text = 5;
inline bool ProJDDDZGameQuickSoundRequest::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProJDDDZGameQuickSoundRequest::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProJDDDZGameQuickSoundRequest::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProJDDDZGameQuickSoundRequest::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& ProJDDDZGameQuickSoundRequest::text() const {
  return *text_;
}
inline void ProJDDDZGameQuickSoundRequest::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProJDDDZGameQuickSoundRequest::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProJDDDZGameQuickSoundRequest::set_text(const void* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProJDDDZGameQuickSoundRequest::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* ProJDDDZGameQuickSoundRequest::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProJDDDZGameQuickSoundRequest::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProJDDDZGameQuickSoundResponse

// optional int32 desk_id = 2;
inline bool ProJDDDZGameQuickSoundResponse::has_desk_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameQuickSoundResponse::set_has_desk_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameQuickSoundResponse::clear_has_desk_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameQuickSoundResponse::clear_desk_id() {
  desk_id_ = 0;
  clear_has_desk_id();
}
inline ::google::protobuf::int32 ProJDDDZGameQuickSoundResponse::desk_id() const {
  return desk_id_;
}
inline void ProJDDDZGameQuickSoundResponse::set_desk_id(::google::protobuf::int32 value) {
  set_has_desk_id();
  desk_id_ = value;
}

// optional int32 seat_id = 3;
inline bool ProJDDDZGameQuickSoundResponse::has_seat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameQuickSoundResponse::set_has_seat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameQuickSoundResponse::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameQuickSoundResponse::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProJDDDZGameQuickSoundResponse::seat_id() const {
  return seat_id_;
}
inline void ProJDDDZGameQuickSoundResponse::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional int32 sound_id = 4;
inline bool ProJDDDZGameQuickSoundResponse::has_sound_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameQuickSoundResponse::set_has_sound_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameQuickSoundResponse::clear_has_sound_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameQuickSoundResponse::clear_sound_id() {
  sound_id_ = 0;
  clear_has_sound_id();
}
inline ::google::protobuf::int32 ProJDDDZGameQuickSoundResponse::sound_id() const {
  return sound_id_;
}
inline void ProJDDDZGameQuickSoundResponse::set_sound_id(::google::protobuf::int32 value) {
  set_has_sound_id();
  sound_id_ = value;
}

// optional bytes text = 5;
inline bool ProJDDDZGameQuickSoundResponse::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProJDDDZGameQuickSoundResponse::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProJDDDZGameQuickSoundResponse::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProJDDDZGameQuickSoundResponse::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& ProJDDDZGameQuickSoundResponse::text() const {
  return *text_;
}
inline void ProJDDDZGameQuickSoundResponse::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProJDDDZGameQuickSoundResponse::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProJDDDZGameQuickSoundResponse::set_text(const void* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProJDDDZGameQuickSoundResponse::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* ProJDDDZGameQuickSoundResponse::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProJDDDZGameQuickSoundResponse::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProJDDDZGameSendDiscardMahs

// optional int32 seat_id = 2;
inline bool ProJDDDZGameSendDiscardMahs::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameSendDiscardMahs::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameSendDiscardMahs::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameSendDiscardMahs::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProJDDDZGameSendDiscardMahs::seat_id() const {
  return seat_id_;
}
inline void ProJDDDZGameSendDiscardMahs::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// repeated .JDDDZMahList cbCardData = 3;
inline int ProJDDDZGameSendDiscardMahs::cbcarddata_size() const {
  return cbcarddata_.size();
}
inline void ProJDDDZGameSendDiscardMahs::clear_cbcarddata() {
  cbcarddata_.Clear();
}
inline const ::JDDDZMahList& ProJDDDZGameSendDiscardMahs::cbcarddata(int index) const {
  return cbcarddata_.Get(index);
}
inline ::JDDDZMahList* ProJDDDZGameSendDiscardMahs::mutable_cbcarddata(int index) {
  return cbcarddata_.Mutable(index);
}
inline ::JDDDZMahList* ProJDDDZGameSendDiscardMahs::add_cbcarddata() {
  return cbcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::JDDDZMahList >&
ProJDDDZGameSendDiscardMahs::cbcarddata() const {
  return cbcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::JDDDZMahList >*
ProJDDDZGameSendDiscardMahs::mutable_cbcarddata() {
  return &cbcarddata_;
}

// optional int32 deskCount = 4;
inline bool ProJDDDZGameSendDiscardMahs::has_deskcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameSendDiscardMahs::set_has_deskcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameSendDiscardMahs::clear_has_deskcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameSendDiscardMahs::clear_deskcount() {
  deskcount_ = 0;
  clear_has_deskcount();
}
inline ::google::protobuf::int32 ProJDDDZGameSendDiscardMahs::deskcount() const {
  return deskcount_;
}
inline void ProJDDDZGameSendDiscardMahs::set_deskcount(::google::protobuf::int32 value) {
  set_has_deskcount();
  deskcount_ = value;
}

// repeated int32 outCardCount = 5;
inline int ProJDDDZGameSendDiscardMahs::outcardcount_size() const {
  return outcardcount_.size();
}
inline void ProJDDDZGameSendDiscardMahs::clear_outcardcount() {
  outcardcount_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameSendDiscardMahs::outcardcount(int index) const {
  return outcardcount_.Get(index);
}
inline void ProJDDDZGameSendDiscardMahs::set_outcardcount(int index, ::google::protobuf::int32 value) {
  outcardcount_.Set(index, value);
}
inline void ProJDDDZGameSendDiscardMahs::add_outcardcount(::google::protobuf::int32 value) {
  outcardcount_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameSendDiscardMahs::outcardcount() const {
  return outcardcount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameSendDiscardMahs::mutable_outcardcount() {
  return &outcardcount_;
}

// -------------------------------------------------------------------

// JDDDZWeaveItem

// optional int32 weaveKind = 1;
inline bool JDDDZWeaveItem::has_weavekind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JDDDZWeaveItem::set_has_weavekind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JDDDZWeaveItem::clear_has_weavekind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JDDDZWeaveItem::clear_weavekind() {
  weavekind_ = 0;
  clear_has_weavekind();
}
inline ::google::protobuf::int32 JDDDZWeaveItem::weavekind() const {
  return weavekind_;
}
inline void JDDDZWeaveItem::set_weavekind(::google::protobuf::int32 value) {
  set_has_weavekind();
  weavekind_ = value;
}

// optional int32 centercard = 2;
inline bool JDDDZWeaveItem::has_centercard() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JDDDZWeaveItem::set_has_centercard() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JDDDZWeaveItem::clear_has_centercard() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JDDDZWeaveItem::clear_centercard() {
  centercard_ = 0;
  clear_has_centercard();
}
inline ::google::protobuf::int32 JDDDZWeaveItem::centercard() const {
  return centercard_;
}
inline void JDDDZWeaveItem::set_centercard(::google::protobuf::int32 value) {
  set_has_centercard();
  centercard_ = value;
}

// optional int32 provideUser = 3;
inline bool JDDDZWeaveItem::has_provideuser() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JDDDZWeaveItem::set_has_provideuser() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JDDDZWeaveItem::clear_has_provideuser() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JDDDZWeaveItem::clear_provideuser() {
  provideuser_ = 0;
  clear_has_provideuser();
}
inline ::google::protobuf::int32 JDDDZWeaveItem::provideuser() const {
  return provideuser_;
}
inline void JDDDZWeaveItem::set_provideuser(::google::protobuf::int32 value) {
  set_has_provideuser();
  provideuser_ = value;
}

// optional int32 cardsize = 4;
inline bool JDDDZWeaveItem::has_cardsize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JDDDZWeaveItem::set_has_cardsize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JDDDZWeaveItem::clear_has_cardsize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JDDDZWeaveItem::clear_cardsize() {
  cardsize_ = 0;
  clear_has_cardsize();
}
inline ::google::protobuf::int32 JDDDZWeaveItem::cardsize() const {
  return cardsize_;
}
inline void JDDDZWeaveItem::set_cardsize(::google::protobuf::int32 value) {
  set_has_cardsize();
  cardsize_ = value;
}

// -------------------------------------------------------------------

// JDDDZWeaveItems

// repeated .JDDDZWeaveItem items = 1;
inline int JDDDZWeaveItems::items_size() const {
  return items_.size();
}
inline void JDDDZWeaveItems::clear_items() {
  items_.Clear();
}
inline const ::JDDDZWeaveItem& JDDDZWeaveItems::items(int index) const {
  return items_.Get(index);
}
inline ::JDDDZWeaveItem* JDDDZWeaveItems::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::JDDDZWeaveItem* JDDDZWeaveItems::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::JDDDZWeaveItem >&
JDDDZWeaveItems::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::JDDDZWeaveItem >*
JDDDZWeaveItems::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// ProJDDDZGameSendActionMahs

// optional int32 seat_id = 2;
inline bool ProJDDDZGameSendActionMahs::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameSendActionMahs::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameSendActionMahs::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameSendActionMahs::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProJDDDZGameSendActionMahs::seat_id() const {
  return seat_id_;
}
inline void ProJDDDZGameSendActionMahs::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// repeated .JDDDZWeaveItems weaves = 3;
inline int ProJDDDZGameSendActionMahs::weaves_size() const {
  return weaves_.size();
}
inline void ProJDDDZGameSendActionMahs::clear_weaves() {
  weaves_.Clear();
}
inline const ::JDDDZWeaveItems& ProJDDDZGameSendActionMahs::weaves(int index) const {
  return weaves_.Get(index);
}
inline ::JDDDZWeaveItems* ProJDDDZGameSendActionMahs::mutable_weaves(int index) {
  return weaves_.Mutable(index);
}
inline ::JDDDZWeaveItems* ProJDDDZGameSendActionMahs::add_weaves() {
  return weaves_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::JDDDZWeaveItems >&
ProJDDDZGameSendActionMahs::weaves() const {
  return weaves_;
}
inline ::google::protobuf::RepeatedPtrField< ::JDDDZWeaveItems >*
ProJDDDZGameSendActionMahs::mutable_weaves() {
  return &weaves_;
}

// -------------------------------------------------------------------

// ProJDDDZGameBrokenRequest

// optional int32 seat_id = 2;
inline bool ProJDDDZGameBrokenRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameBrokenRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameBrokenRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameBrokenRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProJDDDZGameBrokenRequest::seat_id() const {
  return seat_id_;
}
inline void ProJDDDZGameBrokenRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional .JDDDZBROKEN_TYPE type = 3;
inline bool ProJDDDZGameBrokenRequest::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameBrokenRequest::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameBrokenRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameBrokenRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::JDDDZBROKEN_TYPE ProJDDDZGameBrokenRequest::type() const {
  return static_cast< ::JDDDZBROKEN_TYPE >(type_);
}
inline void ProJDDDZGameBrokenRequest::set_type(::JDDDZBROKEN_TYPE value) {
  assert(::JDDDZBROKEN_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional int32 time = 4;
inline bool ProJDDDZGameBrokenRequest::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameBrokenRequest::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameBrokenRequest::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameBrokenRequest::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProJDDDZGameBrokenRequest::time() const {
  return time_;
}
inline void ProJDDDZGameBrokenRequest::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameBrokenOperate

// optional int32 seat_id = 2;
inline bool ProJDDDZGameBrokenOperate::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameBrokenOperate::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameBrokenOperate::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameBrokenOperate::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProJDDDZGameBrokenOperate::seat_id() const {
  return seat_id_;
}
inline void ProJDDDZGameBrokenOperate::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional .JDDDZBROKEN_OPERATE result = 3 [default = JDDDZ_BO_DISAGREE];
inline bool ProJDDDZGameBrokenOperate::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameBrokenOperate::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameBrokenOperate::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameBrokenOperate::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::JDDDZBROKEN_OPERATE ProJDDDZGameBrokenOperate::result() const {
  return static_cast< ::JDDDZBROKEN_OPERATE >(result_);
}
inline void ProJDDDZGameBrokenOperate::set_result(::JDDDZBROKEN_OPERATE value) {
  assert(::JDDDZBROKEN_OPERATE_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameBrokenNotify

// optional int32 seat_id = 2;
inline bool ProJDDDZGameBrokenNotify::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameBrokenNotify::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameBrokenNotify::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameBrokenNotify::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProJDDDZGameBrokenNotify::seat_id() const {
  return seat_id_;
}
inline void ProJDDDZGameBrokenNotify::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional .JDDDZBROKEN_CODE operate_code = 3 [default = JDDDZ_BC_SUCCESS];
inline bool ProJDDDZGameBrokenNotify::has_operate_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameBrokenNotify::set_has_operate_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameBrokenNotify::clear_has_operate_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameBrokenNotify::clear_operate_code() {
  operate_code_ = 0;
  clear_has_operate_code();
}
inline ::JDDDZBROKEN_CODE ProJDDDZGameBrokenNotify::operate_code() const {
  return static_cast< ::JDDDZBROKEN_CODE >(operate_code_);
}
inline void ProJDDDZGameBrokenNotify::set_operate_code(::JDDDZBROKEN_CODE value) {
  assert(::JDDDZBROKEN_CODE_IsValid(value));
  set_has_operate_code();
  operate_code_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameRuleConfig

// optional int32 game_round = 1;
inline bool ProJDDDZGameRuleConfig::has_game_round() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameRuleConfig::set_has_game_round() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameRuleConfig::clear_has_game_round() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameRuleConfig::clear_game_round() {
  game_round_ = 0;
  clear_has_game_round();
}
inline ::google::protobuf::int32 ProJDDDZGameRuleConfig::game_round() const {
  return game_round_;
}
inline void ProJDDDZGameRuleConfig::set_game_round(::google::protobuf::int32 value) {
  set_has_game_round();
  game_round_ = value;
}

// optional int32 need_card = 2;
inline bool ProJDDDZGameRuleConfig::has_need_card() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameRuleConfig::set_has_need_card() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameRuleConfig::clear_has_need_card() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameRuleConfig::clear_need_card() {
  need_card_ = 0;
  clear_has_need_card();
}
inline ::google::protobuf::int32 ProJDDDZGameRuleConfig::need_card() const {
  return need_card_;
}
inline void ProJDDDZGameRuleConfig::set_need_card(::google::protobuf::int32 value) {
  set_has_need_card();
  need_card_ = value;
}

// optional bool have_bottom_king = 3;
inline bool ProJDDDZGameRuleConfig::has_have_bottom_king() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameRuleConfig::set_has_have_bottom_king() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameRuleConfig::clear_has_have_bottom_king() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameRuleConfig::clear_have_bottom_king() {
  have_bottom_king_ = false;
  clear_has_have_bottom_king();
}
inline bool ProJDDDZGameRuleConfig::have_bottom_king() const {
  return have_bottom_king_;
}
inline void ProJDDDZGameRuleConfig::set_have_bottom_king(bool value) {
  set_has_have_bottom_king();
  have_bottom_king_ = value;
}

// optional bool have_mai_lei = 4;
inline bool ProJDDDZGameRuleConfig::has_have_mai_lei() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProJDDDZGameRuleConfig::set_has_have_mai_lei() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProJDDDZGameRuleConfig::clear_has_have_mai_lei() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProJDDDZGameRuleConfig::clear_have_mai_lei() {
  have_mai_lei_ = false;
  clear_has_have_mai_lei();
}
inline bool ProJDDDZGameRuleConfig::have_mai_lei() const {
  return have_mai_lei_;
}
inline void ProJDDDZGameRuleConfig::set_have_mai_lei(bool value) {
  set_has_have_mai_lei();
  have_mai_lei_ = value;
}

// optional bool hava_hui_tou = 5;
inline bool ProJDDDZGameRuleConfig::has_hava_hui_tou() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProJDDDZGameRuleConfig::set_has_hava_hui_tou() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProJDDDZGameRuleConfig::clear_has_hava_hui_tou() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProJDDDZGameRuleConfig::clear_hava_hui_tou() {
  hava_hui_tou_ = false;
  clear_has_hava_hui_tou();
}
inline bool ProJDDDZGameRuleConfig::hava_hui_tou() const {
  return hava_hui_tou_;
}
inline void ProJDDDZGameRuleConfig::set_hava_hui_tou(bool value) {
  set_has_hava_hui_tou();
  hava_hui_tou_ = value;
}

// optional int32 nMasterSeat = 6;
inline bool ProJDDDZGameRuleConfig::has_nmasterseat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProJDDDZGameRuleConfig::set_has_nmasterseat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProJDDDZGameRuleConfig::clear_has_nmasterseat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProJDDDZGameRuleConfig::clear_nmasterseat() {
  nmasterseat_ = 0;
  clear_has_nmasterseat();
}
inline ::google::protobuf::int32 ProJDDDZGameRuleConfig::nmasterseat() const {
  return nmasterseat_;
}
inline void ProJDDDZGameRuleConfig::set_nmasterseat(::google::protobuf::int32 value) {
  set_has_nmasterseat();
  nmasterseat_ = value;
}

// optional int32 current_game_count = 7;
inline bool ProJDDDZGameRuleConfig::has_current_game_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProJDDDZGameRuleConfig::set_has_current_game_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProJDDDZGameRuleConfig::clear_has_current_game_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProJDDDZGameRuleConfig::clear_current_game_count() {
  current_game_count_ = 0;
  clear_has_current_game_count();
}
inline ::google::protobuf::int32 ProJDDDZGameRuleConfig::current_game_count() const {
  return current_game_count_;
}
inline void ProJDDDZGameRuleConfig::set_current_game_count(::google::protobuf::int32 value) {
  set_has_current_game_count();
  current_game_count_ = value;
}

// optional bool have_jianma = 8;
inline bool ProJDDDZGameRuleConfig::has_have_jianma() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProJDDDZGameRuleConfig::set_has_have_jianma() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProJDDDZGameRuleConfig::clear_has_have_jianma() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProJDDDZGameRuleConfig::clear_have_jianma() {
  have_jianma_ = false;
  clear_has_have_jianma();
}
inline bool ProJDDDZGameRuleConfig::have_jianma() const {
  return have_jianma_;
}
inline void ProJDDDZGameRuleConfig::set_have_jianma(bool value) {
  set_has_have_jianma();
  have_jianma_ = value;
}

// optional int32 nChongguanNum = 9;
inline bool ProJDDDZGameRuleConfig::has_nchongguannum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProJDDDZGameRuleConfig::set_has_nchongguannum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProJDDDZGameRuleConfig::clear_has_nchongguannum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProJDDDZGameRuleConfig::clear_nchongguannum() {
  nchongguannum_ = 0;
  clear_has_nchongguannum();
}
inline ::google::protobuf::int32 ProJDDDZGameRuleConfig::nchongguannum() const {
  return nchongguannum_;
}
inline void ProJDDDZGameRuleConfig::set_nchongguannum(::google::protobuf::int32 value) {
  set_has_nchongguannum();
  nchongguannum_ = value;
}

// optional bool bbawangfanbei = 10;
inline bool ProJDDDZGameRuleConfig::has_bbawangfanbei() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProJDDDZGameRuleConfig::set_has_bbawangfanbei() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ProJDDDZGameRuleConfig::clear_has_bbawangfanbei() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ProJDDDZGameRuleConfig::clear_bbawangfanbei() {
  bbawangfanbei_ = false;
  clear_has_bbawangfanbei();
}
inline bool ProJDDDZGameRuleConfig::bbawangfanbei() const {
  return bbawangfanbei_;
}
inline void ProJDDDZGameRuleConfig::set_bbawangfanbei(bool value) {
  set_has_bbawangfanbei();
  bbawangfanbei_ = value;
}

// optional int32 nPlayerNum = 11;
inline bool ProJDDDZGameRuleConfig::has_nplayernum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ProJDDDZGameRuleConfig::set_has_nplayernum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ProJDDDZGameRuleConfig::clear_has_nplayernum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ProJDDDZGameRuleConfig::clear_nplayernum() {
  nplayernum_ = 0;
  clear_has_nplayernum();
}
inline ::google::protobuf::int32 ProJDDDZGameRuleConfig::nplayernum() const {
  return nplayernum_;
}
inline void ProJDDDZGameRuleConfig::set_nplayernum(::google::protobuf::int32 value) {
  set_has_nplayernum();
  nplayernum_ = value;
}

// optional bytes sRoomNum = 12;
inline bool ProJDDDZGameRuleConfig::has_sroomnum() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ProJDDDZGameRuleConfig::set_has_sroomnum() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ProJDDDZGameRuleConfig::clear_has_sroomnum() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ProJDDDZGameRuleConfig::clear_sroomnum() {
  if (sroomnum_ != &::google::protobuf::internal::kEmptyString) {
    sroomnum_->clear();
  }
  clear_has_sroomnum();
}
inline const ::std::string& ProJDDDZGameRuleConfig::sroomnum() const {
  return *sroomnum_;
}
inline void ProJDDDZGameRuleConfig::set_sroomnum(const ::std::string& value) {
  set_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    sroomnum_ = new ::std::string;
  }
  sroomnum_->assign(value);
}
inline void ProJDDDZGameRuleConfig::set_sroomnum(const char* value) {
  set_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    sroomnum_ = new ::std::string;
  }
  sroomnum_->assign(value);
}
inline void ProJDDDZGameRuleConfig::set_sroomnum(const void* value, size_t size) {
  set_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    sroomnum_ = new ::std::string;
  }
  sroomnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProJDDDZGameRuleConfig::mutable_sroomnum() {
  set_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    sroomnum_ = new ::std::string;
  }
  return sroomnum_;
}
inline ::std::string* ProJDDDZGameRuleConfig::release_sroomnum() {
  clear_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sroomnum_;
    sroomnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProJDDDZGameRuleConfig::set_allocated_sroomnum(::std::string* sroomnum) {
  if (sroomnum_ != &::google::protobuf::internal::kEmptyString) {
    delete sroomnum_;
  }
  if (sroomnum) {
    set_has_sroomnum();
    sroomnum_ = sroomnum;
  } else {
    clear_has_sroomnum();
    sroomnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes sPlayTime = 13;
inline bool ProJDDDZGameRuleConfig::has_splaytime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ProJDDDZGameRuleConfig::set_has_splaytime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ProJDDDZGameRuleConfig::clear_has_splaytime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ProJDDDZGameRuleConfig::clear_splaytime() {
  if (splaytime_ != &::google::protobuf::internal::kEmptyString) {
    splaytime_->clear();
  }
  clear_has_splaytime();
}
inline const ::std::string& ProJDDDZGameRuleConfig::splaytime() const {
  return *splaytime_;
}
inline void ProJDDDZGameRuleConfig::set_splaytime(const ::std::string& value) {
  set_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    splaytime_ = new ::std::string;
  }
  splaytime_->assign(value);
}
inline void ProJDDDZGameRuleConfig::set_splaytime(const char* value) {
  set_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    splaytime_ = new ::std::string;
  }
  splaytime_->assign(value);
}
inline void ProJDDDZGameRuleConfig::set_splaytime(const void* value, size_t size) {
  set_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    splaytime_ = new ::std::string;
  }
  splaytime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProJDDDZGameRuleConfig::mutable_splaytime() {
  set_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    splaytime_ = new ::std::string;
  }
  return splaytime_;
}
inline ::std::string* ProJDDDZGameRuleConfig::release_splaytime() {
  clear_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = splaytime_;
    splaytime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProJDDDZGameRuleConfig::set_allocated_splaytime(::std::string* splaytime) {
  if (splaytime_ != &::google::protobuf::internal::kEmptyString) {
    delete splaytime_;
  }
  if (splaytime) {
    set_has_splaytime();
    splaytime_ = splaytime;
  } else {
    clear_has_splaytime();
    splaytime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 nselfSeat = 14;
inline bool ProJDDDZGameRuleConfig::has_nselfseat() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ProJDDDZGameRuleConfig::set_has_nselfseat() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ProJDDDZGameRuleConfig::clear_has_nselfseat() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ProJDDDZGameRuleConfig::clear_nselfseat() {
  nselfseat_ = 0;
  clear_has_nselfseat();
}
inline ::google::protobuf::int32 ProJDDDZGameRuleConfig::nselfseat() const {
  return nselfseat_;
}
inline void ProJDDDZGameRuleConfig::set_nselfseat(::google::protobuf::int32 value) {
  set_has_nselfseat();
  nselfseat_ = value;
}

// optional bool bJingDian = 15;
inline bool ProJDDDZGameRuleConfig::has_bjingdian() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ProJDDDZGameRuleConfig::set_has_bjingdian() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ProJDDDZGameRuleConfig::clear_has_bjingdian() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ProJDDDZGameRuleConfig::clear_bjingdian() {
  bjingdian_ = false;
  clear_has_bjingdian();
}
inline bool ProJDDDZGameRuleConfig::bjingdian() const {
  return bjingdian_;
}
inline void ProJDDDZGameRuleConfig::set_bjingdian(bool value) {
  set_has_bjingdian();
  bjingdian_ = value;
}

// optional bool bMagicCard = 16;
inline bool ProJDDDZGameRuleConfig::has_bmagiccard() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ProJDDDZGameRuleConfig::set_has_bmagiccard() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ProJDDDZGameRuleConfig::clear_has_bmagiccard() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ProJDDDZGameRuleConfig::clear_bmagiccard() {
  bmagiccard_ = false;
  clear_has_bmagiccard();
}
inline bool ProJDDDZGameRuleConfig::bmagiccard() const {
  return bmagiccard_;
}
inline void ProJDDDZGameRuleConfig::set_bmagiccard(bool value) {
  set_has_bmagiccard();
  bmagiccard_ = value;
}

// optional bool bMasterThebe = 17;
inline bool ProJDDDZGameRuleConfig::has_bmasterthebe() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ProJDDDZGameRuleConfig::set_has_bmasterthebe() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ProJDDDZGameRuleConfig::clear_has_bmasterthebe() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ProJDDDZGameRuleConfig::clear_bmasterthebe() {
  bmasterthebe_ = false;
  clear_has_bmasterthebe();
}
inline bool ProJDDDZGameRuleConfig::bmasterthebe() const {
  return bmasterthebe_;
}
inline void ProJDDDZGameRuleConfig::set_bmasterthebe(bool value) {
  set_has_bmasterthebe();
  bmasterthebe_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameBrokenStatus

// optional int32 broken_seat = 1;
inline bool ProJDDDZGameBrokenStatus::has_broken_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameBrokenStatus::set_has_broken_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameBrokenStatus::clear_has_broken_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameBrokenStatus::clear_broken_seat() {
  broken_seat_ = 0;
  clear_has_broken_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameBrokenStatus::broken_seat() const {
  return broken_seat_;
}
inline void ProJDDDZGameBrokenStatus::set_broken_seat(::google::protobuf::int32 value) {
  set_has_broken_seat();
  broken_seat_ = value;
}

// repeated bool broken_status = 2;
inline int ProJDDDZGameBrokenStatus::broken_status_size() const {
  return broken_status_.size();
}
inline void ProJDDDZGameBrokenStatus::clear_broken_status() {
  broken_status_.Clear();
}
inline bool ProJDDDZGameBrokenStatus::broken_status(int index) const {
  return broken_status_.Get(index);
}
inline void ProJDDDZGameBrokenStatus::set_broken_status(int index, bool value) {
  broken_status_.Set(index, value);
}
inline void ProJDDDZGameBrokenStatus::add_broken_status(bool value) {
  broken_status_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
ProJDDDZGameBrokenStatus::broken_status() const {
  return broken_status_;
}
inline ::google::protobuf::RepeatedField< bool >*
ProJDDDZGameBrokenStatus::mutable_broken_status() {
  return &broken_status_;
}

// optional int32 left_time = 3;
inline bool ProJDDDZGameBrokenStatus::has_left_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameBrokenStatus::set_has_left_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameBrokenStatus::clear_has_left_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameBrokenStatus::clear_left_time() {
  left_time_ = 0;
  clear_has_left_time();
}
inline ::google::protobuf::int32 ProJDDDZGameBrokenStatus::left_time() const {
  return left_time_;
}
inline void ProJDDDZGameBrokenStatus::set_left_time(::google::protobuf::int32 value) {
  set_has_left_time();
  left_time_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameDataResp

// repeated int32 total_score = 1;
inline int ProJDDDZGameDataResp::total_score_size() const {
  return total_score_.size();
}
inline void ProJDDDZGameDataResp::clear_total_score() {
  total_score_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameDataResp::total_score(int index) const {
  return total_score_.Get(index);
}
inline void ProJDDDZGameDataResp::set_total_score(int index, ::google::protobuf::int32 value) {
  total_score_.Set(index, value);
}
inline void ProJDDDZGameDataResp::add_total_score(::google::protobuf::int32 value) {
  total_score_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameDataResp::total_score() const {
  return total_score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameDataResp::mutable_total_score() {
  return &total_score_;
}

// optional int32 type = 2;
inline bool ProJDDDZGameDataResp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameDataResp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameDataResp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameDataResp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ProJDDDZGameDataResp::type() const {
  return type_;
}
inline void ProJDDDZGameDataResp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameRecordRequest

// optional int32 seat_id = 1;
inline bool ProJDDDZGameRecordRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameRecordRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameRecordRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameRecordRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProJDDDZGameRecordRequest::seat_id() const {
  return seat_id_;
}
inline void ProJDDDZGameRecordRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional bytes url = 2;
inline bool ProJDDDZGameRecordRequest::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameRecordRequest::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameRecordRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameRecordRequest::clear_url() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& ProJDDDZGameRecordRequest::url() const {
  return *url_;
}
inline void ProJDDDZGameRecordRequest::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ProJDDDZGameRecordRequest::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ProJDDDZGameRecordRequest::set_url(const void* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProJDDDZGameRecordRequest::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  return url_;
}
inline ::std::string* ProJDDDZGameRecordRequest::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProJDDDZGameRecordRequest::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProJDDDZGameRecordResponse

// optional int32 seat_id = 1;
inline bool ProJDDDZGameRecordResponse::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameRecordResponse::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameRecordResponse::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameRecordResponse::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProJDDDZGameRecordResponse::seat_id() const {
  return seat_id_;
}
inline void ProJDDDZGameRecordResponse::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional bytes url = 2;
inline bool ProJDDDZGameRecordResponse::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameRecordResponse::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameRecordResponse::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameRecordResponse::clear_url() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& ProJDDDZGameRecordResponse::url() const {
  return *url_;
}
inline void ProJDDDZGameRecordResponse::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ProJDDDZGameRecordResponse::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ProJDDDZGameRecordResponse::set_url(const void* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProJDDDZGameRecordResponse::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  return url_;
}
inline ::std::string* ProJDDDZGameRecordResponse::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProJDDDZGameRecordResponse::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProJDDDZGameUserLocationRequest

// optional int32 seat_id = 1;
inline bool ProJDDDZGameUserLocationRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameUserLocationRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameUserLocationRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameUserLocationRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProJDDDZGameUserLocationRequest::seat_id() const {
  return seat_id_;
}
inline void ProJDDDZGameUserLocationRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional double dwlongitude = 2;
inline bool ProJDDDZGameUserLocationRequest::has_dwlongitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameUserLocationRequest::set_has_dwlongitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameUserLocationRequest::clear_has_dwlongitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameUserLocationRequest::clear_dwlongitude() {
  dwlongitude_ = 0;
  clear_has_dwlongitude();
}
inline double ProJDDDZGameUserLocationRequest::dwlongitude() const {
  return dwlongitude_;
}
inline void ProJDDDZGameUserLocationRequest::set_dwlongitude(double value) {
  set_has_dwlongitude();
  dwlongitude_ = value;
}

// optional double dwlatitude = 3;
inline bool ProJDDDZGameUserLocationRequest::has_dwlatitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameUserLocationRequest::set_has_dwlatitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameUserLocationRequest::clear_has_dwlatitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameUserLocationRequest::clear_dwlatitude() {
  dwlatitude_ = 0;
  clear_has_dwlatitude();
}
inline double ProJDDDZGameUserLocationRequest::dwlatitude() const {
  return dwlatitude_;
}
inline void ProJDDDZGameUserLocationRequest::set_dwlatitude(double value) {
  set_has_dwlatitude();
  dwlatitude_ = value;
}

// optional bytes strDistrict = 4;
inline bool ProJDDDZGameUserLocationRequest::has_strdistrict() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProJDDDZGameUserLocationRequest::set_has_strdistrict() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProJDDDZGameUserLocationRequest::clear_has_strdistrict() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProJDDDZGameUserLocationRequest::clear_strdistrict() {
  if (strdistrict_ != &::google::protobuf::internal::kEmptyString) {
    strdistrict_->clear();
  }
  clear_has_strdistrict();
}
inline const ::std::string& ProJDDDZGameUserLocationRequest::strdistrict() const {
  return *strdistrict_;
}
inline void ProJDDDZGameUserLocationRequest::set_strdistrict(const ::std::string& value) {
  set_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    strdistrict_ = new ::std::string;
  }
  strdistrict_->assign(value);
}
inline void ProJDDDZGameUserLocationRequest::set_strdistrict(const char* value) {
  set_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    strdistrict_ = new ::std::string;
  }
  strdistrict_->assign(value);
}
inline void ProJDDDZGameUserLocationRequest::set_strdistrict(const void* value, size_t size) {
  set_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    strdistrict_ = new ::std::string;
  }
  strdistrict_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProJDDDZGameUserLocationRequest::mutable_strdistrict() {
  set_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    strdistrict_ = new ::std::string;
  }
  return strdistrict_;
}
inline ::std::string* ProJDDDZGameUserLocationRequest::release_strdistrict() {
  clear_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strdistrict_;
    strdistrict_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProJDDDZGameUserLocationRequest::set_allocated_strdistrict(::std::string* strdistrict) {
  if (strdistrict_ != &::google::protobuf::internal::kEmptyString) {
    delete strdistrict_;
  }
  if (strdistrict) {
    set_has_strdistrict();
    strdistrict_ = strdistrict;
  } else {
    clear_has_strdistrict();
    strdistrict_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes strStreetName = 5;
inline bool ProJDDDZGameUserLocationRequest::has_strstreetname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProJDDDZGameUserLocationRequest::set_has_strstreetname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProJDDDZGameUserLocationRequest::clear_has_strstreetname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProJDDDZGameUserLocationRequest::clear_strstreetname() {
  if (strstreetname_ != &::google::protobuf::internal::kEmptyString) {
    strstreetname_->clear();
  }
  clear_has_strstreetname();
}
inline const ::std::string& ProJDDDZGameUserLocationRequest::strstreetname() const {
  return *strstreetname_;
}
inline void ProJDDDZGameUserLocationRequest::set_strstreetname(const ::std::string& value) {
  set_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    strstreetname_ = new ::std::string;
  }
  strstreetname_->assign(value);
}
inline void ProJDDDZGameUserLocationRequest::set_strstreetname(const char* value) {
  set_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    strstreetname_ = new ::std::string;
  }
  strstreetname_->assign(value);
}
inline void ProJDDDZGameUserLocationRequest::set_strstreetname(const void* value, size_t size) {
  set_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    strstreetname_ = new ::std::string;
  }
  strstreetname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProJDDDZGameUserLocationRequest::mutable_strstreetname() {
  set_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    strstreetname_ = new ::std::string;
  }
  return strstreetname_;
}
inline ::std::string* ProJDDDZGameUserLocationRequest::release_strstreetname() {
  clear_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strstreetname_;
    strstreetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProJDDDZGameUserLocationRequest::set_allocated_strstreetname(::std::string* strstreetname) {
  if (strstreetname_ != &::google::protobuf::internal::kEmptyString) {
    delete strstreetname_;
  }
  if (strstreetname) {
    set_has_strstreetname();
    strstreetname_ = strstreetname;
  } else {
    clear_has_strstreetname();
    strstreetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProJDDDZGameSyncCardResponse

// optional int32 seat = 2;
inline bool ProJDDDZGameSyncCardResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameSyncCardResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameSyncCardResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameSyncCardResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameSyncCardResponse::seat() const {
  return seat_;
}
inline void ProJDDDZGameSyncCardResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 handmahs = 3;
inline int ProJDDDZGameSyncCardResponse::handmahs_size() const {
  return handmahs_.size();
}
inline void ProJDDDZGameSyncCardResponse::clear_handmahs() {
  handmahs_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameSyncCardResponse::handmahs(int index) const {
  return handmahs_.Get(index);
}
inline void ProJDDDZGameSyncCardResponse::set_handmahs(int index, ::google::protobuf::int32 value) {
  handmahs_.Set(index, value);
}
inline void ProJDDDZGameSyncCardResponse::add_handmahs(::google::protobuf::int32 value) {
  handmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameSyncCardResponse::handmahs() const {
  return handmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameSyncCardResponse::mutable_handmahs() {
  return &handmahs_;
}

// -------------------------------------------------------------------

// ProJDDDZGameUserPhoneStatusRequest

// optional int32 seat_id = 1;
inline bool ProJDDDZGameUserPhoneStatusRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameUserPhoneStatusRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameUserPhoneStatusRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameUserPhoneStatusRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProJDDDZGameUserPhoneStatusRequest::seat_id() const {
  return seat_id_;
}
inline void ProJDDDZGameUserPhoneStatusRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional int32 userstatus = 2;
inline bool ProJDDDZGameUserPhoneStatusRequest::has_userstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameUserPhoneStatusRequest::set_has_userstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameUserPhoneStatusRequest::clear_has_userstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameUserPhoneStatusRequest::clear_userstatus() {
  userstatus_ = 0;
  clear_has_userstatus();
}
inline ::google::protobuf::int32 ProJDDDZGameUserPhoneStatusRequest::userstatus() const {
  return userstatus_;
}
inline void ProJDDDZGameUserPhoneStatusRequest::set_userstatus(::google::protobuf::int32 value) {
  set_has_userstatus();
  userstatus_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameUserGiveUpRequest

// optional int32 seat_id = 1;
inline bool ProJDDDZGameUserGiveUpRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameUserGiveUpRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameUserGiveUpRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameUserGiveUpRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProJDDDZGameUserGiveUpRequest::seat_id() const {
  return seat_id_;
}
inline void ProJDDDZGameUserGiveUpRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameUserHintRequest

// -------------------------------------------------------------------

// ProJDDDZGameUserHintResponse

// optional int32 lenth = 1;
inline bool ProJDDDZGameUserHintResponse::has_lenth() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameUserHintResponse::set_has_lenth() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameUserHintResponse::clear_has_lenth() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameUserHintResponse::clear_lenth() {
  lenth_ = 0;
  clear_has_lenth();
}
inline ::google::protobuf::int32 ProJDDDZGameUserHintResponse::lenth() const {
  return lenth_;
}
inline void ProJDDDZGameUserHintResponse::set_lenth(::google::protobuf::int32 value) {
  set_has_lenth();
  lenth_ = value;
}

// repeated int32 outMahs = 2;
inline int ProJDDDZGameUserHintResponse::outmahs_size() const {
  return outmahs_.size();
}
inline void ProJDDDZGameUserHintResponse::clear_outmahs() {
  outmahs_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameUserHintResponse::outmahs(int index) const {
  return outmahs_.Get(index);
}
inline void ProJDDDZGameUserHintResponse::set_outmahs(int index, ::google::protobuf::int32 value) {
  outmahs_.Set(index, value);
}
inline void ProJDDDZGameUserHintResponse::add_outmahs(::google::protobuf::int32 value) {
  outmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameUserHintResponse::outmahs() const {
  return outmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameUserHintResponse::mutable_outmahs() {
  return &outmahs_;
}

// -------------------------------------------------------------------

// ProJDDDZGameUserCallScoreResponse

// optional int32 seat = 1;
inline bool ProJDDDZGameUserCallScoreResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameUserCallScoreResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameUserCallScoreResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameUserCallScoreResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameUserCallScoreResponse::seat() const {
  return seat_;
}
inline void ProJDDDZGameUserCallScoreResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 usercallscore = 2;
inline bool ProJDDDZGameUserCallScoreResponse::has_usercallscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameUserCallScoreResponse::set_has_usercallscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameUserCallScoreResponse::clear_has_usercallscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameUserCallScoreResponse::clear_usercallscore() {
  usercallscore_ = 0;
  clear_has_usercallscore();
}
inline ::google::protobuf::int32 ProJDDDZGameUserCallScoreResponse::usercallscore() const {
  return usercallscore_;
}
inline void ProJDDDZGameUserCallScoreResponse::set_usercallscore(::google::protobuf::int32 value) {
  set_has_usercallscore();
  usercallscore_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameUserCallScoreRequest

// optional int32 seat = 1;
inline bool ProJDDDZGameUserCallScoreRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameUserCallScoreRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameUserCallScoreRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameUserCallScoreRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameUserCallScoreRequest::seat() const {
  return seat_;
}
inline void ProJDDDZGameUserCallScoreRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 usercallscore = 2;
inline bool ProJDDDZGameUserCallScoreRequest::has_usercallscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameUserCallScoreRequest::set_has_usercallscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameUserCallScoreRequest::clear_has_usercallscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameUserCallScoreRequest::clear_usercallscore() {
  usercallscore_ = 0;
  clear_has_usercallscore();
}
inline ::google::protobuf::int32 ProJDDDZGameUserCallScoreRequest::usercallscore() const {
  return usercallscore_;
}
inline void ProJDDDZGameUserCallScoreRequest::set_usercallscore(::google::protobuf::int32 value) {
  set_has_usercallscore();
  usercallscore_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameCallNotify

// optional int32 seat = 1;
inline bool ProJDDDZGameCallNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameCallNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameCallNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameCallNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameCallNotify::seat() const {
  return seat_;
}
inline void ProJDDDZGameCallNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 maxCallScore = 2;
inline bool ProJDDDZGameCallNotify::has_maxcallscore() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameCallNotify::set_has_maxcallscore() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameCallNotify::clear_has_maxcallscore() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameCallNotify::clear_maxcallscore() {
  maxcallscore_ = 0;
  clear_has_maxcallscore();
}
inline ::google::protobuf::int32 ProJDDDZGameCallNotify::maxcallscore() const {
  return maxcallscore_;
}
inline void ProJDDDZGameCallNotify::set_maxcallscore(::google::protobuf::int32 value) {
  set_has_maxcallscore();
  maxcallscore_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameQiangNotify

// optional int32 seat = 1;
inline bool ProJDDDZGameQiangNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameQiangNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameQiangNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameQiangNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameQiangNotify::seat() const {
  return seat_;
}
inline void ProJDDDZGameQiangNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameUserCallLandlordResponse

// optional int32 iscallandlord = 1;
inline bool ProJDDDZGameUserCallLandlordResponse::has_iscallandlord() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameUserCallLandlordResponse::set_has_iscallandlord() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameUserCallLandlordResponse::clear_has_iscallandlord() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameUserCallLandlordResponse::clear_iscallandlord() {
  iscallandlord_ = 0;
  clear_has_iscallandlord();
}
inline ::google::protobuf::int32 ProJDDDZGameUserCallLandlordResponse::iscallandlord() const {
  return iscallandlord_;
}
inline void ProJDDDZGameUserCallLandlordResponse::set_iscallandlord(::google::protobuf::int32 value) {
  set_has_iscallandlord();
  iscallandlord_ = value;
}

// optional int32 score = 2;
inline bool ProJDDDZGameUserCallLandlordResponse::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameUserCallLandlordResponse::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameUserCallLandlordResponse::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameUserCallLandlordResponse::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 ProJDDDZGameUserCallLandlordResponse::score() const {
  return score_;
}
inline void ProJDDDZGameUserCallLandlordResponse::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// optional int32 landlordSeat = 3;
inline bool ProJDDDZGameUserCallLandlordResponse::has_landlordseat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameUserCallLandlordResponse::set_has_landlordseat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameUserCallLandlordResponse::clear_has_landlordseat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameUserCallLandlordResponse::clear_landlordseat() {
  landlordseat_ = 0;
  clear_has_landlordseat();
}
inline ::google::protobuf::int32 ProJDDDZGameUserCallLandlordResponse::landlordseat() const {
  return landlordseat_;
}
inline void ProJDDDZGameUserCallLandlordResponse::set_landlordseat(::google::protobuf::int32 value) {
  set_has_landlordseat();
  landlordseat_ = value;
}

// optional int32 seat = 4;
inline bool ProJDDDZGameUserCallLandlordResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProJDDDZGameUserCallLandlordResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProJDDDZGameUserCallLandlordResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProJDDDZGameUserCallLandlordResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameUserCallLandlordResponse::seat() const {
  return seat_;
}
inline void ProJDDDZGameUserCallLandlordResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool isSoundCall = 5;
inline bool ProJDDDZGameUserCallLandlordResponse::has_issoundcall() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProJDDDZGameUserCallLandlordResponse::set_has_issoundcall() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProJDDDZGameUserCallLandlordResponse::clear_has_issoundcall() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProJDDDZGameUserCallLandlordResponse::clear_issoundcall() {
  issoundcall_ = false;
  clear_has_issoundcall();
}
inline bool ProJDDDZGameUserCallLandlordResponse::issoundcall() const {
  return issoundcall_;
}
inline void ProJDDDZGameUserCallLandlordResponse::set_issoundcall(bool value) {
  set_has_issoundcall();
  issoundcall_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameUserCallLandlordRequest

// optional int32 seat = 1;
inline bool ProJDDDZGameUserCallLandlordRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameUserCallLandlordRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameUserCallLandlordRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameUserCallLandlordRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameUserCallLandlordRequest::seat() const {
  return seat_;
}
inline void ProJDDDZGameUserCallLandlordRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 iscallandlord = 2;
inline bool ProJDDDZGameUserCallLandlordRequest::has_iscallandlord() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameUserCallLandlordRequest::set_has_iscallandlord() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameUserCallLandlordRequest::clear_has_iscallandlord() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameUserCallLandlordRequest::clear_iscallandlord() {
  iscallandlord_ = 0;
  clear_has_iscallandlord();
}
inline ::google::protobuf::int32 ProJDDDZGameUserCallLandlordRequest::iscallandlord() const {
  return iscallandlord_;
}
inline void ProJDDDZGameUserCallLandlordRequest::set_iscallandlord(::google::protobuf::int32 value) {
  set_has_iscallandlord();
  iscallandlord_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameUserQinagLandlordResponse

// optional int32 isQiangLandlord = 1;
inline bool ProJDDDZGameUserQinagLandlordResponse::has_isqianglandlord() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameUserQinagLandlordResponse::set_has_isqianglandlord() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameUserQinagLandlordResponse::clear_has_isqianglandlord() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameUserQinagLandlordResponse::clear_isqianglandlord() {
  isqianglandlord_ = 0;
  clear_has_isqianglandlord();
}
inline ::google::protobuf::int32 ProJDDDZGameUserQinagLandlordResponse::isqianglandlord() const {
  return isqianglandlord_;
}
inline void ProJDDDZGameUserQinagLandlordResponse::set_isqianglandlord(::google::protobuf::int32 value) {
  set_has_isqianglandlord();
  isqianglandlord_ = value;
}

// optional int32 score = 2;
inline bool ProJDDDZGameUserQinagLandlordResponse::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameUserQinagLandlordResponse::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameUserQinagLandlordResponse::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameUserQinagLandlordResponse::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 ProJDDDZGameUserQinagLandlordResponse::score() const {
  return score_;
}
inline void ProJDDDZGameUserQinagLandlordResponse::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// optional int32 landlordSeat = 3;
inline bool ProJDDDZGameUserQinagLandlordResponse::has_landlordseat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameUserQinagLandlordResponse::set_has_landlordseat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameUserQinagLandlordResponse::clear_has_landlordseat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameUserQinagLandlordResponse::clear_landlordseat() {
  landlordseat_ = 0;
  clear_has_landlordseat();
}
inline ::google::protobuf::int32 ProJDDDZGameUserQinagLandlordResponse::landlordseat() const {
  return landlordseat_;
}
inline void ProJDDDZGameUserQinagLandlordResponse::set_landlordseat(::google::protobuf::int32 value) {
  set_has_landlordseat();
  landlordseat_ = value;
}

// optional int32 seat = 4;
inline bool ProJDDDZGameUserQinagLandlordResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProJDDDZGameUserQinagLandlordResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProJDDDZGameUserQinagLandlordResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProJDDDZGameUserQinagLandlordResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameUserQinagLandlordResponse::seat() const {
  return seat_;
}
inline void ProJDDDZGameUserQinagLandlordResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameUserQiangLandlordRequest

// optional int32 seat = 1;
inline bool ProJDDDZGameUserQiangLandlordRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameUserQiangLandlordRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameUserQiangLandlordRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameUserQiangLandlordRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameUserQiangLandlordRequest::seat() const {
  return seat_;
}
inline void ProJDDDZGameUserQiangLandlordRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 isQiangLandlord = 2;
inline bool ProJDDDZGameUserQiangLandlordRequest::has_isqianglandlord() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameUserQiangLandlordRequest::set_has_isqianglandlord() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameUserQiangLandlordRequest::clear_has_isqianglandlord() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameUserQiangLandlordRequest::clear_isqianglandlord() {
  isqianglandlord_ = 0;
  clear_has_isqianglandlord();
}
inline ::google::protobuf::int32 ProJDDDZGameUserQiangLandlordRequest::isqianglandlord() const {
  return isqianglandlord_;
}
inline void ProJDDDZGameUserQiangLandlordRequest::set_isqianglandlord(::google::protobuf::int32 value) {
  set_has_isqianglandlord();
  isqianglandlord_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameSendLastCard

// optional int32 seat = 1;
inline bool ProJDDDZGameSendLastCard::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameSendLastCard::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameSendLastCard::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameSendLastCard::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameSendLastCard::seat() const {
  return seat_;
}
inline void ProJDDDZGameSendLastCard::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated .JDDDZMahList cbHandCardData = 2;
inline int ProJDDDZGameSendLastCard::cbhandcarddata_size() const {
  return cbhandcarddata_.size();
}
inline void ProJDDDZGameSendLastCard::clear_cbhandcarddata() {
  cbhandcarddata_.Clear();
}
inline const ::JDDDZMahList& ProJDDDZGameSendLastCard::cbhandcarddata(int index) const {
  return cbhandcarddata_.Get(index);
}
inline ::JDDDZMahList* ProJDDDZGameSendLastCard::mutable_cbhandcarddata(int index) {
  return cbhandcarddata_.Mutable(index);
}
inline ::JDDDZMahList* ProJDDDZGameSendLastCard::add_cbhandcarddata() {
  return cbhandcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::JDDDZMahList >&
ProJDDDZGameSendLastCard::cbhandcarddata() const {
  return cbhandcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::JDDDZMahList >*
ProJDDDZGameSendLastCard::mutable_cbhandcarddata() {
  return &cbhandcarddata_;
}

// repeated int32 lastmahs = 3;
inline int ProJDDDZGameSendLastCard::lastmahs_size() const {
  return lastmahs_.size();
}
inline void ProJDDDZGameSendLastCard::clear_lastmahs() {
  lastmahs_.Clear();
}
inline ::google::protobuf::int32 ProJDDDZGameSendLastCard::lastmahs(int index) const {
  return lastmahs_.Get(index);
}
inline void ProJDDDZGameSendLastCard::set_lastmahs(int index, ::google::protobuf::int32 value) {
  lastmahs_.Set(index, value);
}
inline void ProJDDDZGameSendLastCard::add_lastmahs(::google::protobuf::int32 value) {
  lastmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProJDDDZGameSendLastCard::lastmahs() const {
  return lastmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProJDDDZGameSendLastCard::mutable_lastmahs() {
  return &lastmahs_;
}

// optional int32 laizi = 4;
inline bool ProJDDDZGameSendLastCard::has_laizi() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProJDDDZGameSendLastCard::set_has_laizi() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProJDDDZGameSendLastCard::clear_has_laizi() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProJDDDZGameSendLastCard::clear_laizi() {
  laizi_ = 0;
  clear_has_laizi();
}
inline ::google::protobuf::int32 ProJDDDZGameSendLastCard::laizi() const {
  return laizi_;
}
inline void ProJDDDZGameSendLastCard::set_laizi(::google::protobuf::int32 value) {
  set_has_laizi();
  laizi_ = value;
}

// optional bool isReCome = 5;
inline bool ProJDDDZGameSendLastCard::has_isrecome() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProJDDDZGameSendLastCard::set_has_isrecome() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProJDDDZGameSendLastCard::clear_has_isrecome() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProJDDDZGameSendLastCard::clear_isrecome() {
  isrecome_ = false;
  clear_has_isrecome();
}
inline bool ProJDDDZGameSendLastCard::isrecome() const {
  return isrecome_;
}
inline void ProJDDDZGameSendLastCard::set_isrecome(bool value) {
  set_has_isrecome();
  isrecome_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameUserMingPaiRequest

// optional int32 seat = 1;
inline bool ProJDDDZGameUserMingPaiRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameUserMingPaiRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameUserMingPaiRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameUserMingPaiRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameUserMingPaiRequest::seat() const {
  return seat_;
}
inline void ProJDDDZGameUserMingPaiRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool isMingPai = 2;
inline bool ProJDDDZGameUserMingPaiRequest::has_ismingpai() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameUserMingPaiRequest::set_has_ismingpai() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameUserMingPaiRequest::clear_has_ismingpai() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameUserMingPaiRequest::clear_ismingpai() {
  ismingpai_ = false;
  clear_has_ismingpai();
}
inline bool ProJDDDZGameUserMingPaiRequest::ismingpai() const {
  return ismingpai_;
}
inline void ProJDDDZGameUserMingPaiRequest::set_ismingpai(bool value) {
  set_has_ismingpai();
  ismingpai_ = value;
}

// optional int32 beilv = 3;
inline bool ProJDDDZGameUserMingPaiRequest::has_beilv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameUserMingPaiRequest::set_has_beilv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameUserMingPaiRequest::clear_has_beilv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameUserMingPaiRequest::clear_beilv() {
  beilv_ = 0;
  clear_has_beilv();
}
inline ::google::protobuf::int32 ProJDDDZGameUserMingPaiRequest::beilv() const {
  return beilv_;
}
inline void ProJDDDZGameUserMingPaiRequest::set_beilv(::google::protobuf::int32 value) {
  set_has_beilv();
  beilv_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameUserMingPaiResponse

// optional int32 seat = 1;
inline bool ProJDDDZGameUserMingPaiResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameUserMingPaiResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameUserMingPaiResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameUserMingPaiResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameUserMingPaiResponse::seat() const {
  return seat_;
}
inline void ProJDDDZGameUserMingPaiResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool isMingPai = 2;
inline bool ProJDDDZGameUserMingPaiResponse::has_ismingpai() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameUserMingPaiResponse::set_has_ismingpai() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameUserMingPaiResponse::clear_has_ismingpai() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameUserMingPaiResponse::clear_ismingpai() {
  ismingpai_ = false;
  clear_has_ismingpai();
}
inline bool ProJDDDZGameUserMingPaiResponse::ismingpai() const {
  return ismingpai_;
}
inline void ProJDDDZGameUserMingPaiResponse::set_ismingpai(bool value) {
  set_has_ismingpai();
  ismingpai_ = value;
}

// optional int32 score = 3;
inline bool ProJDDDZGameUserMingPaiResponse::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameUserMingPaiResponse::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameUserMingPaiResponse::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameUserMingPaiResponse::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 ProJDDDZGameUserMingPaiResponse::score() const {
  return score_;
}
inline void ProJDDDZGameUserMingPaiResponse::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// optional int32 mingtag = 4;
inline bool ProJDDDZGameUserMingPaiResponse::has_mingtag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProJDDDZGameUserMingPaiResponse::set_has_mingtag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProJDDDZGameUserMingPaiResponse::clear_has_mingtag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProJDDDZGameUserMingPaiResponse::clear_mingtag() {
  mingtag_ = 0;
  clear_has_mingtag();
}
inline ::google::protobuf::int32 ProJDDDZGameUserMingPaiResponse::mingtag() const {
  return mingtag_;
}
inline void ProJDDDZGameUserMingPaiResponse::set_mingtag(::google::protobuf::int32 value) {
  set_has_mingtag();
  mingtag_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameMingNotify

// optional int32 seat = 1;
inline bool ProJDDDZGameMingNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProJDDDZGameMingNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProJDDDZGameMingNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProJDDDZGameMingNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProJDDDZGameMingNotify::seat() const {
  return seat_;
}
inline void ProJDDDZGameMingNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 tag = 2;
inline bool ProJDDDZGameMingNotify::has_tag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProJDDDZGameMingNotify::set_has_tag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProJDDDZGameMingNotify::clear_has_tag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProJDDDZGameMingNotify::clear_tag() {
  tag_ = 0;
  clear_has_tag();
}
inline ::google::protobuf::int32 ProJDDDZGameMingNotify::tag() const {
  return tag_;
}
inline void ProJDDDZGameMingNotify::set_tag(::google::protobuf::int32 value) {
  set_has_tag();
  tag_ = value;
}

// optional float time = 3;
inline bool ProJDDDZGameMingNotify::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProJDDDZGameMingNotify::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProJDDDZGameMingNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProJDDDZGameMingNotify::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline float ProJDDDZGameMingNotify::time() const {
  return time_;
}
inline void ProJDDDZGameMingNotify::set_time(float value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// ProJDDDZGameStartAgain


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameStatusResponse_MSGID>() {
  return ::ProJDDDZGameStatusResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameDeskInfoResponse_MSGID>() {
  return ::ProJDDDZGameDeskInfoResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameReadyNotify_MSGID>() {
  return ::ProJDDDZGameReadyNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameReadyRequest_MSGID>() {
  return ::ProJDDDZGameReadyRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameReadyResponse_MSGID>() {
  return ::ProJDDDZGameReadyResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameStart_MSGID>() {
  return ::ProJDDDZGameStart_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameDiceNotify_MSGID>() {
  return ::ProJDDDZGameDiceNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameDiceRequest_MSGID>() {
  return ::ProJDDDZGameDiceRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameDiceResult_MSGID>() {
  return ::ProJDDDZGameDiceResult_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameSendMahs_MSGID>() {
  return ::ProJDDDZGameSendMahs_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameKingData_MSGID>() {
  return ::ProJDDDZGameKingData_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameOutMahsResponse_MSGID>() {
  return ::ProJDDDZGameOutMahsResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameTimerPower_MSGID>() {
  return ::ProJDDDZGameTimerPower_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameOperateNotify_MSGID>() {
  return ::ProJDDDZGameOperateNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameOperateResult_MSGID>() {
  return ::ProJDDDZGameOperateResult_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameOperateRequest_MSGID>() {
  return ::ProJDDDZGameOperateRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameTrust_MSGID>() {
  return ::ProJDDDZGameTrust_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameOutMahRequest_MSGID>() {
  return ::ProJDDDZGameOutMahRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameCatchCard_MSGID>() {
  return ::ProJDDDZGameCatchCard_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameEnd_MSGID>() {
  return ::ProJDDDZGameEnd_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameQuickSoundRequest_MSGID>() {
  return ::ProJDDDZGameQuickSoundRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameQuickSoundResponse_MSGID>() {
  return ::ProJDDDZGameQuickSoundResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameSendDiscardMahs_MSGID>() {
  return ::ProJDDDZGameSendDiscardMahs_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameSendActionMahs_MSGID>() {
  return ::ProJDDDZGameSendActionMahs_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameBrokenRequest_MSGID>() {
  return ::ProJDDDZGameBrokenRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameBrokenOperate_MSGID>() {
  return ::ProJDDDZGameBrokenOperate_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameBrokenNotify_MSGID>() {
  return ::ProJDDDZGameBrokenNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameRuleConfig_MSGID>() {
  return ::ProJDDDZGameRuleConfig_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameBrokenStatus_MSGID>() {
  return ::ProJDDDZGameBrokenStatus_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameDataResp_MSGID>() {
  return ::ProJDDDZGameDataResp_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameRecordRequest_MSGID>() {
  return ::ProJDDDZGameRecordRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameRecordResponse_MSGID>() {
  return ::ProJDDDZGameRecordResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameUserLocationRequest_MSGID>() {
  return ::ProJDDDZGameUserLocationRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameSyncCardResponse_MSGID>() {
  return ::ProJDDDZGameSyncCardResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameUserPhoneStatusRequest_MSGID>() {
  return ::ProJDDDZGameUserPhoneStatusRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameUserGiveUpRequest_MSGID>() {
  return ::ProJDDDZGameUserGiveUpRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameUserHintRequest_MSGID>() {
  return ::ProJDDDZGameUserHintRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameUserHintResponse_MSGID>() {
  return ::ProJDDDZGameUserHintResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameUserCallScoreResponse_MSGID>() {
  return ::ProJDDDZGameUserCallScoreResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameUserCallScoreRequest_MSGID>() {
  return ::ProJDDDZGameUserCallScoreRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameCallNotify_MSGID>() {
  return ::ProJDDDZGameCallNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameQiangNotify_MSGID>() {
  return ::ProJDDDZGameQiangNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameUserCallLandlordResponse_MSGID>() {
  return ::ProJDDDZGameUserCallLandlordResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameUserCallLandlordRequest_MSGID>() {
  return ::ProJDDDZGameUserCallLandlordRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameUserQinagLandlordResponse_MSGID>() {
  return ::ProJDDDZGameUserQinagLandlordResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameUserQiangLandlordRequest_MSGID>() {
  return ::ProJDDDZGameUserQiangLandlordRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameSendLastCard_MSGID>() {
  return ::ProJDDDZGameSendLastCard_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameUserMingPaiRequest_MSGID>() {
  return ::ProJDDDZGameUserMingPaiRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameUserMingPaiResponse_MSGID>() {
  return ::ProJDDDZGameUserMingPaiResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameMingNotify_MSGID>() {
  return ::ProJDDDZGameMingNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProJDDDZGameStartAgain_MSGID>() {
  return ::ProJDDDZGameStartAgain_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::JDDDZGameState>() {
  return ::JDDDZGameState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::JDDDZSEND_TYPE>() {
  return ::JDDDZSEND_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::JDDDZKIGN_TYPE>() {
  return ::JDDDZKIGN_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::JDDDZBROKEN_TYPE>() {
  return ::JDDDZBROKEN_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::JDDDZBROKEN_OPERATE>() {
  return ::JDDDZBROKEN_OPERATE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::JDDDZBROKEN_CODE>() {
  return ::JDDDZBROKEN_CODE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_jdddzpk_2eproto__INCLUDED
