// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kkpk.proto

#ifndef PROTOBUF_kkpk_2eproto__INCLUDED
#define PROTOBUF_kkpk_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "base.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_kkpk_2eproto();
void protobuf_AssignDesc_kkpk_2eproto();
void protobuf_ShutdownFile_kkpk_2eproto();

class ProWSKGameStatusResponse;
class ProWSKGameDeskInfoResponse;
class ProWSKGameReadyNotify;
class ProWSKGameReadyRequest;
class ProWSKGameReadyResponse;
class ProWSKGameStart;
class ProWSKGameDiceNotify;
class ProWSKGameDiceRequest;
class ProWSKGameDiceResult;
class ProWSKGameSendMahs;
class ProWSKGameKingData;
class ProWSKGameOutMahsResponse;
class ProWSKGameTimerPower;
class ProWSKGameOperateNotify;
class ProWSKGameOperateResult;
class ProWSKGameOperateRequest;
class ProWSKGameTrust;
class ProWSKGameOutMahRequest;
class ProWSKGameCatchCard;
class WSKMahList;
class WSKScoreList;
class WSKAwardList;
class ProWSKGameEnd;
class ProWSKGameQuickSoundRequest;
class ProWSKGameQuickSoundResponse;
class ProWSKGameSendDiscardMahs;
class WSKWeaveItem;
class WSKWeaveItems;
class ProWSKGameSendActionMahs;
class ProWSKGameBrokenRequest;
class ProWSKGameBrokenOperate;
class ProWSKGameBrokenNotify;
class ProWSKGameRuleConfig;
class ProWSKGameBrokenStatus;
class ProWSKGameDataResp;
class ProWSKGameRecordRequest;
class ProWSKGameRecordResponse;
class ProWSKGameUserLocationRequest;
class ProWSKGameSyncCardResponse;
class ProWSKGameUserPhoneStatusRequest;
class ProWSKGameUserGiveUpRequest;
class ProWSKGameUserHintRequest;
class ProWSKGameUserHintResponse;
class ProWSKGameUserDaTuNotify;
class ProWSKGameUserTeammateRequest;
class ProWSKGameUserDaTuRequest;
class ProWSKGameUserDaTuResponse;
class ProWSKGameUserDaTuResult;
class ProWSKGameShangYouResult;
class ProWSKGameShowFriendNotify;
class ProWSKGameBoomNumNotify;

enum ProWSKGameStatusResponse_MSGID {
  ProWSKGameStatusResponse_MSGID_ID = 2200
};
bool ProWSKGameStatusResponse_MSGID_IsValid(int value);
const ProWSKGameStatusResponse_MSGID ProWSKGameStatusResponse_MSGID_MSGID_MIN = ProWSKGameStatusResponse_MSGID_ID;
const ProWSKGameStatusResponse_MSGID ProWSKGameStatusResponse_MSGID_MSGID_MAX = ProWSKGameStatusResponse_MSGID_ID;
const int ProWSKGameStatusResponse_MSGID_MSGID_ARRAYSIZE = ProWSKGameStatusResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameStatusResponse_MSGID_descriptor();
inline const ::std::string& ProWSKGameStatusResponse_MSGID_Name(ProWSKGameStatusResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameStatusResponse_MSGID_descriptor(), value);
}
inline bool ProWSKGameStatusResponse_MSGID_Parse(
    const ::std::string& name, ProWSKGameStatusResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameStatusResponse_MSGID>(
    ProWSKGameStatusResponse_MSGID_descriptor(), name, value);
}
enum ProWSKGameDeskInfoResponse_MSGID {
  ProWSKGameDeskInfoResponse_MSGID_ID = 2201
};
bool ProWSKGameDeskInfoResponse_MSGID_IsValid(int value);
const ProWSKGameDeskInfoResponse_MSGID ProWSKGameDeskInfoResponse_MSGID_MSGID_MIN = ProWSKGameDeskInfoResponse_MSGID_ID;
const ProWSKGameDeskInfoResponse_MSGID ProWSKGameDeskInfoResponse_MSGID_MSGID_MAX = ProWSKGameDeskInfoResponse_MSGID_ID;
const int ProWSKGameDeskInfoResponse_MSGID_MSGID_ARRAYSIZE = ProWSKGameDeskInfoResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameDeskInfoResponse_MSGID_descriptor();
inline const ::std::string& ProWSKGameDeskInfoResponse_MSGID_Name(ProWSKGameDeskInfoResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameDeskInfoResponse_MSGID_descriptor(), value);
}
inline bool ProWSKGameDeskInfoResponse_MSGID_Parse(
    const ::std::string& name, ProWSKGameDeskInfoResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameDeskInfoResponse_MSGID>(
    ProWSKGameDeskInfoResponse_MSGID_descriptor(), name, value);
}
enum ProWSKGameReadyNotify_MSGID {
  ProWSKGameReadyNotify_MSGID_ID = 2202
};
bool ProWSKGameReadyNotify_MSGID_IsValid(int value);
const ProWSKGameReadyNotify_MSGID ProWSKGameReadyNotify_MSGID_MSGID_MIN = ProWSKGameReadyNotify_MSGID_ID;
const ProWSKGameReadyNotify_MSGID ProWSKGameReadyNotify_MSGID_MSGID_MAX = ProWSKGameReadyNotify_MSGID_ID;
const int ProWSKGameReadyNotify_MSGID_MSGID_ARRAYSIZE = ProWSKGameReadyNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameReadyNotify_MSGID_descriptor();
inline const ::std::string& ProWSKGameReadyNotify_MSGID_Name(ProWSKGameReadyNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameReadyNotify_MSGID_descriptor(), value);
}
inline bool ProWSKGameReadyNotify_MSGID_Parse(
    const ::std::string& name, ProWSKGameReadyNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameReadyNotify_MSGID>(
    ProWSKGameReadyNotify_MSGID_descriptor(), name, value);
}
enum ProWSKGameReadyRequest_MSGID {
  ProWSKGameReadyRequest_MSGID_ID = 2203
};
bool ProWSKGameReadyRequest_MSGID_IsValid(int value);
const ProWSKGameReadyRequest_MSGID ProWSKGameReadyRequest_MSGID_MSGID_MIN = ProWSKGameReadyRequest_MSGID_ID;
const ProWSKGameReadyRequest_MSGID ProWSKGameReadyRequest_MSGID_MSGID_MAX = ProWSKGameReadyRequest_MSGID_ID;
const int ProWSKGameReadyRequest_MSGID_MSGID_ARRAYSIZE = ProWSKGameReadyRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameReadyRequest_MSGID_descriptor();
inline const ::std::string& ProWSKGameReadyRequest_MSGID_Name(ProWSKGameReadyRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameReadyRequest_MSGID_descriptor(), value);
}
inline bool ProWSKGameReadyRequest_MSGID_Parse(
    const ::std::string& name, ProWSKGameReadyRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameReadyRequest_MSGID>(
    ProWSKGameReadyRequest_MSGID_descriptor(), name, value);
}
enum ProWSKGameReadyResponse_MSGID {
  ProWSKGameReadyResponse_MSGID_ID = 2204
};
bool ProWSKGameReadyResponse_MSGID_IsValid(int value);
const ProWSKGameReadyResponse_MSGID ProWSKGameReadyResponse_MSGID_MSGID_MIN = ProWSKGameReadyResponse_MSGID_ID;
const ProWSKGameReadyResponse_MSGID ProWSKGameReadyResponse_MSGID_MSGID_MAX = ProWSKGameReadyResponse_MSGID_ID;
const int ProWSKGameReadyResponse_MSGID_MSGID_ARRAYSIZE = ProWSKGameReadyResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameReadyResponse_MSGID_descriptor();
inline const ::std::string& ProWSKGameReadyResponse_MSGID_Name(ProWSKGameReadyResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameReadyResponse_MSGID_descriptor(), value);
}
inline bool ProWSKGameReadyResponse_MSGID_Parse(
    const ::std::string& name, ProWSKGameReadyResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameReadyResponse_MSGID>(
    ProWSKGameReadyResponse_MSGID_descriptor(), name, value);
}
enum ProWSKGameStart_MSGID {
  ProWSKGameStart_MSGID_ID = 2205
};
bool ProWSKGameStart_MSGID_IsValid(int value);
const ProWSKGameStart_MSGID ProWSKGameStart_MSGID_MSGID_MIN = ProWSKGameStart_MSGID_ID;
const ProWSKGameStart_MSGID ProWSKGameStart_MSGID_MSGID_MAX = ProWSKGameStart_MSGID_ID;
const int ProWSKGameStart_MSGID_MSGID_ARRAYSIZE = ProWSKGameStart_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameStart_MSGID_descriptor();
inline const ::std::string& ProWSKGameStart_MSGID_Name(ProWSKGameStart_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameStart_MSGID_descriptor(), value);
}
inline bool ProWSKGameStart_MSGID_Parse(
    const ::std::string& name, ProWSKGameStart_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameStart_MSGID>(
    ProWSKGameStart_MSGID_descriptor(), name, value);
}
enum ProWSKGameDiceNotify_MSGID {
  ProWSKGameDiceNotify_MSGID_ID = 2206
};
bool ProWSKGameDiceNotify_MSGID_IsValid(int value);
const ProWSKGameDiceNotify_MSGID ProWSKGameDiceNotify_MSGID_MSGID_MIN = ProWSKGameDiceNotify_MSGID_ID;
const ProWSKGameDiceNotify_MSGID ProWSKGameDiceNotify_MSGID_MSGID_MAX = ProWSKGameDiceNotify_MSGID_ID;
const int ProWSKGameDiceNotify_MSGID_MSGID_ARRAYSIZE = ProWSKGameDiceNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameDiceNotify_MSGID_descriptor();
inline const ::std::string& ProWSKGameDiceNotify_MSGID_Name(ProWSKGameDiceNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameDiceNotify_MSGID_descriptor(), value);
}
inline bool ProWSKGameDiceNotify_MSGID_Parse(
    const ::std::string& name, ProWSKGameDiceNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameDiceNotify_MSGID>(
    ProWSKGameDiceNotify_MSGID_descriptor(), name, value);
}
enum ProWSKGameDiceRequest_MSGID {
  ProWSKGameDiceRequest_MSGID_ID = 2207
};
bool ProWSKGameDiceRequest_MSGID_IsValid(int value);
const ProWSKGameDiceRequest_MSGID ProWSKGameDiceRequest_MSGID_MSGID_MIN = ProWSKGameDiceRequest_MSGID_ID;
const ProWSKGameDiceRequest_MSGID ProWSKGameDiceRequest_MSGID_MSGID_MAX = ProWSKGameDiceRequest_MSGID_ID;
const int ProWSKGameDiceRequest_MSGID_MSGID_ARRAYSIZE = ProWSKGameDiceRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameDiceRequest_MSGID_descriptor();
inline const ::std::string& ProWSKGameDiceRequest_MSGID_Name(ProWSKGameDiceRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameDiceRequest_MSGID_descriptor(), value);
}
inline bool ProWSKGameDiceRequest_MSGID_Parse(
    const ::std::string& name, ProWSKGameDiceRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameDiceRequest_MSGID>(
    ProWSKGameDiceRequest_MSGID_descriptor(), name, value);
}
enum ProWSKGameDiceResult_MSGID {
  ProWSKGameDiceResult_MSGID_ID = 2208
};
bool ProWSKGameDiceResult_MSGID_IsValid(int value);
const ProWSKGameDiceResult_MSGID ProWSKGameDiceResult_MSGID_MSGID_MIN = ProWSKGameDiceResult_MSGID_ID;
const ProWSKGameDiceResult_MSGID ProWSKGameDiceResult_MSGID_MSGID_MAX = ProWSKGameDiceResult_MSGID_ID;
const int ProWSKGameDiceResult_MSGID_MSGID_ARRAYSIZE = ProWSKGameDiceResult_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameDiceResult_MSGID_descriptor();
inline const ::std::string& ProWSKGameDiceResult_MSGID_Name(ProWSKGameDiceResult_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameDiceResult_MSGID_descriptor(), value);
}
inline bool ProWSKGameDiceResult_MSGID_Parse(
    const ::std::string& name, ProWSKGameDiceResult_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameDiceResult_MSGID>(
    ProWSKGameDiceResult_MSGID_descriptor(), name, value);
}
enum ProWSKGameSendMahs_MSGID {
  ProWSKGameSendMahs_MSGID_ID = 2209
};
bool ProWSKGameSendMahs_MSGID_IsValid(int value);
const ProWSKGameSendMahs_MSGID ProWSKGameSendMahs_MSGID_MSGID_MIN = ProWSKGameSendMahs_MSGID_ID;
const ProWSKGameSendMahs_MSGID ProWSKGameSendMahs_MSGID_MSGID_MAX = ProWSKGameSendMahs_MSGID_ID;
const int ProWSKGameSendMahs_MSGID_MSGID_ARRAYSIZE = ProWSKGameSendMahs_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameSendMahs_MSGID_descriptor();
inline const ::std::string& ProWSKGameSendMahs_MSGID_Name(ProWSKGameSendMahs_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameSendMahs_MSGID_descriptor(), value);
}
inline bool ProWSKGameSendMahs_MSGID_Parse(
    const ::std::string& name, ProWSKGameSendMahs_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameSendMahs_MSGID>(
    ProWSKGameSendMahs_MSGID_descriptor(), name, value);
}
enum ProWSKGameKingData_MSGID {
  ProWSKGameKingData_MSGID_ID = 2210
};
bool ProWSKGameKingData_MSGID_IsValid(int value);
const ProWSKGameKingData_MSGID ProWSKGameKingData_MSGID_MSGID_MIN = ProWSKGameKingData_MSGID_ID;
const ProWSKGameKingData_MSGID ProWSKGameKingData_MSGID_MSGID_MAX = ProWSKGameKingData_MSGID_ID;
const int ProWSKGameKingData_MSGID_MSGID_ARRAYSIZE = ProWSKGameKingData_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameKingData_MSGID_descriptor();
inline const ::std::string& ProWSKGameKingData_MSGID_Name(ProWSKGameKingData_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameKingData_MSGID_descriptor(), value);
}
inline bool ProWSKGameKingData_MSGID_Parse(
    const ::std::string& name, ProWSKGameKingData_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameKingData_MSGID>(
    ProWSKGameKingData_MSGID_descriptor(), name, value);
}
enum ProWSKGameOutMahsResponse_MSGID {
  ProWSKGameOutMahsResponse_MSGID_ID = 2211
};
bool ProWSKGameOutMahsResponse_MSGID_IsValid(int value);
const ProWSKGameOutMahsResponse_MSGID ProWSKGameOutMahsResponse_MSGID_MSGID_MIN = ProWSKGameOutMahsResponse_MSGID_ID;
const ProWSKGameOutMahsResponse_MSGID ProWSKGameOutMahsResponse_MSGID_MSGID_MAX = ProWSKGameOutMahsResponse_MSGID_ID;
const int ProWSKGameOutMahsResponse_MSGID_MSGID_ARRAYSIZE = ProWSKGameOutMahsResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameOutMahsResponse_MSGID_descriptor();
inline const ::std::string& ProWSKGameOutMahsResponse_MSGID_Name(ProWSKGameOutMahsResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameOutMahsResponse_MSGID_descriptor(), value);
}
inline bool ProWSKGameOutMahsResponse_MSGID_Parse(
    const ::std::string& name, ProWSKGameOutMahsResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameOutMahsResponse_MSGID>(
    ProWSKGameOutMahsResponse_MSGID_descriptor(), name, value);
}
enum ProWSKGameTimerPower_MSGID {
  ProWSKGameTimerPower_MSGID_ID = 2212
};
bool ProWSKGameTimerPower_MSGID_IsValid(int value);
const ProWSKGameTimerPower_MSGID ProWSKGameTimerPower_MSGID_MSGID_MIN = ProWSKGameTimerPower_MSGID_ID;
const ProWSKGameTimerPower_MSGID ProWSKGameTimerPower_MSGID_MSGID_MAX = ProWSKGameTimerPower_MSGID_ID;
const int ProWSKGameTimerPower_MSGID_MSGID_ARRAYSIZE = ProWSKGameTimerPower_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameTimerPower_MSGID_descriptor();
inline const ::std::string& ProWSKGameTimerPower_MSGID_Name(ProWSKGameTimerPower_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameTimerPower_MSGID_descriptor(), value);
}
inline bool ProWSKGameTimerPower_MSGID_Parse(
    const ::std::string& name, ProWSKGameTimerPower_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameTimerPower_MSGID>(
    ProWSKGameTimerPower_MSGID_descriptor(), name, value);
}
enum ProWSKGameOperateNotify_MSGID {
  ProWSKGameOperateNotify_MSGID_ID = 2213
};
bool ProWSKGameOperateNotify_MSGID_IsValid(int value);
const ProWSKGameOperateNotify_MSGID ProWSKGameOperateNotify_MSGID_MSGID_MIN = ProWSKGameOperateNotify_MSGID_ID;
const ProWSKGameOperateNotify_MSGID ProWSKGameOperateNotify_MSGID_MSGID_MAX = ProWSKGameOperateNotify_MSGID_ID;
const int ProWSKGameOperateNotify_MSGID_MSGID_ARRAYSIZE = ProWSKGameOperateNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameOperateNotify_MSGID_descriptor();
inline const ::std::string& ProWSKGameOperateNotify_MSGID_Name(ProWSKGameOperateNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameOperateNotify_MSGID_descriptor(), value);
}
inline bool ProWSKGameOperateNotify_MSGID_Parse(
    const ::std::string& name, ProWSKGameOperateNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameOperateNotify_MSGID>(
    ProWSKGameOperateNotify_MSGID_descriptor(), name, value);
}
enum ProWSKGameOperateResult_MSGID {
  ProWSKGameOperateResult_MSGID_ID = 2214
};
bool ProWSKGameOperateResult_MSGID_IsValid(int value);
const ProWSKGameOperateResult_MSGID ProWSKGameOperateResult_MSGID_MSGID_MIN = ProWSKGameOperateResult_MSGID_ID;
const ProWSKGameOperateResult_MSGID ProWSKGameOperateResult_MSGID_MSGID_MAX = ProWSKGameOperateResult_MSGID_ID;
const int ProWSKGameOperateResult_MSGID_MSGID_ARRAYSIZE = ProWSKGameOperateResult_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameOperateResult_MSGID_descriptor();
inline const ::std::string& ProWSKGameOperateResult_MSGID_Name(ProWSKGameOperateResult_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameOperateResult_MSGID_descriptor(), value);
}
inline bool ProWSKGameOperateResult_MSGID_Parse(
    const ::std::string& name, ProWSKGameOperateResult_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameOperateResult_MSGID>(
    ProWSKGameOperateResult_MSGID_descriptor(), name, value);
}
enum ProWSKGameOperateRequest_MSGID {
  ProWSKGameOperateRequest_MSGID_ID = 2215
};
bool ProWSKGameOperateRequest_MSGID_IsValid(int value);
const ProWSKGameOperateRequest_MSGID ProWSKGameOperateRequest_MSGID_MSGID_MIN = ProWSKGameOperateRequest_MSGID_ID;
const ProWSKGameOperateRequest_MSGID ProWSKGameOperateRequest_MSGID_MSGID_MAX = ProWSKGameOperateRequest_MSGID_ID;
const int ProWSKGameOperateRequest_MSGID_MSGID_ARRAYSIZE = ProWSKGameOperateRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameOperateRequest_MSGID_descriptor();
inline const ::std::string& ProWSKGameOperateRequest_MSGID_Name(ProWSKGameOperateRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameOperateRequest_MSGID_descriptor(), value);
}
inline bool ProWSKGameOperateRequest_MSGID_Parse(
    const ::std::string& name, ProWSKGameOperateRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameOperateRequest_MSGID>(
    ProWSKGameOperateRequest_MSGID_descriptor(), name, value);
}
enum ProWSKGameTrust_MSGID {
  ProWSKGameTrust_MSGID_ID = 2216
};
bool ProWSKGameTrust_MSGID_IsValid(int value);
const ProWSKGameTrust_MSGID ProWSKGameTrust_MSGID_MSGID_MIN = ProWSKGameTrust_MSGID_ID;
const ProWSKGameTrust_MSGID ProWSKGameTrust_MSGID_MSGID_MAX = ProWSKGameTrust_MSGID_ID;
const int ProWSKGameTrust_MSGID_MSGID_ARRAYSIZE = ProWSKGameTrust_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameTrust_MSGID_descriptor();
inline const ::std::string& ProWSKGameTrust_MSGID_Name(ProWSKGameTrust_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameTrust_MSGID_descriptor(), value);
}
inline bool ProWSKGameTrust_MSGID_Parse(
    const ::std::string& name, ProWSKGameTrust_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameTrust_MSGID>(
    ProWSKGameTrust_MSGID_descriptor(), name, value);
}
enum ProWSKGameOutMahRequest_MSGID {
  ProWSKGameOutMahRequest_MSGID_ID = 2217
};
bool ProWSKGameOutMahRequest_MSGID_IsValid(int value);
const ProWSKGameOutMahRequest_MSGID ProWSKGameOutMahRequest_MSGID_MSGID_MIN = ProWSKGameOutMahRequest_MSGID_ID;
const ProWSKGameOutMahRequest_MSGID ProWSKGameOutMahRequest_MSGID_MSGID_MAX = ProWSKGameOutMahRequest_MSGID_ID;
const int ProWSKGameOutMahRequest_MSGID_MSGID_ARRAYSIZE = ProWSKGameOutMahRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameOutMahRequest_MSGID_descriptor();
inline const ::std::string& ProWSKGameOutMahRequest_MSGID_Name(ProWSKGameOutMahRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameOutMahRequest_MSGID_descriptor(), value);
}
inline bool ProWSKGameOutMahRequest_MSGID_Parse(
    const ::std::string& name, ProWSKGameOutMahRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameOutMahRequest_MSGID>(
    ProWSKGameOutMahRequest_MSGID_descriptor(), name, value);
}
enum ProWSKGameCatchCard_MSGID {
  ProWSKGameCatchCard_MSGID_ID = 2218
};
bool ProWSKGameCatchCard_MSGID_IsValid(int value);
const ProWSKGameCatchCard_MSGID ProWSKGameCatchCard_MSGID_MSGID_MIN = ProWSKGameCatchCard_MSGID_ID;
const ProWSKGameCatchCard_MSGID ProWSKGameCatchCard_MSGID_MSGID_MAX = ProWSKGameCatchCard_MSGID_ID;
const int ProWSKGameCatchCard_MSGID_MSGID_ARRAYSIZE = ProWSKGameCatchCard_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameCatchCard_MSGID_descriptor();
inline const ::std::string& ProWSKGameCatchCard_MSGID_Name(ProWSKGameCatchCard_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameCatchCard_MSGID_descriptor(), value);
}
inline bool ProWSKGameCatchCard_MSGID_Parse(
    const ::std::string& name, ProWSKGameCatchCard_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameCatchCard_MSGID>(
    ProWSKGameCatchCard_MSGID_descriptor(), name, value);
}
enum ProWSKGameEnd_MSGID {
  ProWSKGameEnd_MSGID_ID = 2219
};
bool ProWSKGameEnd_MSGID_IsValid(int value);
const ProWSKGameEnd_MSGID ProWSKGameEnd_MSGID_MSGID_MIN = ProWSKGameEnd_MSGID_ID;
const ProWSKGameEnd_MSGID ProWSKGameEnd_MSGID_MSGID_MAX = ProWSKGameEnd_MSGID_ID;
const int ProWSKGameEnd_MSGID_MSGID_ARRAYSIZE = ProWSKGameEnd_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameEnd_MSGID_descriptor();
inline const ::std::string& ProWSKGameEnd_MSGID_Name(ProWSKGameEnd_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameEnd_MSGID_descriptor(), value);
}
inline bool ProWSKGameEnd_MSGID_Parse(
    const ::std::string& name, ProWSKGameEnd_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameEnd_MSGID>(
    ProWSKGameEnd_MSGID_descriptor(), name, value);
}
enum ProWSKGameQuickSoundRequest_MSGID {
  ProWSKGameQuickSoundRequest_MSGID_ID = 2220
};
bool ProWSKGameQuickSoundRequest_MSGID_IsValid(int value);
const ProWSKGameQuickSoundRequest_MSGID ProWSKGameQuickSoundRequest_MSGID_MSGID_MIN = ProWSKGameQuickSoundRequest_MSGID_ID;
const ProWSKGameQuickSoundRequest_MSGID ProWSKGameQuickSoundRequest_MSGID_MSGID_MAX = ProWSKGameQuickSoundRequest_MSGID_ID;
const int ProWSKGameQuickSoundRequest_MSGID_MSGID_ARRAYSIZE = ProWSKGameQuickSoundRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameQuickSoundRequest_MSGID_descriptor();
inline const ::std::string& ProWSKGameQuickSoundRequest_MSGID_Name(ProWSKGameQuickSoundRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameQuickSoundRequest_MSGID_descriptor(), value);
}
inline bool ProWSKGameQuickSoundRequest_MSGID_Parse(
    const ::std::string& name, ProWSKGameQuickSoundRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameQuickSoundRequest_MSGID>(
    ProWSKGameQuickSoundRequest_MSGID_descriptor(), name, value);
}
enum ProWSKGameQuickSoundResponse_MSGID {
  ProWSKGameQuickSoundResponse_MSGID_ID = 2221
};
bool ProWSKGameQuickSoundResponse_MSGID_IsValid(int value);
const ProWSKGameQuickSoundResponse_MSGID ProWSKGameQuickSoundResponse_MSGID_MSGID_MIN = ProWSKGameQuickSoundResponse_MSGID_ID;
const ProWSKGameQuickSoundResponse_MSGID ProWSKGameQuickSoundResponse_MSGID_MSGID_MAX = ProWSKGameQuickSoundResponse_MSGID_ID;
const int ProWSKGameQuickSoundResponse_MSGID_MSGID_ARRAYSIZE = ProWSKGameQuickSoundResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameQuickSoundResponse_MSGID_descriptor();
inline const ::std::string& ProWSKGameQuickSoundResponse_MSGID_Name(ProWSKGameQuickSoundResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameQuickSoundResponse_MSGID_descriptor(), value);
}
inline bool ProWSKGameQuickSoundResponse_MSGID_Parse(
    const ::std::string& name, ProWSKGameQuickSoundResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameQuickSoundResponse_MSGID>(
    ProWSKGameQuickSoundResponse_MSGID_descriptor(), name, value);
}
enum ProWSKGameSendDiscardMahs_MSGID {
  ProWSKGameSendDiscardMahs_MSGID_ID = 2222
};
bool ProWSKGameSendDiscardMahs_MSGID_IsValid(int value);
const ProWSKGameSendDiscardMahs_MSGID ProWSKGameSendDiscardMahs_MSGID_MSGID_MIN = ProWSKGameSendDiscardMahs_MSGID_ID;
const ProWSKGameSendDiscardMahs_MSGID ProWSKGameSendDiscardMahs_MSGID_MSGID_MAX = ProWSKGameSendDiscardMahs_MSGID_ID;
const int ProWSKGameSendDiscardMahs_MSGID_MSGID_ARRAYSIZE = ProWSKGameSendDiscardMahs_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameSendDiscardMahs_MSGID_descriptor();
inline const ::std::string& ProWSKGameSendDiscardMahs_MSGID_Name(ProWSKGameSendDiscardMahs_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameSendDiscardMahs_MSGID_descriptor(), value);
}
inline bool ProWSKGameSendDiscardMahs_MSGID_Parse(
    const ::std::string& name, ProWSKGameSendDiscardMahs_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameSendDiscardMahs_MSGID>(
    ProWSKGameSendDiscardMahs_MSGID_descriptor(), name, value);
}
enum ProWSKGameSendActionMahs_MSGID {
  ProWSKGameSendActionMahs_MSGID_ID = 2223
};
bool ProWSKGameSendActionMahs_MSGID_IsValid(int value);
const ProWSKGameSendActionMahs_MSGID ProWSKGameSendActionMahs_MSGID_MSGID_MIN = ProWSKGameSendActionMahs_MSGID_ID;
const ProWSKGameSendActionMahs_MSGID ProWSKGameSendActionMahs_MSGID_MSGID_MAX = ProWSKGameSendActionMahs_MSGID_ID;
const int ProWSKGameSendActionMahs_MSGID_MSGID_ARRAYSIZE = ProWSKGameSendActionMahs_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameSendActionMahs_MSGID_descriptor();
inline const ::std::string& ProWSKGameSendActionMahs_MSGID_Name(ProWSKGameSendActionMahs_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameSendActionMahs_MSGID_descriptor(), value);
}
inline bool ProWSKGameSendActionMahs_MSGID_Parse(
    const ::std::string& name, ProWSKGameSendActionMahs_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameSendActionMahs_MSGID>(
    ProWSKGameSendActionMahs_MSGID_descriptor(), name, value);
}
enum ProWSKGameBrokenRequest_MSGID {
  ProWSKGameBrokenRequest_MSGID_ID = 2224
};
bool ProWSKGameBrokenRequest_MSGID_IsValid(int value);
const ProWSKGameBrokenRequest_MSGID ProWSKGameBrokenRequest_MSGID_MSGID_MIN = ProWSKGameBrokenRequest_MSGID_ID;
const ProWSKGameBrokenRequest_MSGID ProWSKGameBrokenRequest_MSGID_MSGID_MAX = ProWSKGameBrokenRequest_MSGID_ID;
const int ProWSKGameBrokenRequest_MSGID_MSGID_ARRAYSIZE = ProWSKGameBrokenRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameBrokenRequest_MSGID_descriptor();
inline const ::std::string& ProWSKGameBrokenRequest_MSGID_Name(ProWSKGameBrokenRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameBrokenRequest_MSGID_descriptor(), value);
}
inline bool ProWSKGameBrokenRequest_MSGID_Parse(
    const ::std::string& name, ProWSKGameBrokenRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameBrokenRequest_MSGID>(
    ProWSKGameBrokenRequest_MSGID_descriptor(), name, value);
}
enum ProWSKGameBrokenOperate_MSGID {
  ProWSKGameBrokenOperate_MSGID_ID = 2225
};
bool ProWSKGameBrokenOperate_MSGID_IsValid(int value);
const ProWSKGameBrokenOperate_MSGID ProWSKGameBrokenOperate_MSGID_MSGID_MIN = ProWSKGameBrokenOperate_MSGID_ID;
const ProWSKGameBrokenOperate_MSGID ProWSKGameBrokenOperate_MSGID_MSGID_MAX = ProWSKGameBrokenOperate_MSGID_ID;
const int ProWSKGameBrokenOperate_MSGID_MSGID_ARRAYSIZE = ProWSKGameBrokenOperate_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameBrokenOperate_MSGID_descriptor();
inline const ::std::string& ProWSKGameBrokenOperate_MSGID_Name(ProWSKGameBrokenOperate_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameBrokenOperate_MSGID_descriptor(), value);
}
inline bool ProWSKGameBrokenOperate_MSGID_Parse(
    const ::std::string& name, ProWSKGameBrokenOperate_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameBrokenOperate_MSGID>(
    ProWSKGameBrokenOperate_MSGID_descriptor(), name, value);
}
enum ProWSKGameBrokenNotify_MSGID {
  ProWSKGameBrokenNotify_MSGID_ID = 2226
};
bool ProWSKGameBrokenNotify_MSGID_IsValid(int value);
const ProWSKGameBrokenNotify_MSGID ProWSKGameBrokenNotify_MSGID_MSGID_MIN = ProWSKGameBrokenNotify_MSGID_ID;
const ProWSKGameBrokenNotify_MSGID ProWSKGameBrokenNotify_MSGID_MSGID_MAX = ProWSKGameBrokenNotify_MSGID_ID;
const int ProWSKGameBrokenNotify_MSGID_MSGID_ARRAYSIZE = ProWSKGameBrokenNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameBrokenNotify_MSGID_descriptor();
inline const ::std::string& ProWSKGameBrokenNotify_MSGID_Name(ProWSKGameBrokenNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameBrokenNotify_MSGID_descriptor(), value);
}
inline bool ProWSKGameBrokenNotify_MSGID_Parse(
    const ::std::string& name, ProWSKGameBrokenNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameBrokenNotify_MSGID>(
    ProWSKGameBrokenNotify_MSGID_descriptor(), name, value);
}
enum ProWSKGameRuleConfig_MSGID {
  ProWSKGameRuleConfig_MSGID_ID = 2227
};
bool ProWSKGameRuleConfig_MSGID_IsValid(int value);
const ProWSKGameRuleConfig_MSGID ProWSKGameRuleConfig_MSGID_MSGID_MIN = ProWSKGameRuleConfig_MSGID_ID;
const ProWSKGameRuleConfig_MSGID ProWSKGameRuleConfig_MSGID_MSGID_MAX = ProWSKGameRuleConfig_MSGID_ID;
const int ProWSKGameRuleConfig_MSGID_MSGID_ARRAYSIZE = ProWSKGameRuleConfig_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameRuleConfig_MSGID_descriptor();
inline const ::std::string& ProWSKGameRuleConfig_MSGID_Name(ProWSKGameRuleConfig_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameRuleConfig_MSGID_descriptor(), value);
}
inline bool ProWSKGameRuleConfig_MSGID_Parse(
    const ::std::string& name, ProWSKGameRuleConfig_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameRuleConfig_MSGID>(
    ProWSKGameRuleConfig_MSGID_descriptor(), name, value);
}
enum ProWSKGameBrokenStatus_MSGID {
  ProWSKGameBrokenStatus_MSGID_ID = 2228
};
bool ProWSKGameBrokenStatus_MSGID_IsValid(int value);
const ProWSKGameBrokenStatus_MSGID ProWSKGameBrokenStatus_MSGID_MSGID_MIN = ProWSKGameBrokenStatus_MSGID_ID;
const ProWSKGameBrokenStatus_MSGID ProWSKGameBrokenStatus_MSGID_MSGID_MAX = ProWSKGameBrokenStatus_MSGID_ID;
const int ProWSKGameBrokenStatus_MSGID_MSGID_ARRAYSIZE = ProWSKGameBrokenStatus_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameBrokenStatus_MSGID_descriptor();
inline const ::std::string& ProWSKGameBrokenStatus_MSGID_Name(ProWSKGameBrokenStatus_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameBrokenStatus_MSGID_descriptor(), value);
}
inline bool ProWSKGameBrokenStatus_MSGID_Parse(
    const ::std::string& name, ProWSKGameBrokenStatus_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameBrokenStatus_MSGID>(
    ProWSKGameBrokenStatus_MSGID_descriptor(), name, value);
}
enum ProWSKGameDataResp_MSGID {
  ProWSKGameDataResp_MSGID_ID = 2229
};
bool ProWSKGameDataResp_MSGID_IsValid(int value);
const ProWSKGameDataResp_MSGID ProWSKGameDataResp_MSGID_MSGID_MIN = ProWSKGameDataResp_MSGID_ID;
const ProWSKGameDataResp_MSGID ProWSKGameDataResp_MSGID_MSGID_MAX = ProWSKGameDataResp_MSGID_ID;
const int ProWSKGameDataResp_MSGID_MSGID_ARRAYSIZE = ProWSKGameDataResp_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameDataResp_MSGID_descriptor();
inline const ::std::string& ProWSKGameDataResp_MSGID_Name(ProWSKGameDataResp_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameDataResp_MSGID_descriptor(), value);
}
inline bool ProWSKGameDataResp_MSGID_Parse(
    const ::std::string& name, ProWSKGameDataResp_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameDataResp_MSGID>(
    ProWSKGameDataResp_MSGID_descriptor(), name, value);
}
enum ProWSKGameRecordRequest_MSGID {
  ProWSKGameRecordRequest_MSGID_ID = 2230
};
bool ProWSKGameRecordRequest_MSGID_IsValid(int value);
const ProWSKGameRecordRequest_MSGID ProWSKGameRecordRequest_MSGID_MSGID_MIN = ProWSKGameRecordRequest_MSGID_ID;
const ProWSKGameRecordRequest_MSGID ProWSKGameRecordRequest_MSGID_MSGID_MAX = ProWSKGameRecordRequest_MSGID_ID;
const int ProWSKGameRecordRequest_MSGID_MSGID_ARRAYSIZE = ProWSKGameRecordRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameRecordRequest_MSGID_descriptor();
inline const ::std::string& ProWSKGameRecordRequest_MSGID_Name(ProWSKGameRecordRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameRecordRequest_MSGID_descriptor(), value);
}
inline bool ProWSKGameRecordRequest_MSGID_Parse(
    const ::std::string& name, ProWSKGameRecordRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameRecordRequest_MSGID>(
    ProWSKGameRecordRequest_MSGID_descriptor(), name, value);
}
enum ProWSKGameRecordResponse_MSGID {
  ProWSKGameRecordResponse_MSGID_ID = 2231
};
bool ProWSKGameRecordResponse_MSGID_IsValid(int value);
const ProWSKGameRecordResponse_MSGID ProWSKGameRecordResponse_MSGID_MSGID_MIN = ProWSKGameRecordResponse_MSGID_ID;
const ProWSKGameRecordResponse_MSGID ProWSKGameRecordResponse_MSGID_MSGID_MAX = ProWSKGameRecordResponse_MSGID_ID;
const int ProWSKGameRecordResponse_MSGID_MSGID_ARRAYSIZE = ProWSKGameRecordResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameRecordResponse_MSGID_descriptor();
inline const ::std::string& ProWSKGameRecordResponse_MSGID_Name(ProWSKGameRecordResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameRecordResponse_MSGID_descriptor(), value);
}
inline bool ProWSKGameRecordResponse_MSGID_Parse(
    const ::std::string& name, ProWSKGameRecordResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameRecordResponse_MSGID>(
    ProWSKGameRecordResponse_MSGID_descriptor(), name, value);
}
enum ProWSKGameUserLocationRequest_MSGID {
  ProWSKGameUserLocationRequest_MSGID_ID = 2232
};
bool ProWSKGameUserLocationRequest_MSGID_IsValid(int value);
const ProWSKGameUserLocationRequest_MSGID ProWSKGameUserLocationRequest_MSGID_MSGID_MIN = ProWSKGameUserLocationRequest_MSGID_ID;
const ProWSKGameUserLocationRequest_MSGID ProWSKGameUserLocationRequest_MSGID_MSGID_MAX = ProWSKGameUserLocationRequest_MSGID_ID;
const int ProWSKGameUserLocationRequest_MSGID_MSGID_ARRAYSIZE = ProWSKGameUserLocationRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameUserLocationRequest_MSGID_descriptor();
inline const ::std::string& ProWSKGameUserLocationRequest_MSGID_Name(ProWSKGameUserLocationRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameUserLocationRequest_MSGID_descriptor(), value);
}
inline bool ProWSKGameUserLocationRequest_MSGID_Parse(
    const ::std::string& name, ProWSKGameUserLocationRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameUserLocationRequest_MSGID>(
    ProWSKGameUserLocationRequest_MSGID_descriptor(), name, value);
}
enum ProWSKGameSyncCardResponse_MSGID {
  ProWSKGameSyncCardResponse_MSGID_ID = 2233
};
bool ProWSKGameSyncCardResponse_MSGID_IsValid(int value);
const ProWSKGameSyncCardResponse_MSGID ProWSKGameSyncCardResponse_MSGID_MSGID_MIN = ProWSKGameSyncCardResponse_MSGID_ID;
const ProWSKGameSyncCardResponse_MSGID ProWSKGameSyncCardResponse_MSGID_MSGID_MAX = ProWSKGameSyncCardResponse_MSGID_ID;
const int ProWSKGameSyncCardResponse_MSGID_MSGID_ARRAYSIZE = ProWSKGameSyncCardResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameSyncCardResponse_MSGID_descriptor();
inline const ::std::string& ProWSKGameSyncCardResponse_MSGID_Name(ProWSKGameSyncCardResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameSyncCardResponse_MSGID_descriptor(), value);
}
inline bool ProWSKGameSyncCardResponse_MSGID_Parse(
    const ::std::string& name, ProWSKGameSyncCardResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameSyncCardResponse_MSGID>(
    ProWSKGameSyncCardResponse_MSGID_descriptor(), name, value);
}
enum ProWSKGameUserPhoneStatusRequest_MSGID {
  ProWSKGameUserPhoneStatusRequest_MSGID_ID = 2234
};
bool ProWSKGameUserPhoneStatusRequest_MSGID_IsValid(int value);
const ProWSKGameUserPhoneStatusRequest_MSGID ProWSKGameUserPhoneStatusRequest_MSGID_MSGID_MIN = ProWSKGameUserPhoneStatusRequest_MSGID_ID;
const ProWSKGameUserPhoneStatusRequest_MSGID ProWSKGameUserPhoneStatusRequest_MSGID_MSGID_MAX = ProWSKGameUserPhoneStatusRequest_MSGID_ID;
const int ProWSKGameUserPhoneStatusRequest_MSGID_MSGID_ARRAYSIZE = ProWSKGameUserPhoneStatusRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameUserPhoneStatusRequest_MSGID_descriptor();
inline const ::std::string& ProWSKGameUserPhoneStatusRequest_MSGID_Name(ProWSKGameUserPhoneStatusRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameUserPhoneStatusRequest_MSGID_descriptor(), value);
}
inline bool ProWSKGameUserPhoneStatusRequest_MSGID_Parse(
    const ::std::string& name, ProWSKGameUserPhoneStatusRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameUserPhoneStatusRequest_MSGID>(
    ProWSKGameUserPhoneStatusRequest_MSGID_descriptor(), name, value);
}
enum ProWSKGameUserGiveUpRequest_MSGID {
  ProWSKGameUserGiveUpRequest_MSGID_ID = 2235
};
bool ProWSKGameUserGiveUpRequest_MSGID_IsValid(int value);
const ProWSKGameUserGiveUpRequest_MSGID ProWSKGameUserGiveUpRequest_MSGID_MSGID_MIN = ProWSKGameUserGiveUpRequest_MSGID_ID;
const ProWSKGameUserGiveUpRequest_MSGID ProWSKGameUserGiveUpRequest_MSGID_MSGID_MAX = ProWSKGameUserGiveUpRequest_MSGID_ID;
const int ProWSKGameUserGiveUpRequest_MSGID_MSGID_ARRAYSIZE = ProWSKGameUserGiveUpRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameUserGiveUpRequest_MSGID_descriptor();
inline const ::std::string& ProWSKGameUserGiveUpRequest_MSGID_Name(ProWSKGameUserGiveUpRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameUserGiveUpRequest_MSGID_descriptor(), value);
}
inline bool ProWSKGameUserGiveUpRequest_MSGID_Parse(
    const ::std::string& name, ProWSKGameUserGiveUpRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameUserGiveUpRequest_MSGID>(
    ProWSKGameUserGiveUpRequest_MSGID_descriptor(), name, value);
}
enum ProWSKGameUserHintRequest_MSGID {
  ProWSKGameUserHintRequest_MSGID_ID = 2236
};
bool ProWSKGameUserHintRequest_MSGID_IsValid(int value);
const ProWSKGameUserHintRequest_MSGID ProWSKGameUserHintRequest_MSGID_MSGID_MIN = ProWSKGameUserHintRequest_MSGID_ID;
const ProWSKGameUserHintRequest_MSGID ProWSKGameUserHintRequest_MSGID_MSGID_MAX = ProWSKGameUserHintRequest_MSGID_ID;
const int ProWSKGameUserHintRequest_MSGID_MSGID_ARRAYSIZE = ProWSKGameUserHintRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameUserHintRequest_MSGID_descriptor();
inline const ::std::string& ProWSKGameUserHintRequest_MSGID_Name(ProWSKGameUserHintRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameUserHintRequest_MSGID_descriptor(), value);
}
inline bool ProWSKGameUserHintRequest_MSGID_Parse(
    const ::std::string& name, ProWSKGameUserHintRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameUserHintRequest_MSGID>(
    ProWSKGameUserHintRequest_MSGID_descriptor(), name, value);
}
enum ProWSKGameUserHintResponse_MSGID {
  ProWSKGameUserHintResponse_MSGID_ID = 2237
};
bool ProWSKGameUserHintResponse_MSGID_IsValid(int value);
const ProWSKGameUserHintResponse_MSGID ProWSKGameUserHintResponse_MSGID_MSGID_MIN = ProWSKGameUserHintResponse_MSGID_ID;
const ProWSKGameUserHintResponse_MSGID ProWSKGameUserHintResponse_MSGID_MSGID_MAX = ProWSKGameUserHintResponse_MSGID_ID;
const int ProWSKGameUserHintResponse_MSGID_MSGID_ARRAYSIZE = ProWSKGameUserHintResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameUserHintResponse_MSGID_descriptor();
inline const ::std::string& ProWSKGameUserHintResponse_MSGID_Name(ProWSKGameUserHintResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameUserHintResponse_MSGID_descriptor(), value);
}
inline bool ProWSKGameUserHintResponse_MSGID_Parse(
    const ::std::string& name, ProWSKGameUserHintResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameUserHintResponse_MSGID>(
    ProWSKGameUserHintResponse_MSGID_descriptor(), name, value);
}
enum ProWSKGameUserDaTuNotify_MSGID {
  ProWSKGameUserDaTuNotify_MSGID_ID = 2238
};
bool ProWSKGameUserDaTuNotify_MSGID_IsValid(int value);
const ProWSKGameUserDaTuNotify_MSGID ProWSKGameUserDaTuNotify_MSGID_MSGID_MIN = ProWSKGameUserDaTuNotify_MSGID_ID;
const ProWSKGameUserDaTuNotify_MSGID ProWSKGameUserDaTuNotify_MSGID_MSGID_MAX = ProWSKGameUserDaTuNotify_MSGID_ID;
const int ProWSKGameUserDaTuNotify_MSGID_MSGID_ARRAYSIZE = ProWSKGameUserDaTuNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameUserDaTuNotify_MSGID_descriptor();
inline const ::std::string& ProWSKGameUserDaTuNotify_MSGID_Name(ProWSKGameUserDaTuNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameUserDaTuNotify_MSGID_descriptor(), value);
}
inline bool ProWSKGameUserDaTuNotify_MSGID_Parse(
    const ::std::string& name, ProWSKGameUserDaTuNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameUserDaTuNotify_MSGID>(
    ProWSKGameUserDaTuNotify_MSGID_descriptor(), name, value);
}
enum ProWSKGameUserTeammateRequest_MSGID {
  ProWSKGameUserTeammateRequest_MSGID_ID = 2239
};
bool ProWSKGameUserTeammateRequest_MSGID_IsValid(int value);
const ProWSKGameUserTeammateRequest_MSGID ProWSKGameUserTeammateRequest_MSGID_MSGID_MIN = ProWSKGameUserTeammateRequest_MSGID_ID;
const ProWSKGameUserTeammateRequest_MSGID ProWSKGameUserTeammateRequest_MSGID_MSGID_MAX = ProWSKGameUserTeammateRequest_MSGID_ID;
const int ProWSKGameUserTeammateRequest_MSGID_MSGID_ARRAYSIZE = ProWSKGameUserTeammateRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameUserTeammateRequest_MSGID_descriptor();
inline const ::std::string& ProWSKGameUserTeammateRequest_MSGID_Name(ProWSKGameUserTeammateRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameUserTeammateRequest_MSGID_descriptor(), value);
}
inline bool ProWSKGameUserTeammateRequest_MSGID_Parse(
    const ::std::string& name, ProWSKGameUserTeammateRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameUserTeammateRequest_MSGID>(
    ProWSKGameUserTeammateRequest_MSGID_descriptor(), name, value);
}
enum ProWSKGameUserDaTuRequest_MSGID {
  ProWSKGameUserDaTuRequest_MSGID_ID = 2240
};
bool ProWSKGameUserDaTuRequest_MSGID_IsValid(int value);
const ProWSKGameUserDaTuRequest_MSGID ProWSKGameUserDaTuRequest_MSGID_MSGID_MIN = ProWSKGameUserDaTuRequest_MSGID_ID;
const ProWSKGameUserDaTuRequest_MSGID ProWSKGameUserDaTuRequest_MSGID_MSGID_MAX = ProWSKGameUserDaTuRequest_MSGID_ID;
const int ProWSKGameUserDaTuRequest_MSGID_MSGID_ARRAYSIZE = ProWSKGameUserDaTuRequest_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameUserDaTuRequest_MSGID_descriptor();
inline const ::std::string& ProWSKGameUserDaTuRequest_MSGID_Name(ProWSKGameUserDaTuRequest_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameUserDaTuRequest_MSGID_descriptor(), value);
}
inline bool ProWSKGameUserDaTuRequest_MSGID_Parse(
    const ::std::string& name, ProWSKGameUserDaTuRequest_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameUserDaTuRequest_MSGID>(
    ProWSKGameUserDaTuRequest_MSGID_descriptor(), name, value);
}
enum ProWSKGameUserDaTuResponse_MSGID {
  ProWSKGameUserDaTuResponse_MSGID_ID = 2241
};
bool ProWSKGameUserDaTuResponse_MSGID_IsValid(int value);
const ProWSKGameUserDaTuResponse_MSGID ProWSKGameUserDaTuResponse_MSGID_MSGID_MIN = ProWSKGameUserDaTuResponse_MSGID_ID;
const ProWSKGameUserDaTuResponse_MSGID ProWSKGameUserDaTuResponse_MSGID_MSGID_MAX = ProWSKGameUserDaTuResponse_MSGID_ID;
const int ProWSKGameUserDaTuResponse_MSGID_MSGID_ARRAYSIZE = ProWSKGameUserDaTuResponse_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameUserDaTuResponse_MSGID_descriptor();
inline const ::std::string& ProWSKGameUserDaTuResponse_MSGID_Name(ProWSKGameUserDaTuResponse_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameUserDaTuResponse_MSGID_descriptor(), value);
}
inline bool ProWSKGameUserDaTuResponse_MSGID_Parse(
    const ::std::string& name, ProWSKGameUserDaTuResponse_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameUserDaTuResponse_MSGID>(
    ProWSKGameUserDaTuResponse_MSGID_descriptor(), name, value);
}
enum ProWSKGameUserDaTuResult_MSGID {
  ProWSKGameUserDaTuResult_MSGID_ID = 2242
};
bool ProWSKGameUserDaTuResult_MSGID_IsValid(int value);
const ProWSKGameUserDaTuResult_MSGID ProWSKGameUserDaTuResult_MSGID_MSGID_MIN = ProWSKGameUserDaTuResult_MSGID_ID;
const ProWSKGameUserDaTuResult_MSGID ProWSKGameUserDaTuResult_MSGID_MSGID_MAX = ProWSKGameUserDaTuResult_MSGID_ID;
const int ProWSKGameUserDaTuResult_MSGID_MSGID_ARRAYSIZE = ProWSKGameUserDaTuResult_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameUserDaTuResult_MSGID_descriptor();
inline const ::std::string& ProWSKGameUserDaTuResult_MSGID_Name(ProWSKGameUserDaTuResult_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameUserDaTuResult_MSGID_descriptor(), value);
}
inline bool ProWSKGameUserDaTuResult_MSGID_Parse(
    const ::std::string& name, ProWSKGameUserDaTuResult_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameUserDaTuResult_MSGID>(
    ProWSKGameUserDaTuResult_MSGID_descriptor(), name, value);
}
enum ProWSKGameShangYouResult_MSGID {
  ProWSKGameShangYouResult_MSGID_ID = 2243
};
bool ProWSKGameShangYouResult_MSGID_IsValid(int value);
const ProWSKGameShangYouResult_MSGID ProWSKGameShangYouResult_MSGID_MSGID_MIN = ProWSKGameShangYouResult_MSGID_ID;
const ProWSKGameShangYouResult_MSGID ProWSKGameShangYouResult_MSGID_MSGID_MAX = ProWSKGameShangYouResult_MSGID_ID;
const int ProWSKGameShangYouResult_MSGID_MSGID_ARRAYSIZE = ProWSKGameShangYouResult_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameShangYouResult_MSGID_descriptor();
inline const ::std::string& ProWSKGameShangYouResult_MSGID_Name(ProWSKGameShangYouResult_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameShangYouResult_MSGID_descriptor(), value);
}
inline bool ProWSKGameShangYouResult_MSGID_Parse(
    const ::std::string& name, ProWSKGameShangYouResult_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameShangYouResult_MSGID>(
    ProWSKGameShangYouResult_MSGID_descriptor(), name, value);
}
enum ProWSKGameShowFriendNotify_MSGID {
  ProWSKGameShowFriendNotify_MSGID_ID = 2244
};
bool ProWSKGameShowFriendNotify_MSGID_IsValid(int value);
const ProWSKGameShowFriendNotify_MSGID ProWSKGameShowFriendNotify_MSGID_MSGID_MIN = ProWSKGameShowFriendNotify_MSGID_ID;
const ProWSKGameShowFriendNotify_MSGID ProWSKGameShowFriendNotify_MSGID_MSGID_MAX = ProWSKGameShowFriendNotify_MSGID_ID;
const int ProWSKGameShowFriendNotify_MSGID_MSGID_ARRAYSIZE = ProWSKGameShowFriendNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameShowFriendNotify_MSGID_descriptor();
inline const ::std::string& ProWSKGameShowFriendNotify_MSGID_Name(ProWSKGameShowFriendNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameShowFriendNotify_MSGID_descriptor(), value);
}
inline bool ProWSKGameShowFriendNotify_MSGID_Parse(
    const ::std::string& name, ProWSKGameShowFriendNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameShowFriendNotify_MSGID>(
    ProWSKGameShowFriendNotify_MSGID_descriptor(), name, value);
}
enum ProWSKGameBoomNumNotify_MSGID {
  ProWSKGameBoomNumNotify_MSGID_ID = 2245
};
bool ProWSKGameBoomNumNotify_MSGID_IsValid(int value);
const ProWSKGameBoomNumNotify_MSGID ProWSKGameBoomNumNotify_MSGID_MSGID_MIN = ProWSKGameBoomNumNotify_MSGID_ID;
const ProWSKGameBoomNumNotify_MSGID ProWSKGameBoomNumNotify_MSGID_MSGID_MAX = ProWSKGameBoomNumNotify_MSGID_ID;
const int ProWSKGameBoomNumNotify_MSGID_MSGID_ARRAYSIZE = ProWSKGameBoomNumNotify_MSGID_MSGID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProWSKGameBoomNumNotify_MSGID_descriptor();
inline const ::std::string& ProWSKGameBoomNumNotify_MSGID_Name(ProWSKGameBoomNumNotify_MSGID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProWSKGameBoomNumNotify_MSGID_descriptor(), value);
}
inline bool ProWSKGameBoomNumNotify_MSGID_Parse(
    const ::std::string& name, ProWSKGameBoomNumNotify_MSGID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProWSKGameBoomNumNotify_MSGID>(
    ProWSKGameBoomNumNotify_MSGID_descriptor(), name, value);
}
enum WSKGameState {
  WSK_GAME_IDLE = 1,
  WSK_GAME_DICE_BANK = 2,
  WSK_GAME_SEND = 3,
  WSK_GAME_DATU = 4,
  WSK_GAME_PLAY = 6,
  WSK_GAME_END = 7
};
bool WSKGameState_IsValid(int value);
const WSKGameState WSKGameState_MIN = WSK_GAME_IDLE;
const WSKGameState WSKGameState_MAX = WSK_GAME_END;
const int WSKGameState_ARRAYSIZE = WSKGameState_MAX + 1;

const ::google::protobuf::EnumDescriptor* WSKGameState_descriptor();
inline const ::std::string& WSKGameState_Name(WSKGameState value) {
  return ::google::protobuf::internal::NameOfEnum(
    WSKGameState_descriptor(), value);
}
inline bool WSKGameState_Parse(
    const ::std::string& name, WSKGameState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WSKGameState>(
    WSKGameState_descriptor(), name, value);
}
enum WSKSEND_TYPE {
  WSK_NORMAL_SEND = 1,
  WSK_RECOME_SEND = 2
};
bool WSKSEND_TYPE_IsValid(int value);
const WSKSEND_TYPE WSKSEND_TYPE_MIN = WSK_NORMAL_SEND;
const WSKSEND_TYPE WSKSEND_TYPE_MAX = WSK_RECOME_SEND;
const int WSKSEND_TYPE_ARRAYSIZE = WSKSEND_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* WSKSEND_TYPE_descriptor();
inline const ::std::string& WSKSEND_TYPE_Name(WSKSEND_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    WSKSEND_TYPE_descriptor(), value);
}
inline bool WSKSEND_TYPE_Parse(
    const ::std::string& name, WSKSEND_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WSKSEND_TYPE>(
    WSKSEND_TYPE_descriptor(), name, value);
}
enum WSKKING_TYPE {
  WSK_KING_UP = 1,
  WSK_KING_HUITOU = 2,
  WSK_KING_MAILEI = 3
};
bool WSKKING_TYPE_IsValid(int value);
const WSKKING_TYPE WSKKING_TYPE_MIN = WSK_KING_UP;
const WSKKING_TYPE WSKKING_TYPE_MAX = WSK_KING_MAILEI;
const int WSKKING_TYPE_ARRAYSIZE = WSKKING_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* WSKKING_TYPE_descriptor();
inline const ::std::string& WSKKING_TYPE_Name(WSKKING_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    WSKKING_TYPE_descriptor(), value);
}
inline bool WSKKING_TYPE_Parse(
    const ::std::string& name, WSKKING_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WSKKING_TYPE>(
    WSKKING_TYPE_descriptor(), name, value);
}
enum WSKBROKEN_TYPE {
  WSK_BT_MASTER_QUIT = 0,
  WSK_BT_USER_QUIT = 1,
  WSK_BT_BROKEN = 2
};
bool WSKBROKEN_TYPE_IsValid(int value);
const WSKBROKEN_TYPE WSKBROKEN_TYPE_MIN = WSK_BT_MASTER_QUIT;
const WSKBROKEN_TYPE WSKBROKEN_TYPE_MAX = WSK_BT_BROKEN;
const int WSKBROKEN_TYPE_ARRAYSIZE = WSKBROKEN_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* WSKBROKEN_TYPE_descriptor();
inline const ::std::string& WSKBROKEN_TYPE_Name(WSKBROKEN_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    WSKBROKEN_TYPE_descriptor(), value);
}
inline bool WSKBROKEN_TYPE_Parse(
    const ::std::string& name, WSKBROKEN_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WSKBROKEN_TYPE>(
    WSKBROKEN_TYPE_descriptor(), name, value);
}
enum WSKBROKEN_OPERATE {
  WSK_BO_DISAGREE = 0,
  WSK_BO_AGREE = 1
};
bool WSKBROKEN_OPERATE_IsValid(int value);
const WSKBROKEN_OPERATE WSKBROKEN_OPERATE_MIN = WSK_BO_DISAGREE;
const WSKBROKEN_OPERATE WSKBROKEN_OPERATE_MAX = WSK_BO_AGREE;
const int WSKBROKEN_OPERATE_ARRAYSIZE = WSKBROKEN_OPERATE_MAX + 1;

const ::google::protobuf::EnumDescriptor* WSKBROKEN_OPERATE_descriptor();
inline const ::std::string& WSKBROKEN_OPERATE_Name(WSKBROKEN_OPERATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    WSKBROKEN_OPERATE_descriptor(), value);
}
inline bool WSKBROKEN_OPERATE_Parse(
    const ::std::string& name, WSKBROKEN_OPERATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WSKBROKEN_OPERATE>(
    WSKBROKEN_OPERATE_descriptor(), name, value);
}
enum WSKBROKEN_CODE {
  WSK_BC_SUCCESS = 0,
  WSK_BC_DISAGREE = 1,
  WSK_BC_QUIT_SUCCESS = 2,
  WSK_BC_EXCEPTION = 3
};
bool WSKBROKEN_CODE_IsValid(int value);
const WSKBROKEN_CODE WSKBROKEN_CODE_MIN = WSK_BC_SUCCESS;
const WSKBROKEN_CODE WSKBROKEN_CODE_MAX = WSK_BC_EXCEPTION;
const int WSKBROKEN_CODE_ARRAYSIZE = WSKBROKEN_CODE_MAX + 1;

const ::google::protobuf::EnumDescriptor* WSKBROKEN_CODE_descriptor();
inline const ::std::string& WSKBROKEN_CODE_Name(WSKBROKEN_CODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    WSKBROKEN_CODE_descriptor(), value);
}
inline bool WSKBROKEN_CODE_Parse(
    const ::std::string& name, WSKBROKEN_CODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WSKBROKEN_CODE>(
    WSKBROKEN_CODE_descriptor(), name, value);
}
// ===================================================================

class ProWSKGameStatusResponse : public ::google::protobuf::Message {
 public:
  ProWSKGameStatusResponse();
  virtual ~ProWSKGameStatusResponse();

  ProWSKGameStatusResponse(const ProWSKGameStatusResponse& from);

  inline ProWSKGameStatusResponse& operator=(const ProWSKGameStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameStatusResponse& default_instance();

  void Swap(ProWSKGameStatusResponse* other);

  // implements Message ----------------------------------------------

  ProWSKGameStatusResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameStatusResponse& from);
  void MergeFrom(const ProWSKGameStatusResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameStatusResponse_MSGID MSGID;
  static const MSGID ID = ProWSKGameStatusResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameStatusResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameStatusResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameStatusResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameStatusResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameStatusResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameStatusResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameStatusResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .WSKGameState status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::WSKGameState status() const;
  inline void set_status(::WSKGameState value);

  // @@protoc_insertion_point(class_scope:ProWSKGameStatusResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameStatusResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameDeskInfoResponse : public ::google::protobuf::Message {
 public:
  ProWSKGameDeskInfoResponse();
  virtual ~ProWSKGameDeskInfoResponse();

  ProWSKGameDeskInfoResponse(const ProWSKGameDeskInfoResponse& from);

  inline ProWSKGameDeskInfoResponse& operator=(const ProWSKGameDeskInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameDeskInfoResponse& default_instance();

  void Swap(ProWSKGameDeskInfoResponse* other);

  // implements Message ----------------------------------------------

  ProWSKGameDeskInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameDeskInfoResponse& from);
  void MergeFrom(const ProWSKGameDeskInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameDeskInfoResponse_MSGID MSGID;
  static const MSGID ID = ProWSKGameDeskInfoResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameDeskInfoResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameDeskInfoResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameDeskInfoResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameDeskInfoResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameDeskInfoResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameDeskInfoResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameDeskInfoResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 CellScore = 2;
  inline bool has_cellscore() const;
  inline void clear_cellscore();
  static const int kCellScoreFieldNumber = 2;
  inline ::google::protobuf::int32 cellscore() const;
  inline void set_cellscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameDeskInfoResponse)
 private:
  inline void set_has_cellscore();
  inline void clear_has_cellscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 cellscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameDeskInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameReadyNotify : public ::google::protobuf::Message {
 public:
  ProWSKGameReadyNotify();
  virtual ~ProWSKGameReadyNotify();

  ProWSKGameReadyNotify(const ProWSKGameReadyNotify& from);

  inline ProWSKGameReadyNotify& operator=(const ProWSKGameReadyNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameReadyNotify& default_instance();

  void Swap(ProWSKGameReadyNotify* other);

  // implements Message ----------------------------------------------

  ProWSKGameReadyNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameReadyNotify& from);
  void MergeFrom(const ProWSKGameReadyNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameReadyNotify_MSGID MSGID;
  static const MSGID ID = ProWSKGameReadyNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameReadyNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameReadyNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameReadyNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameReadyNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameReadyNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameReadyNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameReadyNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameReadyNotify)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameReadyNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameReadyRequest : public ::google::protobuf::Message {
 public:
  ProWSKGameReadyRequest();
  virtual ~ProWSKGameReadyRequest();

  ProWSKGameReadyRequest(const ProWSKGameReadyRequest& from);

  inline ProWSKGameReadyRequest& operator=(const ProWSKGameReadyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameReadyRequest& default_instance();

  void Swap(ProWSKGameReadyRequest* other);

  // implements Message ----------------------------------------------

  ProWSKGameReadyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameReadyRequest& from);
  void MergeFrom(const ProWSKGameReadyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameReadyRequest_MSGID MSGID;
  static const MSGID ID = ProWSKGameReadyRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameReadyRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameReadyRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameReadyRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameReadyRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameReadyRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameReadyRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameReadyRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameReadyRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameReadyRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameReadyResponse : public ::google::protobuf::Message {
 public:
  ProWSKGameReadyResponse();
  virtual ~ProWSKGameReadyResponse();

  ProWSKGameReadyResponse(const ProWSKGameReadyResponse& from);

  inline ProWSKGameReadyResponse& operator=(const ProWSKGameReadyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameReadyResponse& default_instance();

  void Swap(ProWSKGameReadyResponse* other);

  // implements Message ----------------------------------------------

  ProWSKGameReadyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameReadyResponse& from);
  void MergeFrom(const ProWSKGameReadyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameReadyResponse_MSGID MSGID;
  static const MSGID ID = ProWSKGameReadyResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameReadyResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameReadyResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameReadyResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameReadyResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameReadyResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameReadyResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameReadyResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameReadyResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameReadyResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameStart : public ::google::protobuf::Message {
 public:
  ProWSKGameStart();
  virtual ~ProWSKGameStart();

  ProWSKGameStart(const ProWSKGameStart& from);

  inline ProWSKGameStart& operator=(const ProWSKGameStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameStart& default_instance();

  void Swap(ProWSKGameStart* other);

  // implements Message ----------------------------------------------

  ProWSKGameStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameStart& from);
  void MergeFrom(const ProWSKGameStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameStart_MSGID MSGID;
  static const MSGID ID = ProWSKGameStart_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameStart_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameStart_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameStart_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameStart_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameStart_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameStart_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameStart_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 bankerseat = 2;
  inline bool has_bankerseat() const;
  inline void clear_bankerseat();
  static const int kBankerseatFieldNumber = 2;
  inline ::google::protobuf::int32 bankerseat() const;
  inline void set_bankerseat(::google::protobuf::int32 value);

  // optional int32 gamecount = 3;
  inline bool has_gamecount() const;
  inline void clear_gamecount();
  static const int kGamecountFieldNumber = 3;
  inline ::google::protobuf::int32 gamecount() const;
  inline void set_gamecount(::google::protobuf::int32 value);

  // optional int32 outCardtimes = 4;
  inline bool has_outcardtimes() const;
  inline void clear_outcardtimes();
  static const int kOutCardtimesFieldNumber = 4;
  inline ::google::protobuf::int32 outcardtimes() const;
  inline void set_outcardtimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameStart)
 private:
  inline void set_has_bankerseat();
  inline void clear_has_bankerseat();
  inline void set_has_gamecount();
  inline void clear_has_gamecount();
  inline void set_has_outcardtimes();
  inline void clear_has_outcardtimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bankerseat_;
  ::google::protobuf::int32 gamecount_;
  ::google::protobuf::int32 outcardtimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameStart* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameDiceNotify : public ::google::protobuf::Message {
 public:
  ProWSKGameDiceNotify();
  virtual ~ProWSKGameDiceNotify();

  ProWSKGameDiceNotify(const ProWSKGameDiceNotify& from);

  inline ProWSKGameDiceNotify& operator=(const ProWSKGameDiceNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameDiceNotify& default_instance();

  void Swap(ProWSKGameDiceNotify* other);

  // implements Message ----------------------------------------------

  ProWSKGameDiceNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameDiceNotify& from);
  void MergeFrom(const ProWSKGameDiceNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameDiceNotify_MSGID MSGID;
  static const MSGID ID = ProWSKGameDiceNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameDiceNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameDiceNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameDiceNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameDiceNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameDiceNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameDiceNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameDiceNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 dicecount = 4;
  inline bool has_dicecount() const;
  inline void clear_dicecount();
  static const int kDicecountFieldNumber = 4;
  inline ::google::protobuf::int32 dicecount() const;
  inline void set_dicecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameDiceNotify)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_dicecount();
  inline void clear_has_dicecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 dicecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameDiceNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameDiceRequest : public ::google::protobuf::Message {
 public:
  ProWSKGameDiceRequest();
  virtual ~ProWSKGameDiceRequest();

  ProWSKGameDiceRequest(const ProWSKGameDiceRequest& from);

  inline ProWSKGameDiceRequest& operator=(const ProWSKGameDiceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameDiceRequest& default_instance();

  void Swap(ProWSKGameDiceRequest* other);

  // implements Message ----------------------------------------------

  ProWSKGameDiceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameDiceRequest& from);
  void MergeFrom(const ProWSKGameDiceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameDiceRequest_MSGID MSGID;
  static const MSGID ID = ProWSKGameDiceRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameDiceRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameDiceRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameDiceRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameDiceRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameDiceRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameDiceRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameDiceRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 dicecount = 3;
  inline bool has_dicecount() const;
  inline void clear_dicecount();
  static const int kDicecountFieldNumber = 3;
  inline ::google::protobuf::int32 dicecount() const;
  inline void set_dicecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameDiceRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_dicecount();
  inline void clear_has_dicecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 dicecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameDiceRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameDiceResult : public ::google::protobuf::Message {
 public:
  ProWSKGameDiceResult();
  virtual ~ProWSKGameDiceResult();

  ProWSKGameDiceResult(const ProWSKGameDiceResult& from);

  inline ProWSKGameDiceResult& operator=(const ProWSKGameDiceResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameDiceResult& default_instance();

  void Swap(ProWSKGameDiceResult* other);

  // implements Message ----------------------------------------------

  ProWSKGameDiceResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameDiceResult& from);
  void MergeFrom(const ProWSKGameDiceResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameDiceResult_MSGID MSGID;
  static const MSGID ID = ProWSKGameDiceResult_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameDiceResult_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameDiceResult_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameDiceResult_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameDiceResult_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameDiceResult_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameDiceResult_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameDiceResult_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 result = 3;
  inline int result_size() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::int32 result(int index) const;
  inline void set_result(int index, ::google::protobuf::int32 value);
  inline void add_result(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      result() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_result();

  // optional int32 dicecount = 4;
  inline bool has_dicecount() const;
  inline void clear_dicecount();
  static const int kDicecountFieldNumber = 4;
  inline ::google::protobuf::int32 dicecount() const;
  inline void set_dicecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameDiceResult)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_dicecount();
  inline void clear_has_dicecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > result_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 dicecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameDiceResult* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameSendMahs : public ::google::protobuf::Message {
 public:
  ProWSKGameSendMahs();
  virtual ~ProWSKGameSendMahs();

  ProWSKGameSendMahs(const ProWSKGameSendMahs& from);

  inline ProWSKGameSendMahs& operator=(const ProWSKGameSendMahs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameSendMahs& default_instance();

  void Swap(ProWSKGameSendMahs* other);

  // implements Message ----------------------------------------------

  ProWSKGameSendMahs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameSendMahs& from);
  void MergeFrom(const ProWSKGameSendMahs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameSendMahs_MSGID MSGID;
  static const MSGID ID = ProWSKGameSendMahs_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameSendMahs_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameSendMahs_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameSendMahs_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameSendMahs_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameSendMahs_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameSendMahs_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameSendMahs_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 mahs = 3;
  inline int mahs_size() const;
  inline void clear_mahs();
  static const int kMahsFieldNumber = 3;
  inline ::google::protobuf::int32 mahs(int index) const;
  inline void set_mahs(int index, ::google::protobuf::int32 value);
  inline void add_mahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mahs();

  // repeated int32 mahscount = 4;
  inline int mahscount_size() const;
  inline void clear_mahscount();
  static const int kMahscountFieldNumber = 4;
  inline ::google::protobuf::int32 mahscount(int index) const;
  inline void set_mahscount(int index, ::google::protobuf::int32 value);
  inline void add_mahscount(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mahscount() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mahscount();

  // optional int32 cbLeftCount = 5;
  inline bool has_cbleftcount() const;
  inline void clear_cbleftcount();
  static const int kCbLeftCountFieldNumber = 5;
  inline ::google::protobuf::int32 cbleftcount() const;
  inline void set_cbleftcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameSendMahs)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_cbleftcount();
  inline void clear_has_cbleftcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mahs_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 cbleftcount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mahscount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameSendMahs* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameKingData : public ::google::protobuf::Message {
 public:
  ProWSKGameKingData();
  virtual ~ProWSKGameKingData();

  ProWSKGameKingData(const ProWSKGameKingData& from);

  inline ProWSKGameKingData& operator=(const ProWSKGameKingData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameKingData& default_instance();

  void Swap(ProWSKGameKingData* other);

  // implements Message ----------------------------------------------

  ProWSKGameKingData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameKingData& from);
  void MergeFrom(const ProWSKGameKingData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameKingData_MSGID MSGID;
  static const MSGID ID = ProWSKGameKingData_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameKingData_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameKingData_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameKingData_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameKingData_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameKingData_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameKingData_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameKingData_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 mahs = 3;
  inline int mahs_size() const;
  inline void clear_mahs();
  static const int kMahsFieldNumber = 3;
  inline ::google::protobuf::int32 mahs(int index) const;
  inline void set_mahs(int index, ::google::protobuf::int32 value);
  inline void add_mahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mahs();

  // repeated int32 downKingScore = 4;
  inline int downkingscore_size() const;
  inline void clear_downkingscore();
  static const int kDownKingScoreFieldNumber = 4;
  inline ::google::protobuf::int32 downkingscore(int index) const;
  inline void set_downkingscore(int index, ::google::protobuf::int32 value);
  inline void add_downkingscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      downkingscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_downkingscore();

  // repeated int32 kingcount = 5;
  inline int kingcount_size() const;
  inline void clear_kingcount();
  static const int kKingcountFieldNumber = 5;
  inline ::google::protobuf::int32 kingcount(int index) const;
  inline void set_kingcount(int index, ::google::protobuf::int32 value);
  inline void add_kingcount(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      kingcount() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_kingcount();

  // repeated int32 viceking = 6;
  inline int viceking_size() const;
  inline void clear_viceking();
  static const int kVicekingFieldNumber = 6;
  inline ::google::protobuf::int32 viceking(int index) const;
  inline void set_viceking(int index, ::google::protobuf::int32 value);
  inline void add_viceking(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      viceking() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_viceking();

  // optional .WSKSEND_TYPE notify_type = 7 [default = WSK_NORMAL_SEND];
  inline bool has_notify_type() const;
  inline void clear_notify_type();
  static const int kNotifyTypeFieldNumber = 7;
  inline ::WSKSEND_TYPE notify_type() const;
  inline void set_notify_type(::WSKSEND_TYPE value);

  // optional .WSKKING_TYPE king_type = 8 [default = WSK_KING_UP];
  inline bool has_king_type() const;
  inline void clear_king_type();
  static const int kKingTypeFieldNumber = 8;
  inline ::WSKKING_TYPE king_type() const;
  inline void set_king_type(::WSKKING_TYPE value);

  // repeated int32 cbChongGuang = 9;
  inline int cbchongguang_size() const;
  inline void clear_cbchongguang();
  static const int kCbChongGuangFieldNumber = 9;
  inline ::google::protobuf::int32 cbchongguang(int index) const;
  inline void set_cbchongguang(int index, ::google::protobuf::int32 value);
  inline void add_cbchongguang(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbchongguang() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbchongguang();

  // repeated int32 cbBaWangKing = 10;
  inline int cbbawangking_size() const;
  inline void clear_cbbawangking();
  static const int kCbBaWangKingFieldNumber = 10;
  inline ::google::protobuf::int32 cbbawangking(int index) const;
  inline void set_cbbawangking(int index, ::google::protobuf::int32 value);
  inline void add_cbbawangking(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbbawangking() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbbawangking();

  // @@protoc_insertion_point(class_scope:ProWSKGameKingData)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_notify_type();
  inline void clear_has_notify_type();
  inline void set_has_king_type();
  inline void clear_has_king_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mahs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > downkingscore_;
  ::google::protobuf::int32 seat_;
  int notify_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > kingcount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > viceking_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbchongguang_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbbawangking_;
  int king_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameKingData* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameOutMahsResponse : public ::google::protobuf::Message {
 public:
  ProWSKGameOutMahsResponse();
  virtual ~ProWSKGameOutMahsResponse();

  ProWSKGameOutMahsResponse(const ProWSKGameOutMahsResponse& from);

  inline ProWSKGameOutMahsResponse& operator=(const ProWSKGameOutMahsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameOutMahsResponse& default_instance();

  void Swap(ProWSKGameOutMahsResponse* other);

  // implements Message ----------------------------------------------

  ProWSKGameOutMahsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameOutMahsResponse& from);
  void MergeFrom(const ProWSKGameOutMahsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameOutMahsResponse_MSGID MSGID;
  static const MSGID ID = ProWSKGameOutMahsResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameOutMahsResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameOutMahsResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameOutMahsResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameOutMahsResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameOutMahsResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameOutMahsResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameOutMahsResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 outMahs = 3;
  inline int outmahs_size() const;
  inline void clear_outmahs();
  static const int kOutMahsFieldNumber = 3;
  inline ::google::protobuf::int32 outmahs(int index) const;
  inline void set_outmahs(int index, ::google::protobuf::int32 value);
  inline void add_outmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      outmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_outmahs();

  // repeated int32 handmahs = 4;
  inline int handmahs_size() const;
  inline void clear_handmahs();
  static const int kHandmahsFieldNumber = 4;
  inline ::google::protobuf::int32 handmahs(int index) const;
  inline void set_handmahs(int index, ::google::protobuf::int32 value);
  inline void add_handmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      handmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_handmahs();

  // optional int32 cardCount = 5;
  inline bool has_cardcount() const;
  inline void clear_cardcount();
  static const int kCardCountFieldNumber = 5;
  inline ::google::protobuf::int32 cardcount() const;
  inline void set_cardcount(::google::protobuf::int32 value);

  // optional int32 cardType = 6;
  inline bool has_cardtype() const;
  inline void clear_cardtype();
  static const int kCardTypeFieldNumber = 6;
  inline ::google::protobuf::int32 cardtype() const;
  inline void set_cardtype(::google::protobuf::int32 value);

  // optional int32 cardtypeflg = 7;
  inline bool has_cardtypeflg() const;
  inline void clear_cardtypeflg();
  static const int kCardtypeflgFieldNumber = 7;
  inline ::google::protobuf::int32 cardtypeflg() const;
  inline void set_cardtypeflg(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameOutMahsResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_cardcount();
  inline void clear_has_cardcount();
  inline void set_has_cardtype();
  inline void clear_has_cardtype();
  inline void set_has_cardtypeflg();
  inline void clear_has_cardtypeflg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > outmahs_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 cardcount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > handmahs_;
  ::google::protobuf::int32 cardtype_;
  ::google::protobuf::int32 cardtypeflg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameOutMahsResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameTimerPower : public ::google::protobuf::Message {
 public:
  ProWSKGameTimerPower();
  virtual ~ProWSKGameTimerPower();

  ProWSKGameTimerPower(const ProWSKGameTimerPower& from);

  inline ProWSKGameTimerPower& operator=(const ProWSKGameTimerPower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameTimerPower& default_instance();

  void Swap(ProWSKGameTimerPower* other);

  // implements Message ----------------------------------------------

  ProWSKGameTimerPower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameTimerPower& from);
  void MergeFrom(const ProWSKGameTimerPower& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameTimerPower_MSGID MSGID;
  static const MSGID ID = ProWSKGameTimerPower_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameTimerPower_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameTimerPower_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameTimerPower_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameTimerPower_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameTimerPower_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameTimerPower_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameTimerPower_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 outcardTime = 4;
  inline bool has_outcardtime() const;
  inline void clear_outcardtime();
  static const int kOutcardTimeFieldNumber = 4;
  inline ::google::protobuf::int32 outcardtime() const;
  inline void set_outcardtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameTimerPower)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_outcardtime();
  inline void clear_has_outcardtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 outcardtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameTimerPower* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameOperateNotify : public ::google::protobuf::Message {
 public:
  ProWSKGameOperateNotify();
  virtual ~ProWSKGameOperateNotify();

  ProWSKGameOperateNotify(const ProWSKGameOperateNotify& from);

  inline ProWSKGameOperateNotify& operator=(const ProWSKGameOperateNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameOperateNotify& default_instance();

  void Swap(ProWSKGameOperateNotify* other);

  // implements Message ----------------------------------------------

  ProWSKGameOperateNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameOperateNotify& from);
  void MergeFrom(const ProWSKGameOperateNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameOperateNotify_MSGID MSGID;
  static const MSGID ID = ProWSKGameOperateNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameOperateNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameOperateNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameOperateNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameOperateNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameOperateNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameOperateNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameOperateNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 resumeSeat = 2;
  inline bool has_resumeseat() const;
  inline void clear_resumeseat();
  static const int kResumeSeatFieldNumber = 2;
  inline ::google::protobuf::int32 resumeseat() const;
  inline void set_resumeseat(::google::protobuf::int32 value);

  // optional int32 ActionMask = 3;
  inline bool has_actionmask() const;
  inline void clear_actionmask();
  static const int kActionMaskFieldNumber = 3;
  inline ::google::protobuf::int32 actionmask() const;
  inline void set_actionmask(::google::protobuf::int32 value);

  // optional int32 ActionCard = 4;
  inline bool has_actioncard() const;
  inline void clear_actioncard();
  static const int kActionCardFieldNumber = 4;
  inline ::google::protobuf::int32 actioncard() const;
  inline void set_actioncard(::google::protobuf::int32 value);

  // optional int32 time = 5;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 5;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // optional int32 operateseat = 6;
  inline bool has_operateseat() const;
  inline void clear_operateseat();
  static const int kOperateseatFieldNumber = 6;
  inline ::google::protobuf::int32 operateseat() const;
  inline void set_operateseat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameOperateNotify)
 private:
  inline void set_has_resumeseat();
  inline void clear_has_resumeseat();
  inline void set_has_actionmask();
  inline void clear_has_actionmask();
  inline void set_has_actioncard();
  inline void clear_has_actioncard();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_operateseat();
  inline void clear_has_operateseat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 resumeseat_;
  ::google::protobuf::int32 actionmask_;
  ::google::protobuf::int32 actioncard_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 operateseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameOperateNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameOperateResult : public ::google::protobuf::Message {
 public:
  ProWSKGameOperateResult();
  virtual ~ProWSKGameOperateResult();

  ProWSKGameOperateResult(const ProWSKGameOperateResult& from);

  inline ProWSKGameOperateResult& operator=(const ProWSKGameOperateResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameOperateResult& default_instance();

  void Swap(ProWSKGameOperateResult* other);

  // implements Message ----------------------------------------------

  ProWSKGameOperateResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameOperateResult& from);
  void MergeFrom(const ProWSKGameOperateResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameOperateResult_MSGID MSGID;
  static const MSGID ID = ProWSKGameOperateResult_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameOperateResult_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameOperateResult_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameOperateResult_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameOperateResult_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameOperateResult_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameOperateResult_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameOperateResult_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 wOperateUser = 2;
  inline bool has_woperateuser() const;
  inline void clear_woperateuser();
  static const int kWOperateUserFieldNumber = 2;
  inline ::google::protobuf::int32 woperateuser() const;
  inline void set_woperateuser(::google::protobuf::int32 value);

  // optional int32 wProvideUser = 3;
  inline bool has_wprovideuser() const;
  inline void clear_wprovideuser();
  static const int kWProvideUserFieldNumber = 3;
  inline ::google::protobuf::int32 wprovideuser() const;
  inline void set_wprovideuser(::google::protobuf::int32 value);

  // optional int32 wOperateCode = 4;
  inline bool has_woperatecode() const;
  inline void clear_woperatecode();
  static const int kWOperateCodeFieldNumber = 4;
  inline ::google::protobuf::int32 woperatecode() const;
  inline void set_woperatecode(::google::protobuf::int32 value);

  // optional int32 cbOperateCard = 5;
  inline bool has_cboperatecard() const;
  inline void clear_cboperatecard();
  static const int kCbOperateCardFieldNumber = 5;
  inline ::google::protobuf::int32 cboperatecard() const;
  inline void set_cboperatecard(::google::protobuf::int32 value);

  // repeated int32 handmahs = 6;
  inline int handmahs_size() const;
  inline void clear_handmahs();
  static const int kHandmahsFieldNumber = 6;
  inline ::google::protobuf::int32 handmahs(int index) const;
  inline void set_handmahs(int index, ::google::protobuf::int32 value);
  inline void add_handmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      handmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_handmahs();

  // optional int32 handcount = 7;
  inline bool has_handcount() const;
  inline void clear_handcount();
  static const int kHandcountFieldNumber = 7;
  inline ::google::protobuf::int32 handcount() const;
  inline void set_handcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameOperateResult)
 private:
  inline void set_has_woperateuser();
  inline void clear_has_woperateuser();
  inline void set_has_wprovideuser();
  inline void clear_has_wprovideuser();
  inline void set_has_woperatecode();
  inline void clear_has_woperatecode();
  inline void set_has_cboperatecard();
  inline void clear_has_cboperatecard();
  inline void set_has_handcount();
  inline void clear_has_handcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 woperateuser_;
  ::google::protobuf::int32 wprovideuser_;
  ::google::protobuf::int32 woperatecode_;
  ::google::protobuf::int32 cboperatecard_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > handmahs_;
  ::google::protobuf::int32 handcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameOperateResult* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameOperateRequest : public ::google::protobuf::Message {
 public:
  ProWSKGameOperateRequest();
  virtual ~ProWSKGameOperateRequest();

  ProWSKGameOperateRequest(const ProWSKGameOperateRequest& from);

  inline ProWSKGameOperateRequest& operator=(const ProWSKGameOperateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameOperateRequest& default_instance();

  void Swap(ProWSKGameOperateRequest* other);

  // implements Message ----------------------------------------------

  ProWSKGameOperateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameOperateRequest& from);
  void MergeFrom(const ProWSKGameOperateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameOperateRequest_MSGID MSGID;
  static const MSGID ID = ProWSKGameOperateRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameOperateRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameOperateRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameOperateRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameOperateRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameOperateRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameOperateRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameOperateRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 wOperateCode = 3;
  inline bool has_woperatecode() const;
  inline void clear_woperatecode();
  static const int kWOperateCodeFieldNumber = 3;
  inline ::google::protobuf::int32 woperatecode() const;
  inline void set_woperatecode(::google::protobuf::int32 value);

  // optional int32 cbOperateCard = 4;
  inline bool has_cboperatecard() const;
  inline void clear_cboperatecard();
  static const int kCbOperateCardFieldNumber = 4;
  inline ::google::protobuf::int32 cboperatecard() const;
  inline void set_cboperatecard(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameOperateRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_woperatecode();
  inline void clear_has_woperatecode();
  inline void set_has_cboperatecard();
  inline void clear_has_cboperatecard();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 woperatecode_;
  ::google::protobuf::int32 cboperatecard_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameOperateRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameTrust : public ::google::protobuf::Message {
 public:
  ProWSKGameTrust();
  virtual ~ProWSKGameTrust();

  ProWSKGameTrust(const ProWSKGameTrust& from);

  inline ProWSKGameTrust& operator=(const ProWSKGameTrust& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameTrust& default_instance();

  void Swap(ProWSKGameTrust* other);

  // implements Message ----------------------------------------------

  ProWSKGameTrust* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameTrust& from);
  void MergeFrom(const ProWSKGameTrust& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameTrust_MSGID MSGID;
  static const MSGID ID = ProWSKGameTrust_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameTrust_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameTrust_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameTrust_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameTrust_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameTrust_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameTrust_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameTrust_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool isTrust = 3;
  inline bool has_istrust() const;
  inline void clear_istrust();
  static const int kIsTrustFieldNumber = 3;
  inline bool istrust() const;
  inline void set_istrust(bool value);

  // @@protoc_insertion_point(class_scope:ProWSKGameTrust)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_istrust();
  inline void clear_has_istrust();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  bool istrust_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameTrust* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameOutMahRequest : public ::google::protobuf::Message {
 public:
  ProWSKGameOutMahRequest();
  virtual ~ProWSKGameOutMahRequest();

  ProWSKGameOutMahRequest(const ProWSKGameOutMahRequest& from);

  inline ProWSKGameOutMahRequest& operator=(const ProWSKGameOutMahRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameOutMahRequest& default_instance();

  void Swap(ProWSKGameOutMahRequest* other);

  // implements Message ----------------------------------------------

  ProWSKGameOutMahRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameOutMahRequest& from);
  void MergeFrom(const ProWSKGameOutMahRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameOutMahRequest_MSGID MSGID;
  static const MSGID ID = ProWSKGameOutMahRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameOutMahRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameOutMahRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameOutMahRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameOutMahRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameOutMahRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameOutMahRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameOutMahRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 outMahs = 3;
  inline int outmahs_size() const;
  inline void clear_outmahs();
  static const int kOutMahsFieldNumber = 3;
  inline ::google::protobuf::int32 outmahs(int index) const;
  inline void set_outmahs(int index, ::google::protobuf::int32 value);
  inline void add_outmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      outmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_outmahs();

  // @@protoc_insertion_point(class_scope:ProWSKGameOutMahRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > outmahs_;
  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameOutMahRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameCatchCard : public ::google::protobuf::Message {
 public:
  ProWSKGameCatchCard();
  virtual ~ProWSKGameCatchCard();

  ProWSKGameCatchCard(const ProWSKGameCatchCard& from);

  inline ProWSKGameCatchCard& operator=(const ProWSKGameCatchCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameCatchCard& default_instance();

  void Swap(ProWSKGameCatchCard* other);

  // implements Message ----------------------------------------------

  ProWSKGameCatchCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameCatchCard& from);
  void MergeFrom(const ProWSKGameCatchCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameCatchCard_MSGID MSGID;
  static const MSGID ID = ProWSKGameCatchCard_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameCatchCard_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameCatchCard_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameCatchCard_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameCatchCard_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameCatchCard_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameCatchCard_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameCatchCard_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional int32 cbCardData = 3;
  inline bool has_cbcarddata() const;
  inline void clear_cbcarddata();
  static const int kCbCardDataFieldNumber = 3;
  inline ::google::protobuf::int32 cbcarddata() const;
  inline void set_cbcarddata(::google::protobuf::int32 value);

  // optional int32 wActionMask = 4;
  inline bool has_wactionmask() const;
  inline void clear_wactionmask();
  static const int kWActionMaskFieldNumber = 4;
  inline ::google::protobuf::int32 wactionmask() const;
  inline void set_wactionmask(::google::protobuf::int32 value);

  // optional bool cbIsNotGang = 5;
  inline bool has_cbisnotgang() const;
  inline void clear_cbisnotgang();
  static const int kCbIsNotGangFieldNumber = 5;
  inline bool cbisnotgang() const;
  inline void set_cbisnotgang(bool value);

  // optional int32 cbLeftCount = 6;
  inline bool has_cbleftcount() const;
  inline void clear_cbleftcount();
  static const int kCbLeftCountFieldNumber = 6;
  inline ::google::protobuf::int32 cbleftcount() const;
  inline void set_cbleftcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameCatchCard)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_cbcarddata();
  inline void clear_has_cbcarddata();
  inline void set_has_wactionmask();
  inline void clear_has_wactionmask();
  inline void set_has_cbisnotgang();
  inline void clear_has_cbisnotgang();
  inline void set_has_cbleftcount();
  inline void clear_has_cbleftcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 cbcarddata_;
  ::google::protobuf::int32 wactionmask_;
  bool cbisnotgang_;
  ::google::protobuf::int32 cbleftcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameCatchCard* default_instance_;
};
// -------------------------------------------------------------------

class WSKMahList : public ::google::protobuf::Message {
 public:
  WSKMahList();
  virtual ~WSKMahList();

  WSKMahList(const WSKMahList& from);

  inline WSKMahList& operator=(const WSKMahList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSKMahList& default_instance();

  void Swap(WSKMahList* other);

  // implements Message ----------------------------------------------

  WSKMahList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSKMahList& from);
  void MergeFrom(const WSKMahList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 Mahs = 1;
  inline int mahs_size() const;
  inline void clear_mahs();
  static const int kMahsFieldNumber = 1;
  inline ::google::protobuf::int32 mahs(int index) const;
  inline void set_mahs(int index, ::google::protobuf::int32 value);
  inline void add_mahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mahs();

  // @@protoc_insertion_point(class_scope:WSKMahList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mahs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static WSKMahList* default_instance_;
};
// -------------------------------------------------------------------

class WSKScoreList : public ::google::protobuf::Message {
 public:
  WSKScoreList();
  virtual ~WSKScoreList();

  WSKScoreList(const WSKScoreList& from);

  inline WSKScoreList& operator=(const WSKScoreList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSKScoreList& default_instance();

  void Swap(WSKScoreList* other);

  // implements Message ----------------------------------------------

  WSKScoreList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSKScoreList& from);
  void MergeFrom(const WSKScoreList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 roundScore = 1;
  inline int roundscore_size() const;
  inline void clear_roundscore();
  static const int kRoundScoreFieldNumber = 1;
  inline ::google::protobuf::int32 roundscore(int index) const;
  inline void set_roundscore(int index, ::google::protobuf::int32 value);
  inline void add_roundscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      roundscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_roundscore();

  // @@protoc_insertion_point(class_scope:WSKScoreList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > roundscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static WSKScoreList* default_instance_;
};
// -------------------------------------------------------------------

class WSKAwardList : public ::google::protobuf::Message {
 public:
  WSKAwardList();
  virtual ~WSKAwardList();

  WSKAwardList(const WSKAwardList& from);

  inline WSKAwardList& operator=(const WSKAwardList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSKAwardList& default_instance();

  void Swap(WSKAwardList* other);

  // implements Message ----------------------------------------------

  WSKAwardList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSKAwardList& from);
  void MergeFrom(const WSKAwardList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 CardsData = 2;
  inline int cardsdata_size() const;
  inline void clear_cardsdata();
  static const int kCardsDataFieldNumber = 2;
  inline ::google::protobuf::int32 cardsdata(int index) const;
  inline void set_cardsdata(int index, ::google::protobuf::int32 value);
  inline void add_cardsdata(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cardsdata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cardsdata();

  // optional int32 awardScore = 3;
  inline bool has_awardscore() const;
  inline void clear_awardscore();
  static const int kAwardScoreFieldNumber = 3;
  inline ::google::protobuf::int32 awardscore() const;
  inline void set_awardscore(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WSKAwardList)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_awardscore();
  inline void clear_has_awardscore();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cardsdata_;
  ::google::protobuf::int32 seat_;
  ::google::protobuf::int32 awardscore_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static WSKAwardList* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameEnd : public ::google::protobuf::Message {
 public:
  ProWSKGameEnd();
  virtual ~ProWSKGameEnd();

  ProWSKGameEnd(const ProWSKGameEnd& from);

  inline ProWSKGameEnd& operator=(const ProWSKGameEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameEnd& default_instance();

  void Swap(ProWSKGameEnd* other);

  // implements Message ----------------------------------------------

  ProWSKGameEnd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameEnd& from);
  void MergeFrom(const ProWSKGameEnd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameEnd_MSGID MSGID;
  static const MSGID ID = ProWSKGameEnd_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameEnd_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameEnd_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameEnd_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameEnd_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameEnd_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameEnd_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameEnd_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 lGameTax = 2;
  inline bool has_lgametax() const;
  inline void clear_lgametax();
  static const int kLGameTaxFieldNumber = 2;
  inline ::google::protobuf::int32 lgametax() const;
  inline void set_lgametax(::google::protobuf::int32 value);

  // repeated int32 cbChongGuang = 3;
  inline int cbchongguang_size() const;
  inline void clear_cbchongguang();
  static const int kCbChongGuangFieldNumber = 3;
  inline ::google::protobuf::int32 cbchongguang(int index) const;
  inline void set_cbchongguang(int index, ::google::protobuf::int32 value);
  inline void add_cbchongguang(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbchongguang() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbchongguang();

  // repeated int32 cbBaWangKing = 4;
  inline int cbbawangking_size() const;
  inline void clear_cbbawangking();
  static const int kCbBaWangKingFieldNumber = 4;
  inline ::google::protobuf::int32 cbbawangking(int index) const;
  inline void set_cbbawangking(int index, ::google::protobuf::int32 value);
  inline void add_cbbawangking(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbbawangking() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbbawangking();

  // optional int32 wProvideUser = 5;
  inline bool has_wprovideuser() const;
  inline void clear_wprovideuser();
  static const int kWProvideUserFieldNumber = 5;
  inline ::google::protobuf::int32 wprovideuser() const;
  inline void set_wprovideuser(::google::protobuf::int32 value);

  // optional int32 cbChiHuCard = 6;
  inline bool has_cbchihucard() const;
  inline void clear_cbchihucard();
  static const int kCbChiHuCardFieldNumber = 6;
  inline ::google::protobuf::int32 cbchihucard() const;
  inline void set_cbchihucard(::google::protobuf::int32 value);

  // repeated int32 dwChiHuKind = 7;
  inline int dwchihukind_size() const;
  inline void clear_dwchihukind();
  static const int kDwChiHuKindFieldNumber = 7;
  inline ::google::protobuf::int32 dwchihukind(int index) const;
  inline void set_dwchihukind(int index, ::google::protobuf::int32 value);
  inline void add_dwchihukind(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dwchihukind() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dwchihukind();

  // repeated int32 dwChiHuRight = 8;
  inline int dwchihuright_size() const;
  inline void clear_dwchihuright();
  static const int kDwChiHuRightFieldNumber = 8;
  inline ::google::protobuf::int32 dwchihuright(int index) const;
  inline void set_dwchihuright(int index, ::google::protobuf::int32 value);
  inline void add_dwchihuright(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dwchihuright() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dwchihuright();

  // repeated int32 lTotaslGameScore = 9;
  inline int ltotaslgamescore_size() const;
  inline void clear_ltotaslgamescore();
  static const int kLTotaslGameScoreFieldNumber = 9;
  inline ::google::protobuf::int32 ltotaslgamescore(int index) const;
  inline void set_ltotaslgamescore(int index, ::google::protobuf::int32 value);
  inline void add_ltotaslgamescore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ltotaslgamescore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ltotaslgamescore();

  // repeated int32 lCurrentGameScore = 10;
  inline int lcurrentgamescore_size() const;
  inline void clear_lcurrentgamescore();
  static const int kLCurrentGameScoreFieldNumber = 10;
  inline ::google::protobuf::int32 lcurrentgamescore(int index) const;
  inline void set_lcurrentgamescore(int index, ::google::protobuf::int32 value);
  inline void add_lcurrentgamescore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lcurrentgamescore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lcurrentgamescore();

  // repeated int32 lCurrentPointScore = 11;
  inline int lcurrentpointscore_size() const;
  inline void clear_lcurrentpointscore();
  static const int kLCurrentPointScoreFieldNumber = 11;
  inline ::google::protobuf::int32 lcurrentpointscore(int index) const;
  inline void set_lcurrentpointscore(int index, ::google::protobuf::int32 value);
  inline void add_lcurrentpointscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lcurrentpointscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lcurrentpointscore();

  // repeated int32 lAttachScore = 12;
  inline int lattachscore_size() const;
  inline void clear_lattachscore();
  static const int kLAttachScoreFieldNumber = 12;
  inline ::google::protobuf::int32 lattachscore(int index) const;
  inline void set_lattachscore(int index, ::google::protobuf::int32 value);
  inline void add_lattachscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lattachscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lattachscore();

  // repeated .WSKMahList cbHandCardData = 13;
  inline int cbhandcarddata_size() const;
  inline void clear_cbhandcarddata();
  static const int kCbHandCardDataFieldNumber = 13;
  inline const ::WSKMahList& cbhandcarddata(int index) const;
  inline ::WSKMahList* mutable_cbhandcarddata(int index);
  inline ::WSKMahList* add_cbhandcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::WSKMahList >&
      cbhandcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::WSKMahList >*
      mutable_cbhandcarddata();

  // repeated .WSKAwardList cbAwardCardData = 14;
  inline int cbawardcarddata_size() const;
  inline void clear_cbawardcarddata();
  static const int kCbAwardCardDataFieldNumber = 14;
  inline const ::WSKAwardList& cbawardcarddata(int index) const;
  inline ::WSKAwardList* mutable_cbawardcarddata(int index);
  inline ::WSKAwardList* add_cbawardcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::WSKAwardList >&
      cbawardcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::WSKAwardList >*
      mutable_cbawardcarddata();

  // repeated int32 lOnlyWinScore = 15;
  inline int lonlywinscore_size() const;
  inline void clear_lonlywinscore();
  static const int kLOnlyWinScoreFieldNumber = 15;
  inline ::google::protobuf::int32 lonlywinscore(int index) const;
  inline void set_lonlywinscore(int index, ::google::protobuf::int32 value);
  inline void add_lonlywinscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lonlywinscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lonlywinscore();

  // optional bool bRoundEnd = 16;
  inline bool has_broundend() const;
  inline void clear_broundend();
  static const int kBRoundEndFieldNumber = 16;
  inline bool broundend() const;
  inline void set_broundend(bool value);

  // repeated int32 lHuiTouScore = 17;
  inline int lhuitouscore_size() const;
  inline void clear_lhuitouscore();
  static const int kLHuiTouScoreFieldNumber = 17;
  inline ::google::protobuf::int32 lhuitouscore(int index) const;
  inline void set_lhuitouscore(int index, ::google::protobuf::int32 value);
  inline void add_lhuitouscore(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lhuitouscore() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lhuitouscore();

  // optional bool bZhuangWin = 18;
  inline bool has_bzhuangwin() const;
  inline void clear_bzhuangwin();
  static const int kBZhuangWinFieldNumber = 18;
  inline bool bzhuangwin() const;
  inline void set_bzhuangwin(bool value);

  // repeated int32 cbJiangMaCardData = 19;
  inline int cbjiangmacarddata_size() const;
  inline void clear_cbjiangmacarddata();
  static const int kCbJiangMaCardDataFieldNumber = 19;
  inline ::google::protobuf::int32 cbjiangmacarddata(int index) const;
  inline void set_cbjiangmacarddata(int index, ::google::protobuf::int32 value);
  inline void add_cbjiangmacarddata(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cbjiangmacarddata() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cbjiangmacarddata();

  // repeated .WSKScoreList detailedScores = 20;
  inline int detailedscores_size() const;
  inline void clear_detailedscores();
  static const int kDetailedScoresFieldNumber = 20;
  inline const ::WSKScoreList& detailedscores(int index) const;
  inline ::WSKScoreList* mutable_detailedscores(int index);
  inline ::WSKScoreList* add_detailedscores();
  inline const ::google::protobuf::RepeatedPtrField< ::WSKScoreList >&
      detailedscores() const;
  inline ::google::protobuf::RepeatedPtrField< ::WSKScoreList >*
      mutable_detailedscores();

  // optional bool bIsDaTu = 21;
  inline bool has_bisdatu() const;
  inline void clear_bisdatu();
  static const int kBIsDaTuFieldNumber = 21;
  inline bool bisdatu() const;
  inline void set_bisdatu(bool value);

  // optional bool bIsKuTong = 22;
  inline bool has_biskutong() const;
  inline void clear_biskutong();
  static const int kBIsKuTongFieldNumber = 22;
  inline bool biskutong() const;
  inline void set_biskutong(bool value);

  // optional int32 nNo1Seat = 23;
  inline bool has_nno1seat() const;
  inline void clear_nno1seat();
  static const int kNNo1SeatFieldNumber = 23;
  inline ::google::protobuf::int32 nno1seat() const;
  inline void set_nno1seat(::google::protobuf::int32 value);

  // optional int32 nWinerSeat = 24;
  inline bool has_nwinerseat() const;
  inline void clear_nwinerseat();
  static const int kNWinerSeatFieldNumber = 24;
  inline ::google::protobuf::int32 nwinerseat() const;
  inline void set_nwinerseat(::google::protobuf::int32 value);

  // optional int32 nWinersMate = 25;
  inline bool has_nwinersmate() const;
  inline void clear_nwinersmate();
  static const int kNWinersMateFieldNumber = 25;
  inline ::google::protobuf::int32 nwinersmate() const;
  inline void set_nwinersmate(::google::protobuf::int32 value);

  // optional int32 nNo2Seat = 26;
  inline bool has_nno2seat() const;
  inline void clear_nno2seat();
  static const int kNNo2SeatFieldNumber = 26;
  inline ::google::protobuf::int32 nno2seat() const;
  inline void set_nno2seat(::google::protobuf::int32 value);

  // optional int32 nNo3Seat = 27;
  inline bool has_nno3seat() const;
  inline void clear_nno3seat();
  static const int kNNo3SeatFieldNumber = 27;
  inline ::google::protobuf::int32 nno3seat() const;
  inline void set_nno3seat(::google::protobuf::int32 value);

  // optional int32 nNo4Seat = 28;
  inline bool has_nno4seat() const;
  inline void clear_nno4seat();
  static const int kNNo4SeatFieldNumber = 28;
  inline ::google::protobuf::int32 nno4seat() const;
  inline void set_nno4seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameEnd)
 private:
  inline void set_has_lgametax();
  inline void clear_has_lgametax();
  inline void set_has_wprovideuser();
  inline void clear_has_wprovideuser();
  inline void set_has_cbchihucard();
  inline void clear_has_cbchihucard();
  inline void set_has_broundend();
  inline void clear_has_broundend();
  inline void set_has_bzhuangwin();
  inline void clear_has_bzhuangwin();
  inline void set_has_bisdatu();
  inline void clear_has_bisdatu();
  inline void set_has_biskutong();
  inline void clear_has_biskutong();
  inline void set_has_nno1seat();
  inline void clear_has_nno1seat();
  inline void set_has_nwinerseat();
  inline void clear_has_nwinerseat();
  inline void set_has_nwinersmate();
  inline void clear_has_nwinersmate();
  inline void set_has_nno2seat();
  inline void clear_has_nno2seat();
  inline void set_has_nno3seat();
  inline void clear_has_nno3seat();
  inline void set_has_nno4seat();
  inline void clear_has_nno4seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbchongguang_;
  ::google::protobuf::int32 lgametax_;
  ::google::protobuf::int32 wprovideuser_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbbawangking_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dwchihukind_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dwchihuright_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ltotaslgamescore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lcurrentgamescore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lcurrentpointscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lattachscore_;
  ::google::protobuf::RepeatedPtrField< ::WSKMahList > cbhandcarddata_;
  ::google::protobuf::RepeatedPtrField< ::WSKAwardList > cbawardcarddata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lonlywinscore_;
  ::google::protobuf::int32 cbchihucard_;
  bool broundend_;
  bool bzhuangwin_;
  bool bisdatu_;
  bool biskutong_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lhuitouscore_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cbjiangmacarddata_;
  ::google::protobuf::RepeatedPtrField< ::WSKScoreList > detailedscores_;
  ::google::protobuf::int32 nno1seat_;
  ::google::protobuf::int32 nwinerseat_;
  ::google::protobuf::int32 nwinersmate_;
  ::google::protobuf::int32 nno2seat_;
  ::google::protobuf::int32 nno3seat_;
  ::google::protobuf::int32 nno4seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(27 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameEnd* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameQuickSoundRequest : public ::google::protobuf::Message {
 public:
  ProWSKGameQuickSoundRequest();
  virtual ~ProWSKGameQuickSoundRequest();

  ProWSKGameQuickSoundRequest(const ProWSKGameQuickSoundRequest& from);

  inline ProWSKGameQuickSoundRequest& operator=(const ProWSKGameQuickSoundRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameQuickSoundRequest& default_instance();

  void Swap(ProWSKGameQuickSoundRequest* other);

  // implements Message ----------------------------------------------

  ProWSKGameQuickSoundRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameQuickSoundRequest& from);
  void MergeFrom(const ProWSKGameQuickSoundRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameQuickSoundRequest_MSGID MSGID;
  static const MSGID ID = ProWSKGameQuickSoundRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameQuickSoundRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameQuickSoundRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameQuickSoundRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameQuickSoundRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameQuickSoundRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameQuickSoundRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameQuickSoundRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 desk_id = 2;
  inline bool has_desk_id() const;
  inline void clear_desk_id();
  static const int kDeskIdFieldNumber = 2;
  inline ::google::protobuf::int32 desk_id() const;
  inline void set_desk_id(::google::protobuf::int32 value);

  // optional int32 seat_id = 3;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 3;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional int32 sound_id = 4;
  inline bool has_sound_id() const;
  inline void clear_sound_id();
  static const int kSoundIdFieldNumber = 4;
  inline ::google::protobuf::int32 sound_id() const;
  inline void set_sound_id(::google::protobuf::int32 value);

  // optional bytes text = 5;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 5;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const void* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:ProWSKGameQuickSoundRequest)
 private:
  inline void set_has_desk_id();
  inline void clear_has_desk_id();
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_sound_id();
  inline void clear_has_sound_id();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 desk_id_;
  ::google::protobuf::int32 seat_id_;
  ::std::string* text_;
  ::google::protobuf::int32 sound_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameQuickSoundRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameQuickSoundResponse : public ::google::protobuf::Message {
 public:
  ProWSKGameQuickSoundResponse();
  virtual ~ProWSKGameQuickSoundResponse();

  ProWSKGameQuickSoundResponse(const ProWSKGameQuickSoundResponse& from);

  inline ProWSKGameQuickSoundResponse& operator=(const ProWSKGameQuickSoundResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameQuickSoundResponse& default_instance();

  void Swap(ProWSKGameQuickSoundResponse* other);

  // implements Message ----------------------------------------------

  ProWSKGameQuickSoundResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameQuickSoundResponse& from);
  void MergeFrom(const ProWSKGameQuickSoundResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameQuickSoundResponse_MSGID MSGID;
  static const MSGID ID = ProWSKGameQuickSoundResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameQuickSoundResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameQuickSoundResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameQuickSoundResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameQuickSoundResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameQuickSoundResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameQuickSoundResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameQuickSoundResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 desk_id = 2;
  inline bool has_desk_id() const;
  inline void clear_desk_id();
  static const int kDeskIdFieldNumber = 2;
  inline ::google::protobuf::int32 desk_id() const;
  inline void set_desk_id(::google::protobuf::int32 value);

  // optional int32 seat_id = 3;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 3;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional int32 sound_id = 4;
  inline bool has_sound_id() const;
  inline void clear_sound_id();
  static const int kSoundIdFieldNumber = 4;
  inline ::google::protobuf::int32 sound_id() const;
  inline void set_sound_id(::google::protobuf::int32 value);

  // optional bytes text = 5;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 5;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const void* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:ProWSKGameQuickSoundResponse)
 private:
  inline void set_has_desk_id();
  inline void clear_has_desk_id();
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_sound_id();
  inline void clear_has_sound_id();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 desk_id_;
  ::google::protobuf::int32 seat_id_;
  ::std::string* text_;
  ::google::protobuf::int32 sound_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameQuickSoundResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameSendDiscardMahs : public ::google::protobuf::Message {
 public:
  ProWSKGameSendDiscardMahs();
  virtual ~ProWSKGameSendDiscardMahs();

  ProWSKGameSendDiscardMahs(const ProWSKGameSendDiscardMahs& from);

  inline ProWSKGameSendDiscardMahs& operator=(const ProWSKGameSendDiscardMahs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameSendDiscardMahs& default_instance();

  void Swap(ProWSKGameSendDiscardMahs* other);

  // implements Message ----------------------------------------------

  ProWSKGameSendDiscardMahs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameSendDiscardMahs& from);
  void MergeFrom(const ProWSKGameSendDiscardMahs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameSendDiscardMahs_MSGID MSGID;
  static const MSGID ID = ProWSKGameSendDiscardMahs_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameSendDiscardMahs_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameSendDiscardMahs_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameSendDiscardMahs_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameSendDiscardMahs_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameSendDiscardMahs_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameSendDiscardMahs_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameSendDiscardMahs_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // repeated .WSKMahList cbCardData = 3;
  inline int cbcarddata_size() const;
  inline void clear_cbcarddata();
  static const int kCbCardDataFieldNumber = 3;
  inline const ::WSKMahList& cbcarddata(int index) const;
  inline ::WSKMahList* mutable_cbcarddata(int index);
  inline ::WSKMahList* add_cbcarddata();
  inline const ::google::protobuf::RepeatedPtrField< ::WSKMahList >&
      cbcarddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::WSKMahList >*
      mutable_cbcarddata();

  // optional int32 deskCount = 4;
  inline bool has_deskcount() const;
  inline void clear_deskcount();
  static const int kDeskCountFieldNumber = 4;
  inline ::google::protobuf::int32 deskcount() const;
  inline void set_deskcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameSendDiscardMahs)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_deskcount();
  inline void clear_has_deskcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::WSKMahList > cbcarddata_;
  ::google::protobuf::int32 seat_id_;
  ::google::protobuf::int32 deskcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameSendDiscardMahs* default_instance_;
};
// -------------------------------------------------------------------

class WSKWeaveItem : public ::google::protobuf::Message {
 public:
  WSKWeaveItem();
  virtual ~WSKWeaveItem();

  WSKWeaveItem(const WSKWeaveItem& from);

  inline WSKWeaveItem& operator=(const WSKWeaveItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSKWeaveItem& default_instance();

  void Swap(WSKWeaveItem* other);

  // implements Message ----------------------------------------------

  WSKWeaveItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSKWeaveItem& from);
  void MergeFrom(const WSKWeaveItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 weaveKind = 1;
  inline bool has_weavekind() const;
  inline void clear_weavekind();
  static const int kWeaveKindFieldNumber = 1;
  inline ::google::protobuf::int32 weavekind() const;
  inline void set_weavekind(::google::protobuf::int32 value);

  // optional int32 centercard = 2;
  inline bool has_centercard() const;
  inline void clear_centercard();
  static const int kCentercardFieldNumber = 2;
  inline ::google::protobuf::int32 centercard() const;
  inline void set_centercard(::google::protobuf::int32 value);

  // optional int32 provideUser = 3;
  inline bool has_provideuser() const;
  inline void clear_provideuser();
  static const int kProvideUserFieldNumber = 3;
  inline ::google::protobuf::int32 provideuser() const;
  inline void set_provideuser(::google::protobuf::int32 value);

  // optional int32 cardsize = 4;
  inline bool has_cardsize() const;
  inline void clear_cardsize();
  static const int kCardsizeFieldNumber = 4;
  inline ::google::protobuf::int32 cardsize() const;
  inline void set_cardsize(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WSKWeaveItem)
 private:
  inline void set_has_weavekind();
  inline void clear_has_weavekind();
  inline void set_has_centercard();
  inline void clear_has_centercard();
  inline void set_has_provideuser();
  inline void clear_has_provideuser();
  inline void set_has_cardsize();
  inline void clear_has_cardsize();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 weavekind_;
  ::google::protobuf::int32 centercard_;
  ::google::protobuf::int32 provideuser_;
  ::google::protobuf::int32 cardsize_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static WSKWeaveItem* default_instance_;
};
// -------------------------------------------------------------------

class WSKWeaveItems : public ::google::protobuf::Message {
 public:
  WSKWeaveItems();
  virtual ~WSKWeaveItems();

  WSKWeaveItems(const WSKWeaveItems& from);

  inline WSKWeaveItems& operator=(const WSKWeaveItems& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WSKWeaveItems& default_instance();

  void Swap(WSKWeaveItems* other);

  // implements Message ----------------------------------------------

  WSKWeaveItems* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WSKWeaveItems& from);
  void MergeFrom(const WSKWeaveItems& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .WSKWeaveItem items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::WSKWeaveItem& items(int index) const;
  inline ::WSKWeaveItem* mutable_items(int index);
  inline ::WSKWeaveItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::WSKWeaveItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::WSKWeaveItem >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:WSKWeaveItems)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::WSKWeaveItem > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static WSKWeaveItems* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameSendActionMahs : public ::google::protobuf::Message {
 public:
  ProWSKGameSendActionMahs();
  virtual ~ProWSKGameSendActionMahs();

  ProWSKGameSendActionMahs(const ProWSKGameSendActionMahs& from);

  inline ProWSKGameSendActionMahs& operator=(const ProWSKGameSendActionMahs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameSendActionMahs& default_instance();

  void Swap(ProWSKGameSendActionMahs* other);

  // implements Message ----------------------------------------------

  ProWSKGameSendActionMahs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameSendActionMahs& from);
  void MergeFrom(const ProWSKGameSendActionMahs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameSendActionMahs_MSGID MSGID;
  static const MSGID ID = ProWSKGameSendActionMahs_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameSendActionMahs_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameSendActionMahs_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameSendActionMahs_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameSendActionMahs_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameSendActionMahs_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameSendActionMahs_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameSendActionMahs_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // repeated .WSKWeaveItems weaves = 3;
  inline int weaves_size() const;
  inline void clear_weaves();
  static const int kWeavesFieldNumber = 3;
  inline const ::WSKWeaveItems& weaves(int index) const;
  inline ::WSKWeaveItems* mutable_weaves(int index);
  inline ::WSKWeaveItems* add_weaves();
  inline const ::google::protobuf::RepeatedPtrField< ::WSKWeaveItems >&
      weaves() const;
  inline ::google::protobuf::RepeatedPtrField< ::WSKWeaveItems >*
      mutable_weaves();

  // @@protoc_insertion_point(class_scope:ProWSKGameSendActionMahs)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::WSKWeaveItems > weaves_;
  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameSendActionMahs* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameBrokenRequest : public ::google::protobuf::Message {
 public:
  ProWSKGameBrokenRequest();
  virtual ~ProWSKGameBrokenRequest();

  ProWSKGameBrokenRequest(const ProWSKGameBrokenRequest& from);

  inline ProWSKGameBrokenRequest& operator=(const ProWSKGameBrokenRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameBrokenRequest& default_instance();

  void Swap(ProWSKGameBrokenRequest* other);

  // implements Message ----------------------------------------------

  ProWSKGameBrokenRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameBrokenRequest& from);
  void MergeFrom(const ProWSKGameBrokenRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameBrokenRequest_MSGID MSGID;
  static const MSGID ID = ProWSKGameBrokenRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameBrokenRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameBrokenRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameBrokenRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameBrokenRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameBrokenRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameBrokenRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameBrokenRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional .WSKBROKEN_TYPE type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::WSKBROKEN_TYPE type() const;
  inline void set_type(::WSKBROKEN_TYPE value);

  // optional int32 time = 4;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 4;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameBrokenRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;
  int type_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameBrokenRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameBrokenOperate : public ::google::protobuf::Message {
 public:
  ProWSKGameBrokenOperate();
  virtual ~ProWSKGameBrokenOperate();

  ProWSKGameBrokenOperate(const ProWSKGameBrokenOperate& from);

  inline ProWSKGameBrokenOperate& operator=(const ProWSKGameBrokenOperate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameBrokenOperate& default_instance();

  void Swap(ProWSKGameBrokenOperate* other);

  // implements Message ----------------------------------------------

  ProWSKGameBrokenOperate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameBrokenOperate& from);
  void MergeFrom(const ProWSKGameBrokenOperate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameBrokenOperate_MSGID MSGID;
  static const MSGID ID = ProWSKGameBrokenOperate_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameBrokenOperate_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameBrokenOperate_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameBrokenOperate_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameBrokenOperate_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameBrokenOperate_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameBrokenOperate_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameBrokenOperate_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional .WSKBROKEN_OPERATE result = 3 [default = WSK_BO_DISAGREE];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::WSKBROKEN_OPERATE result() const;
  inline void set_result(::WSKBROKEN_OPERATE value);

  // @@protoc_insertion_point(class_scope:ProWSKGameBrokenOperate)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameBrokenOperate* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameBrokenNotify : public ::google::protobuf::Message {
 public:
  ProWSKGameBrokenNotify();
  virtual ~ProWSKGameBrokenNotify();

  ProWSKGameBrokenNotify(const ProWSKGameBrokenNotify& from);

  inline ProWSKGameBrokenNotify& operator=(const ProWSKGameBrokenNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameBrokenNotify& default_instance();

  void Swap(ProWSKGameBrokenNotify* other);

  // implements Message ----------------------------------------------

  ProWSKGameBrokenNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameBrokenNotify& from);
  void MergeFrom(const ProWSKGameBrokenNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameBrokenNotify_MSGID MSGID;
  static const MSGID ID = ProWSKGameBrokenNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameBrokenNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameBrokenNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameBrokenNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameBrokenNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameBrokenNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameBrokenNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameBrokenNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 2;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 2;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional .WSKBROKEN_CODE operate_code = 3 [default = WSK_BC_SUCCESS];
  inline bool has_operate_code() const;
  inline void clear_operate_code();
  static const int kOperateCodeFieldNumber = 3;
  inline ::WSKBROKEN_CODE operate_code() const;
  inline void set_operate_code(::WSKBROKEN_CODE value);

  // @@protoc_insertion_point(class_scope:ProWSKGameBrokenNotify)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_operate_code();
  inline void clear_has_operate_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;
  int operate_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameBrokenNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameRuleConfig : public ::google::protobuf::Message {
 public:
  ProWSKGameRuleConfig();
  virtual ~ProWSKGameRuleConfig();

  ProWSKGameRuleConfig(const ProWSKGameRuleConfig& from);

  inline ProWSKGameRuleConfig& operator=(const ProWSKGameRuleConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameRuleConfig& default_instance();

  void Swap(ProWSKGameRuleConfig* other);

  // implements Message ----------------------------------------------

  ProWSKGameRuleConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameRuleConfig& from);
  void MergeFrom(const ProWSKGameRuleConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameRuleConfig_MSGID MSGID;
  static const MSGID ID = ProWSKGameRuleConfig_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameRuleConfig_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameRuleConfig_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameRuleConfig_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameRuleConfig_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameRuleConfig_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameRuleConfig_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameRuleConfig_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 game_round = 1;
  inline bool has_game_round() const;
  inline void clear_game_round();
  static const int kGameRoundFieldNumber = 1;
  inline ::google::protobuf::int32 game_round() const;
  inline void set_game_round(::google::protobuf::int32 value);

  // optional int32 need_card = 2;
  inline bool has_need_card() const;
  inline void clear_need_card();
  static const int kNeedCardFieldNumber = 2;
  inline ::google::protobuf::int32 need_card() const;
  inline void set_need_card(::google::protobuf::int32 value);

  // optional bool have_bottom_king = 3;
  inline bool has_have_bottom_king() const;
  inline void clear_have_bottom_king();
  static const int kHaveBottomKingFieldNumber = 3;
  inline bool have_bottom_king() const;
  inline void set_have_bottom_king(bool value);

  // optional bool have_mai_lei = 4;
  inline bool has_have_mai_lei() const;
  inline void clear_have_mai_lei();
  static const int kHaveMaiLeiFieldNumber = 4;
  inline bool have_mai_lei() const;
  inline void set_have_mai_lei(bool value);

  // optional bool hava_hui_tou = 5;
  inline bool has_hava_hui_tou() const;
  inline void clear_hava_hui_tou();
  static const int kHavaHuiTouFieldNumber = 5;
  inline bool hava_hui_tou() const;
  inline void set_hava_hui_tou(bool value);

  // optional int32 nMasterSeat = 6;
  inline bool has_nmasterseat() const;
  inline void clear_nmasterseat();
  static const int kNMasterSeatFieldNumber = 6;
  inline ::google::protobuf::int32 nmasterseat() const;
  inline void set_nmasterseat(::google::protobuf::int32 value);

  // optional int32 current_game_count = 7;
  inline bool has_current_game_count() const;
  inline void clear_current_game_count();
  static const int kCurrentGameCountFieldNumber = 7;
  inline ::google::protobuf::int32 current_game_count() const;
  inline void set_current_game_count(::google::protobuf::int32 value);

  // optional bool have_jianma = 8;
  inline bool has_have_jianma() const;
  inline void clear_have_jianma();
  static const int kHaveJianmaFieldNumber = 8;
  inline bool have_jianma() const;
  inline void set_have_jianma(bool value);

  // optional int32 nChongguanNum = 9;
  inline bool has_nchongguannum() const;
  inline void clear_nchongguannum();
  static const int kNChongguanNumFieldNumber = 9;
  inline ::google::protobuf::int32 nchongguannum() const;
  inline void set_nchongguannum(::google::protobuf::int32 value);

  // optional bool bbawangfanbei = 10;
  inline bool has_bbawangfanbei() const;
  inline void clear_bbawangfanbei();
  static const int kBbawangfanbeiFieldNumber = 10;
  inline bool bbawangfanbei() const;
  inline void set_bbawangfanbei(bool value);

  // optional int32 nPlayerNum = 11;
  inline bool has_nplayernum() const;
  inline void clear_nplayernum();
  static const int kNPlayerNumFieldNumber = 11;
  inline ::google::protobuf::int32 nplayernum() const;
  inline void set_nplayernum(::google::protobuf::int32 value);

  // optional bytes sRoomNum = 12;
  inline bool has_sroomnum() const;
  inline void clear_sroomnum();
  static const int kSRoomNumFieldNumber = 12;
  inline const ::std::string& sroomnum() const;
  inline void set_sroomnum(const ::std::string& value);
  inline void set_sroomnum(const char* value);
  inline void set_sroomnum(const void* value, size_t size);
  inline ::std::string* mutable_sroomnum();
  inline ::std::string* release_sroomnum();
  inline void set_allocated_sroomnum(::std::string* sroomnum);

  // optional bytes sPlayTime = 13;
  inline bool has_splaytime() const;
  inline void clear_splaytime();
  static const int kSPlayTimeFieldNumber = 13;
  inline const ::std::string& splaytime() const;
  inline void set_splaytime(const ::std::string& value);
  inline void set_splaytime(const char* value);
  inline void set_splaytime(const void* value, size_t size);
  inline ::std::string* mutable_splaytime();
  inline ::std::string* release_splaytime();
  inline void set_allocated_splaytime(::std::string* splaytime);

  // optional int32 gametype = 14;
  inline bool has_gametype() const;
  inline void clear_gametype();
  static const int kGametypeFieldNumber = 14;
  inline ::google::protobuf::int32 gametype() const;
  inline void set_gametype(::google::protobuf::int32 value);

  // optional bool isOpenTeammate = 15;
  inline bool has_isopenteammate() const;
  inline void clear_isopenteammate();
  static const int kIsOpenTeammateFieldNumber = 15;
  inline bool isopenteammate() const;
  inline void set_isopenteammate(bool value);

  // @@protoc_insertion_point(class_scope:ProWSKGameRuleConfig)
 private:
  inline void set_has_game_round();
  inline void clear_has_game_round();
  inline void set_has_need_card();
  inline void clear_has_need_card();
  inline void set_has_have_bottom_king();
  inline void clear_has_have_bottom_king();
  inline void set_has_have_mai_lei();
  inline void clear_has_have_mai_lei();
  inline void set_has_hava_hui_tou();
  inline void clear_has_hava_hui_tou();
  inline void set_has_nmasterseat();
  inline void clear_has_nmasterseat();
  inline void set_has_current_game_count();
  inline void clear_has_current_game_count();
  inline void set_has_have_jianma();
  inline void clear_has_have_jianma();
  inline void set_has_nchongguannum();
  inline void clear_has_nchongguannum();
  inline void set_has_bbawangfanbei();
  inline void clear_has_bbawangfanbei();
  inline void set_has_nplayernum();
  inline void clear_has_nplayernum();
  inline void set_has_sroomnum();
  inline void clear_has_sroomnum();
  inline void set_has_splaytime();
  inline void clear_has_splaytime();
  inline void set_has_gametype();
  inline void clear_has_gametype();
  inline void set_has_isopenteammate();
  inline void clear_has_isopenteammate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 game_round_;
  ::google::protobuf::int32 need_card_;
  bool have_bottom_king_;
  bool have_mai_lei_;
  bool hava_hui_tou_;
  bool have_jianma_;
  ::google::protobuf::int32 nmasterseat_;
  ::google::protobuf::int32 current_game_count_;
  ::google::protobuf::int32 nchongguannum_;
  ::std::string* sroomnum_;
  ::google::protobuf::int32 nplayernum_;
  bool bbawangfanbei_;
  bool isopenteammate_;
  ::std::string* splaytime_;
  ::google::protobuf::int32 gametype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameRuleConfig* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameBrokenStatus : public ::google::protobuf::Message {
 public:
  ProWSKGameBrokenStatus();
  virtual ~ProWSKGameBrokenStatus();

  ProWSKGameBrokenStatus(const ProWSKGameBrokenStatus& from);

  inline ProWSKGameBrokenStatus& operator=(const ProWSKGameBrokenStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameBrokenStatus& default_instance();

  void Swap(ProWSKGameBrokenStatus* other);

  // implements Message ----------------------------------------------

  ProWSKGameBrokenStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameBrokenStatus& from);
  void MergeFrom(const ProWSKGameBrokenStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameBrokenStatus_MSGID MSGID;
  static const MSGID ID = ProWSKGameBrokenStatus_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameBrokenStatus_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameBrokenStatus_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameBrokenStatus_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameBrokenStatus_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameBrokenStatus_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameBrokenStatus_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameBrokenStatus_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 broken_seat = 1;
  inline bool has_broken_seat() const;
  inline void clear_broken_seat();
  static const int kBrokenSeatFieldNumber = 1;
  inline ::google::protobuf::int32 broken_seat() const;
  inline void set_broken_seat(::google::protobuf::int32 value);

  // repeated bool broken_status = 2;
  inline int broken_status_size() const;
  inline void clear_broken_status();
  static const int kBrokenStatusFieldNumber = 2;
  inline bool broken_status(int index) const;
  inline void set_broken_status(int index, bool value);
  inline void add_broken_status(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      broken_status() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_broken_status();

  // optional int32 left_time = 3;
  inline bool has_left_time() const;
  inline void clear_left_time();
  static const int kLeftTimeFieldNumber = 3;
  inline ::google::protobuf::int32 left_time() const;
  inline void set_left_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameBrokenStatus)
 private:
  inline void set_has_broken_seat();
  inline void clear_has_broken_seat();
  inline void set_has_left_time();
  inline void clear_has_left_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< bool > broken_status_;
  ::google::protobuf::int32 broken_seat_;
  ::google::protobuf::int32 left_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameBrokenStatus* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameDataResp : public ::google::protobuf::Message {
 public:
  ProWSKGameDataResp();
  virtual ~ProWSKGameDataResp();

  ProWSKGameDataResp(const ProWSKGameDataResp& from);

  inline ProWSKGameDataResp& operator=(const ProWSKGameDataResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameDataResp& default_instance();

  void Swap(ProWSKGameDataResp* other);

  // implements Message ----------------------------------------------

  ProWSKGameDataResp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameDataResp& from);
  void MergeFrom(const ProWSKGameDataResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameDataResp_MSGID MSGID;
  static const MSGID ID = ProWSKGameDataResp_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameDataResp_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameDataResp_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameDataResp_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameDataResp_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameDataResp_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameDataResp_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameDataResp_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 total_score = 1;
  inline int total_score_size() const;
  inline void clear_total_score();
  static const int kTotalScoreFieldNumber = 1;
  inline ::google::protobuf::int32 total_score(int index) const;
  inline void set_total_score(int index, ::google::protobuf::int32 value);
  inline void add_total_score(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      total_score() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_total_score();

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameDataResp)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > total_score_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameDataResp* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameRecordRequest : public ::google::protobuf::Message {
 public:
  ProWSKGameRecordRequest();
  virtual ~ProWSKGameRecordRequest();

  ProWSKGameRecordRequest(const ProWSKGameRecordRequest& from);

  inline ProWSKGameRecordRequest& operator=(const ProWSKGameRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameRecordRequest& default_instance();

  void Swap(ProWSKGameRecordRequest* other);

  // implements Message ----------------------------------------------

  ProWSKGameRecordRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameRecordRequest& from);
  void MergeFrom(const ProWSKGameRecordRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameRecordRequest_MSGID MSGID;
  static const MSGID ID = ProWSKGameRecordRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameRecordRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameRecordRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameRecordRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameRecordRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameRecordRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameRecordRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameRecordRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional bytes url = 2;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 2;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const void* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:ProWSKGameRecordRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_url();
  inline void clear_has_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* url_;
  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameRecordRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameRecordResponse : public ::google::protobuf::Message {
 public:
  ProWSKGameRecordResponse();
  virtual ~ProWSKGameRecordResponse();

  ProWSKGameRecordResponse(const ProWSKGameRecordResponse& from);

  inline ProWSKGameRecordResponse& operator=(const ProWSKGameRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameRecordResponse& default_instance();

  void Swap(ProWSKGameRecordResponse* other);

  // implements Message ----------------------------------------------

  ProWSKGameRecordResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameRecordResponse& from);
  void MergeFrom(const ProWSKGameRecordResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameRecordResponse_MSGID MSGID;
  static const MSGID ID = ProWSKGameRecordResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameRecordResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameRecordResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameRecordResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameRecordResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameRecordResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameRecordResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameRecordResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional bytes url = 2;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 2;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const void* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  inline void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:ProWSKGameRecordResponse)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_url();
  inline void clear_has_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* url_;
  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameRecordResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameUserLocationRequest : public ::google::protobuf::Message {
 public:
  ProWSKGameUserLocationRequest();
  virtual ~ProWSKGameUserLocationRequest();

  ProWSKGameUserLocationRequest(const ProWSKGameUserLocationRequest& from);

  inline ProWSKGameUserLocationRequest& operator=(const ProWSKGameUserLocationRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameUserLocationRequest& default_instance();

  void Swap(ProWSKGameUserLocationRequest* other);

  // implements Message ----------------------------------------------

  ProWSKGameUserLocationRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameUserLocationRequest& from);
  void MergeFrom(const ProWSKGameUserLocationRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameUserLocationRequest_MSGID MSGID;
  static const MSGID ID = ProWSKGameUserLocationRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameUserLocationRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameUserLocationRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameUserLocationRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameUserLocationRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameUserLocationRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameUserLocationRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameUserLocationRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional double dwlongitude = 2;
  inline bool has_dwlongitude() const;
  inline void clear_dwlongitude();
  static const int kDwlongitudeFieldNumber = 2;
  inline double dwlongitude() const;
  inline void set_dwlongitude(double value);

  // optional double dwlatitude = 3;
  inline bool has_dwlatitude() const;
  inline void clear_dwlatitude();
  static const int kDwlatitudeFieldNumber = 3;
  inline double dwlatitude() const;
  inline void set_dwlatitude(double value);

  // optional bytes strDistrict = 4;
  inline bool has_strdistrict() const;
  inline void clear_strdistrict();
  static const int kStrDistrictFieldNumber = 4;
  inline const ::std::string& strdistrict() const;
  inline void set_strdistrict(const ::std::string& value);
  inline void set_strdistrict(const char* value);
  inline void set_strdistrict(const void* value, size_t size);
  inline ::std::string* mutable_strdistrict();
  inline ::std::string* release_strdistrict();
  inline void set_allocated_strdistrict(::std::string* strdistrict);

  // optional bytes strStreetName = 5;
  inline bool has_strstreetname() const;
  inline void clear_strstreetname();
  static const int kStrStreetNameFieldNumber = 5;
  inline const ::std::string& strstreetname() const;
  inline void set_strstreetname(const ::std::string& value);
  inline void set_strstreetname(const char* value);
  inline void set_strstreetname(const void* value, size_t size);
  inline ::std::string* mutable_strstreetname();
  inline ::std::string* release_strstreetname();
  inline void set_allocated_strstreetname(::std::string* strstreetname);

  // @@protoc_insertion_point(class_scope:ProWSKGameUserLocationRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_dwlongitude();
  inline void clear_has_dwlongitude();
  inline void set_has_dwlatitude();
  inline void clear_has_dwlatitude();
  inline void set_has_strdistrict();
  inline void clear_has_strdistrict();
  inline void set_has_strstreetname();
  inline void clear_has_strstreetname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  double dwlongitude_;
  double dwlatitude_;
  ::std::string* strdistrict_;
  ::std::string* strstreetname_;
  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameUserLocationRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameSyncCardResponse : public ::google::protobuf::Message {
 public:
  ProWSKGameSyncCardResponse();
  virtual ~ProWSKGameSyncCardResponse();

  ProWSKGameSyncCardResponse(const ProWSKGameSyncCardResponse& from);

  inline ProWSKGameSyncCardResponse& operator=(const ProWSKGameSyncCardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameSyncCardResponse& default_instance();

  void Swap(ProWSKGameSyncCardResponse* other);

  // implements Message ----------------------------------------------

  ProWSKGameSyncCardResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameSyncCardResponse& from);
  void MergeFrom(const ProWSKGameSyncCardResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameSyncCardResponse_MSGID MSGID;
  static const MSGID ID = ProWSKGameSyncCardResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameSyncCardResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameSyncCardResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameSyncCardResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameSyncCardResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameSyncCardResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameSyncCardResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameSyncCardResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 2;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 2;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // repeated int32 handmahs = 3;
  inline int handmahs_size() const;
  inline void clear_handmahs();
  static const int kHandmahsFieldNumber = 3;
  inline ::google::protobuf::int32 handmahs(int index) const;
  inline void set_handmahs(int index, ::google::protobuf::int32 value);
  inline void add_handmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      handmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_handmahs();

  // @@protoc_insertion_point(class_scope:ProWSKGameSyncCardResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > handmahs_;
  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameSyncCardResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameUserPhoneStatusRequest : public ::google::protobuf::Message {
 public:
  ProWSKGameUserPhoneStatusRequest();
  virtual ~ProWSKGameUserPhoneStatusRequest();

  ProWSKGameUserPhoneStatusRequest(const ProWSKGameUserPhoneStatusRequest& from);

  inline ProWSKGameUserPhoneStatusRequest& operator=(const ProWSKGameUserPhoneStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameUserPhoneStatusRequest& default_instance();

  void Swap(ProWSKGameUserPhoneStatusRequest* other);

  // implements Message ----------------------------------------------

  ProWSKGameUserPhoneStatusRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameUserPhoneStatusRequest& from);
  void MergeFrom(const ProWSKGameUserPhoneStatusRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameUserPhoneStatusRequest_MSGID MSGID;
  static const MSGID ID = ProWSKGameUserPhoneStatusRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameUserPhoneStatusRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameUserPhoneStatusRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameUserPhoneStatusRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameUserPhoneStatusRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameUserPhoneStatusRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameUserPhoneStatusRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameUserPhoneStatusRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // optional int32 userstatus = 2;
  inline bool has_userstatus() const;
  inline void clear_userstatus();
  static const int kUserstatusFieldNumber = 2;
  inline ::google::protobuf::int32 userstatus() const;
  inline void set_userstatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameUserPhoneStatusRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();
  inline void set_has_userstatus();
  inline void clear_has_userstatus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;
  ::google::protobuf::int32 userstatus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameUserPhoneStatusRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameUserGiveUpRequest : public ::google::protobuf::Message {
 public:
  ProWSKGameUserGiveUpRequest();
  virtual ~ProWSKGameUserGiveUpRequest();

  ProWSKGameUserGiveUpRequest(const ProWSKGameUserGiveUpRequest& from);

  inline ProWSKGameUserGiveUpRequest& operator=(const ProWSKGameUserGiveUpRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameUserGiveUpRequest& default_instance();

  void Swap(ProWSKGameUserGiveUpRequest* other);

  // implements Message ----------------------------------------------

  ProWSKGameUserGiveUpRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameUserGiveUpRequest& from);
  void MergeFrom(const ProWSKGameUserGiveUpRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameUserGiveUpRequest_MSGID MSGID;
  static const MSGID ID = ProWSKGameUserGiveUpRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameUserGiveUpRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameUserGiveUpRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameUserGiveUpRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameUserGiveUpRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameUserGiveUpRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameUserGiveUpRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameUserGiveUpRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat_id = 1;
  inline bool has_seat_id() const;
  inline void clear_seat_id();
  static const int kSeatIdFieldNumber = 1;
  inline ::google::protobuf::int32 seat_id() const;
  inline void set_seat_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameUserGiveUpRequest)
 private:
  inline void set_has_seat_id();
  inline void clear_has_seat_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameUserGiveUpRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameUserHintRequest : public ::google::protobuf::Message {
 public:
  ProWSKGameUserHintRequest();
  virtual ~ProWSKGameUserHintRequest();

  ProWSKGameUserHintRequest(const ProWSKGameUserHintRequest& from);

  inline ProWSKGameUserHintRequest& operator=(const ProWSKGameUserHintRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameUserHintRequest& default_instance();

  void Swap(ProWSKGameUserHintRequest* other);

  // implements Message ----------------------------------------------

  ProWSKGameUserHintRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameUserHintRequest& from);
  void MergeFrom(const ProWSKGameUserHintRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameUserHintRequest_MSGID MSGID;
  static const MSGID ID = ProWSKGameUserHintRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameUserHintRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameUserHintRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameUserHintRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameUserHintRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameUserHintRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameUserHintRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameUserHintRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProWSKGameUserHintRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameUserHintRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameUserHintResponse : public ::google::protobuf::Message {
 public:
  ProWSKGameUserHintResponse();
  virtual ~ProWSKGameUserHintResponse();

  ProWSKGameUserHintResponse(const ProWSKGameUserHintResponse& from);

  inline ProWSKGameUserHintResponse& operator=(const ProWSKGameUserHintResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameUserHintResponse& default_instance();

  void Swap(ProWSKGameUserHintResponse* other);

  // implements Message ----------------------------------------------

  ProWSKGameUserHintResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameUserHintResponse& from);
  void MergeFrom(const ProWSKGameUserHintResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameUserHintResponse_MSGID MSGID;
  static const MSGID ID = ProWSKGameUserHintResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameUserHintResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameUserHintResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameUserHintResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameUserHintResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameUserHintResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameUserHintResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameUserHintResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 lenth = 1;
  inline bool has_lenth() const;
  inline void clear_lenth();
  static const int kLenthFieldNumber = 1;
  inline ::google::protobuf::int32 lenth() const;
  inline void set_lenth(::google::protobuf::int32 value);

  // repeated int32 outMahs = 2;
  inline int outmahs_size() const;
  inline void clear_outmahs();
  static const int kOutMahsFieldNumber = 2;
  inline ::google::protobuf::int32 outmahs(int index) const;
  inline void set_outmahs(int index, ::google::protobuf::int32 value);
  inline void add_outmahs(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      outmahs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_outmahs();

  // @@protoc_insertion_point(class_scope:ProWSKGameUserHintResponse)
 private:
  inline void set_has_lenth();
  inline void clear_has_lenth();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > outmahs_;
  ::google::protobuf::int32 lenth_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameUserHintResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameUserDaTuNotify : public ::google::protobuf::Message {
 public:
  ProWSKGameUserDaTuNotify();
  virtual ~ProWSKGameUserDaTuNotify();

  ProWSKGameUserDaTuNotify(const ProWSKGameUserDaTuNotify& from);

  inline ProWSKGameUserDaTuNotify& operator=(const ProWSKGameUserDaTuNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameUserDaTuNotify& default_instance();

  void Swap(ProWSKGameUserDaTuNotify* other);

  // implements Message ----------------------------------------------

  ProWSKGameUserDaTuNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameUserDaTuNotify& from);
  void MergeFrom(const ProWSKGameUserDaTuNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameUserDaTuNotify_MSGID MSGID;
  static const MSGID ID = ProWSKGameUserDaTuNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameUserDaTuNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameUserDaTuNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameUserDaTuNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameUserDaTuNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameUserDaTuNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameUserDaTuNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameUserDaTuNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameUserDaTuNotify)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameUserDaTuNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameUserTeammateRequest : public ::google::protobuf::Message {
 public:
  ProWSKGameUserTeammateRequest();
  virtual ~ProWSKGameUserTeammateRequest();

  ProWSKGameUserTeammateRequest(const ProWSKGameUserTeammateRequest& from);

  inline ProWSKGameUserTeammateRequest& operator=(const ProWSKGameUserTeammateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameUserTeammateRequest& default_instance();

  void Swap(ProWSKGameUserTeammateRequest* other);

  // implements Message ----------------------------------------------

  ProWSKGameUserTeammateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameUserTeammateRequest& from);
  void MergeFrom(const ProWSKGameUserTeammateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameUserTeammateRequest_MSGID MSGID;
  static const MSGID ID = ProWSKGameUserTeammateRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameUserTeammateRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameUserTeammateRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameUserTeammateRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameUserTeammateRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameUserTeammateRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameUserTeammateRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameUserTeammateRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 bankerMateSeat = 1;
  inline bool has_bankermateseat() const;
  inline void clear_bankermateseat();
  static const int kBankerMateSeatFieldNumber = 1;
  inline ::google::protobuf::int32 bankermateseat() const;
  inline void set_bankermateseat(::google::protobuf::int32 value);

  // optional int32 mateCard = 2;
  inline bool has_matecard() const;
  inline void clear_matecard();
  static const int kMateCardFieldNumber = 2;
  inline ::google::protobuf::int32 matecard() const;
  inline void set_matecard(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameUserTeammateRequest)
 private:
  inline void set_has_bankermateseat();
  inline void clear_has_bankermateseat();
  inline void set_has_matecard();
  inline void clear_has_matecard();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bankermateseat_;
  ::google::protobuf::int32 matecard_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameUserTeammateRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameUserDaTuRequest : public ::google::protobuf::Message {
 public:
  ProWSKGameUserDaTuRequest();
  virtual ~ProWSKGameUserDaTuRequest();

  ProWSKGameUserDaTuRequest(const ProWSKGameUserDaTuRequest& from);

  inline ProWSKGameUserDaTuRequest& operator=(const ProWSKGameUserDaTuRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameUserDaTuRequest& default_instance();

  void Swap(ProWSKGameUserDaTuRequest* other);

  // implements Message ----------------------------------------------

  ProWSKGameUserDaTuRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameUserDaTuRequest& from);
  void MergeFrom(const ProWSKGameUserDaTuRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameUserDaTuRequest_MSGID MSGID;
  static const MSGID ID = ProWSKGameUserDaTuRequest_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameUserDaTuRequest_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameUserDaTuRequest_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameUserDaTuRequest_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameUserDaTuRequest_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameUserDaTuRequest_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameUserDaTuRequest_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameUserDaTuRequest_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool bIsDaTu = 2;
  inline bool has_bisdatu() const;
  inline void clear_bisdatu();
  static const int kBIsDaTuFieldNumber = 2;
  inline bool bisdatu() const;
  inline void set_bisdatu(bool value);

  // @@protoc_insertion_point(class_scope:ProWSKGameUserDaTuRequest)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_bisdatu();
  inline void clear_has_bisdatu();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  bool bisdatu_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameUserDaTuRequest* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameUserDaTuResponse : public ::google::protobuf::Message {
 public:
  ProWSKGameUserDaTuResponse();
  virtual ~ProWSKGameUserDaTuResponse();

  ProWSKGameUserDaTuResponse(const ProWSKGameUserDaTuResponse& from);

  inline ProWSKGameUserDaTuResponse& operator=(const ProWSKGameUserDaTuResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameUserDaTuResponse& default_instance();

  void Swap(ProWSKGameUserDaTuResponse* other);

  // implements Message ----------------------------------------------

  ProWSKGameUserDaTuResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameUserDaTuResponse& from);
  void MergeFrom(const ProWSKGameUserDaTuResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameUserDaTuResponse_MSGID MSGID;
  static const MSGID ID = ProWSKGameUserDaTuResponse_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameUserDaTuResponse_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameUserDaTuResponse_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameUserDaTuResponse_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameUserDaTuResponse_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameUserDaTuResponse_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameUserDaTuResponse_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameUserDaTuResponse_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool bIsDaTu = 2;
  inline bool has_bisdatu() const;
  inline void clear_bisdatu();
  static const int kBIsDaTuFieldNumber = 2;
  inline bool bisdatu() const;
  inline void set_bisdatu(bool value);

  // optional int32 nextSeat = 3;
  inline bool has_nextseat() const;
  inline void clear_nextseat();
  static const int kNextSeatFieldNumber = 3;
  inline ::google::protobuf::int32 nextseat() const;
  inline void set_nextseat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameUserDaTuResponse)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_bisdatu();
  inline void clear_has_bisdatu();
  inline void set_has_nextseat();
  inline void clear_has_nextseat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  bool bisdatu_;
  ::google::protobuf::int32 nextseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameUserDaTuResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameUserDaTuResult : public ::google::protobuf::Message {
 public:
  ProWSKGameUserDaTuResult();
  virtual ~ProWSKGameUserDaTuResult();

  ProWSKGameUserDaTuResult(const ProWSKGameUserDaTuResult& from);

  inline ProWSKGameUserDaTuResult& operator=(const ProWSKGameUserDaTuResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameUserDaTuResult& default_instance();

  void Swap(ProWSKGameUserDaTuResult* other);

  // implements Message ----------------------------------------------

  ProWSKGameUserDaTuResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameUserDaTuResult& from);
  void MergeFrom(const ProWSKGameUserDaTuResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameUserDaTuResult_MSGID MSGID;
  static const MSGID ID = ProWSKGameUserDaTuResult_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameUserDaTuResult_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameUserDaTuResult_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameUserDaTuResult_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameUserDaTuResult_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameUserDaTuResult_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameUserDaTuResult_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameUserDaTuResult_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::int32 seat() const;
  inline void set_seat(::google::protobuf::int32 value);

  // optional bool bIsDaTu = 2;
  inline bool has_bisdatu() const;
  inline void clear_bisdatu();
  static const int kBIsDaTuFieldNumber = 2;
  inline bool bisdatu() const;
  inline void set_bisdatu(bool value);

  // @@protoc_insertion_point(class_scope:ProWSKGameUserDaTuResult)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  inline void set_has_bisdatu();
  inline void clear_has_bisdatu();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_;
  bool bisdatu_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameUserDaTuResult* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameShangYouResult : public ::google::protobuf::Message {
 public:
  ProWSKGameShangYouResult();
  virtual ~ProWSKGameShangYouResult();

  ProWSKGameShangYouResult(const ProWSKGameShangYouResult& from);

  inline ProWSKGameShangYouResult& operator=(const ProWSKGameShangYouResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameShangYouResult& default_instance();

  void Swap(ProWSKGameShangYouResult* other);

  // implements Message ----------------------------------------------

  ProWSKGameShangYouResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameShangYouResult& from);
  void MergeFrom(const ProWSKGameShangYouResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameShangYouResult_MSGID MSGID;
  static const MSGID ID = ProWSKGameShangYouResult_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameShangYouResult_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameShangYouResult_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameShangYouResult_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameShangYouResult_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameShangYouResult_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameShangYouResult_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameShangYouResult_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 shangyouSeat = 1;
  inline int shangyouseat_size() const;
  inline void clear_shangyouseat();
  static const int kShangyouSeatFieldNumber = 1;
  inline ::google::protobuf::int32 shangyouseat(int index) const;
  inline void set_shangyouseat(int index, ::google::protobuf::int32 value);
  inline void add_shangyouseat(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shangyouseat() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shangyouseat();

  // @@protoc_insertion_point(class_scope:ProWSKGameShangYouResult)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shangyouseat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameShangYouResult* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameShowFriendNotify : public ::google::protobuf::Message {
 public:
  ProWSKGameShowFriendNotify();
  virtual ~ProWSKGameShowFriendNotify();

  ProWSKGameShowFriendNotify(const ProWSKGameShowFriendNotify& from);

  inline ProWSKGameShowFriendNotify& operator=(const ProWSKGameShowFriendNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameShowFriendNotify& default_instance();

  void Swap(ProWSKGameShowFriendNotify* other);

  // implements Message ----------------------------------------------

  ProWSKGameShowFriendNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameShowFriendNotify& from);
  void MergeFrom(const ProWSKGameShowFriendNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameShowFriendNotify_MSGID MSGID;
  static const MSGID ID = ProWSKGameShowFriendNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameShowFriendNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameShowFriendNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameShowFriendNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameShowFriendNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameShowFriendNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameShowFriendNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameShowFriendNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bool bShow = 1;
  inline bool has_bshow() const;
  inline void clear_bshow();
  static const int kBShowFieldNumber = 1;
  inline bool bshow() const;
  inline void set_bshow(bool value);

  // @@protoc_insertion_point(class_scope:ProWSKGameShowFriendNotify)
 private:
  inline void set_has_bshow();
  inline void clear_has_bshow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bshow_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameShowFriendNotify* default_instance_;
};
// -------------------------------------------------------------------

class ProWSKGameBoomNumNotify : public ::google::protobuf::Message {
 public:
  ProWSKGameBoomNumNotify();
  virtual ~ProWSKGameBoomNumNotify();

  ProWSKGameBoomNumNotify(const ProWSKGameBoomNumNotify& from);

  inline ProWSKGameBoomNumNotify& operator=(const ProWSKGameBoomNumNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProWSKGameBoomNumNotify& default_instance();

  void Swap(ProWSKGameBoomNumNotify* other);

  // implements Message ----------------------------------------------

  ProWSKGameBoomNumNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProWSKGameBoomNumNotify& from);
  void MergeFrom(const ProWSKGameBoomNumNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ProWSKGameBoomNumNotify_MSGID MSGID;
  static const MSGID ID = ProWSKGameBoomNumNotify_MSGID_ID;
  static inline bool MSGID_IsValid(int value) {
    return ProWSKGameBoomNumNotify_MSGID_IsValid(value);
  }
  static const MSGID MSGID_MIN =
    ProWSKGameBoomNumNotify_MSGID_MSGID_MIN;
  static const MSGID MSGID_MAX =
    ProWSKGameBoomNumNotify_MSGID_MSGID_MAX;
  static const int MSGID_ARRAYSIZE =
    ProWSKGameBoomNumNotify_MSGID_MSGID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MSGID_descriptor() {
    return ProWSKGameBoomNumNotify_MSGID_descriptor();
  }
  static inline const ::std::string& MSGID_Name(MSGID value) {
    return ProWSKGameBoomNumNotify_MSGID_Name(value);
  }
  static inline bool MSGID_Parse(const ::std::string& name,
      MSGID* value) {
    return ProWSKGameBoomNumNotify_MSGID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 nSeat = 1;
  inline bool has_nseat() const;
  inline void clear_nseat();
  static const int kNSeatFieldNumber = 1;
  inline ::google::protobuf::int32 nseat() const;
  inline void set_nseat(::google::protobuf::int32 value);

  // optional int32 nBoomNum = 2;
  inline bool has_nboomnum() const;
  inline void clear_nboomnum();
  static const int kNBoomNumFieldNumber = 2;
  inline ::google::protobuf::int32 nboomnum() const;
  inline void set_nboomnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProWSKGameBoomNumNotify)
 private:
  inline void set_has_nseat();
  inline void clear_has_nseat();
  inline void set_has_nboomnum();
  inline void clear_has_nboomnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nseat_;
  ::google::protobuf::int32 nboomnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_kkpk_2eproto();
  friend void protobuf_AssignDesc_kkpk_2eproto();
  friend void protobuf_ShutdownFile_kkpk_2eproto();

  void InitAsDefaultInstance();
  static ProWSKGameBoomNumNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// ProWSKGameStatusResponse

// optional .WSKGameState status = 2;
inline bool ProWSKGameStatusResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameStatusResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameStatusResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameStatusResponse::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::WSKGameState ProWSKGameStatusResponse::status() const {
  return static_cast< ::WSKGameState >(status_);
}
inline void ProWSKGameStatusResponse::set_status(::WSKGameState value) {
  assert(::WSKGameState_IsValid(value));
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameDeskInfoResponse

// optional int32 CellScore = 2;
inline bool ProWSKGameDeskInfoResponse::has_cellscore() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameDeskInfoResponse::set_has_cellscore() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameDeskInfoResponse::clear_has_cellscore() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameDeskInfoResponse::clear_cellscore() {
  cellscore_ = 0;
  clear_has_cellscore();
}
inline ::google::protobuf::int32 ProWSKGameDeskInfoResponse::cellscore() const {
  return cellscore_;
}
inline void ProWSKGameDeskInfoResponse::set_cellscore(::google::protobuf::int32 value) {
  set_has_cellscore();
  cellscore_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameReadyNotify

// optional int32 seat = 2;
inline bool ProWSKGameReadyNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameReadyNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameReadyNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameReadyNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameReadyNotify::seat() const {
  return seat_;
}
inline void ProWSKGameReadyNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 time = 3;
inline bool ProWSKGameReadyNotify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameReadyNotify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameReadyNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameReadyNotify::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProWSKGameReadyNotify::time() const {
  return time_;
}
inline void ProWSKGameReadyNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameReadyRequest

// optional int32 seat = 2;
inline bool ProWSKGameReadyRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameReadyRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameReadyRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameReadyRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameReadyRequest::seat() const {
  return seat_;
}
inline void ProWSKGameReadyRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameReadyResponse

// optional int32 seat = 2;
inline bool ProWSKGameReadyResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameReadyResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameReadyResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameReadyResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameReadyResponse::seat() const {
  return seat_;
}
inline void ProWSKGameReadyResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameStart

// optional int32 bankerseat = 2;
inline bool ProWSKGameStart::has_bankerseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameStart::set_has_bankerseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameStart::clear_has_bankerseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameStart::clear_bankerseat() {
  bankerseat_ = 0;
  clear_has_bankerseat();
}
inline ::google::protobuf::int32 ProWSKGameStart::bankerseat() const {
  return bankerseat_;
}
inline void ProWSKGameStart::set_bankerseat(::google::protobuf::int32 value) {
  set_has_bankerseat();
  bankerseat_ = value;
}

// optional int32 gamecount = 3;
inline bool ProWSKGameStart::has_gamecount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameStart::set_has_gamecount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameStart::clear_has_gamecount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameStart::clear_gamecount() {
  gamecount_ = 0;
  clear_has_gamecount();
}
inline ::google::protobuf::int32 ProWSKGameStart::gamecount() const {
  return gamecount_;
}
inline void ProWSKGameStart::set_gamecount(::google::protobuf::int32 value) {
  set_has_gamecount();
  gamecount_ = value;
}

// optional int32 outCardtimes = 4;
inline bool ProWSKGameStart::has_outcardtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProWSKGameStart::set_has_outcardtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProWSKGameStart::clear_has_outcardtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProWSKGameStart::clear_outcardtimes() {
  outcardtimes_ = 0;
  clear_has_outcardtimes();
}
inline ::google::protobuf::int32 ProWSKGameStart::outcardtimes() const {
  return outcardtimes_;
}
inline void ProWSKGameStart::set_outcardtimes(::google::protobuf::int32 value) {
  set_has_outcardtimes();
  outcardtimes_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameDiceNotify

// optional int32 seat = 2;
inline bool ProWSKGameDiceNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameDiceNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameDiceNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameDiceNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameDiceNotify::seat() const {
  return seat_;
}
inline void ProWSKGameDiceNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 time = 3;
inline bool ProWSKGameDiceNotify::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameDiceNotify::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameDiceNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameDiceNotify::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProWSKGameDiceNotify::time() const {
  return time_;
}
inline void ProWSKGameDiceNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 dicecount = 4;
inline bool ProWSKGameDiceNotify::has_dicecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProWSKGameDiceNotify::set_has_dicecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProWSKGameDiceNotify::clear_has_dicecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProWSKGameDiceNotify::clear_dicecount() {
  dicecount_ = 0;
  clear_has_dicecount();
}
inline ::google::protobuf::int32 ProWSKGameDiceNotify::dicecount() const {
  return dicecount_;
}
inline void ProWSKGameDiceNotify::set_dicecount(::google::protobuf::int32 value) {
  set_has_dicecount();
  dicecount_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameDiceRequest

// optional int32 seat = 2;
inline bool ProWSKGameDiceRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameDiceRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameDiceRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameDiceRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameDiceRequest::seat() const {
  return seat_;
}
inline void ProWSKGameDiceRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 dicecount = 3;
inline bool ProWSKGameDiceRequest::has_dicecount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameDiceRequest::set_has_dicecount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameDiceRequest::clear_has_dicecount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameDiceRequest::clear_dicecount() {
  dicecount_ = 0;
  clear_has_dicecount();
}
inline ::google::protobuf::int32 ProWSKGameDiceRequest::dicecount() const {
  return dicecount_;
}
inline void ProWSKGameDiceRequest::set_dicecount(::google::protobuf::int32 value) {
  set_has_dicecount();
  dicecount_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameDiceResult

// optional int32 seat = 2;
inline bool ProWSKGameDiceResult::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameDiceResult::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameDiceResult::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameDiceResult::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameDiceResult::seat() const {
  return seat_;
}
inline void ProWSKGameDiceResult::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 result = 3;
inline int ProWSKGameDiceResult::result_size() const {
  return result_.size();
}
inline void ProWSKGameDiceResult::clear_result() {
  result_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameDiceResult::result(int index) const {
  return result_.Get(index);
}
inline void ProWSKGameDiceResult::set_result(int index, ::google::protobuf::int32 value) {
  result_.Set(index, value);
}
inline void ProWSKGameDiceResult::add_result(::google::protobuf::int32 value) {
  result_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameDiceResult::result() const {
  return result_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameDiceResult::mutable_result() {
  return &result_;
}

// optional int32 dicecount = 4;
inline bool ProWSKGameDiceResult::has_dicecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProWSKGameDiceResult::set_has_dicecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProWSKGameDiceResult::clear_has_dicecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProWSKGameDiceResult::clear_dicecount() {
  dicecount_ = 0;
  clear_has_dicecount();
}
inline ::google::protobuf::int32 ProWSKGameDiceResult::dicecount() const {
  return dicecount_;
}
inline void ProWSKGameDiceResult::set_dicecount(::google::protobuf::int32 value) {
  set_has_dicecount();
  dicecount_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameSendMahs

// optional int32 seat = 2;
inline bool ProWSKGameSendMahs::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameSendMahs::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameSendMahs::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameSendMahs::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameSendMahs::seat() const {
  return seat_;
}
inline void ProWSKGameSendMahs::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 mahs = 3;
inline int ProWSKGameSendMahs::mahs_size() const {
  return mahs_.size();
}
inline void ProWSKGameSendMahs::clear_mahs() {
  mahs_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameSendMahs::mahs(int index) const {
  return mahs_.Get(index);
}
inline void ProWSKGameSendMahs::set_mahs(int index, ::google::protobuf::int32 value) {
  mahs_.Set(index, value);
}
inline void ProWSKGameSendMahs::add_mahs(::google::protobuf::int32 value) {
  mahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameSendMahs::mahs() const {
  return mahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameSendMahs::mutable_mahs() {
  return &mahs_;
}

// repeated int32 mahscount = 4;
inline int ProWSKGameSendMahs::mahscount_size() const {
  return mahscount_.size();
}
inline void ProWSKGameSendMahs::clear_mahscount() {
  mahscount_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameSendMahs::mahscount(int index) const {
  return mahscount_.Get(index);
}
inline void ProWSKGameSendMahs::set_mahscount(int index, ::google::protobuf::int32 value) {
  mahscount_.Set(index, value);
}
inline void ProWSKGameSendMahs::add_mahscount(::google::protobuf::int32 value) {
  mahscount_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameSendMahs::mahscount() const {
  return mahscount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameSendMahs::mutable_mahscount() {
  return &mahscount_;
}

// optional int32 cbLeftCount = 5;
inline bool ProWSKGameSendMahs::has_cbleftcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProWSKGameSendMahs::set_has_cbleftcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProWSKGameSendMahs::clear_has_cbleftcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProWSKGameSendMahs::clear_cbleftcount() {
  cbleftcount_ = 0;
  clear_has_cbleftcount();
}
inline ::google::protobuf::int32 ProWSKGameSendMahs::cbleftcount() const {
  return cbleftcount_;
}
inline void ProWSKGameSendMahs::set_cbleftcount(::google::protobuf::int32 value) {
  set_has_cbleftcount();
  cbleftcount_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameKingData

// optional int32 seat = 2;
inline bool ProWSKGameKingData::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameKingData::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameKingData::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameKingData::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameKingData::seat() const {
  return seat_;
}
inline void ProWSKGameKingData::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 mahs = 3;
inline int ProWSKGameKingData::mahs_size() const {
  return mahs_.size();
}
inline void ProWSKGameKingData::clear_mahs() {
  mahs_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameKingData::mahs(int index) const {
  return mahs_.Get(index);
}
inline void ProWSKGameKingData::set_mahs(int index, ::google::protobuf::int32 value) {
  mahs_.Set(index, value);
}
inline void ProWSKGameKingData::add_mahs(::google::protobuf::int32 value) {
  mahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameKingData::mahs() const {
  return mahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameKingData::mutable_mahs() {
  return &mahs_;
}

// repeated int32 downKingScore = 4;
inline int ProWSKGameKingData::downkingscore_size() const {
  return downkingscore_.size();
}
inline void ProWSKGameKingData::clear_downkingscore() {
  downkingscore_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameKingData::downkingscore(int index) const {
  return downkingscore_.Get(index);
}
inline void ProWSKGameKingData::set_downkingscore(int index, ::google::protobuf::int32 value) {
  downkingscore_.Set(index, value);
}
inline void ProWSKGameKingData::add_downkingscore(::google::protobuf::int32 value) {
  downkingscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameKingData::downkingscore() const {
  return downkingscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameKingData::mutable_downkingscore() {
  return &downkingscore_;
}

// repeated int32 kingcount = 5;
inline int ProWSKGameKingData::kingcount_size() const {
  return kingcount_.size();
}
inline void ProWSKGameKingData::clear_kingcount() {
  kingcount_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameKingData::kingcount(int index) const {
  return kingcount_.Get(index);
}
inline void ProWSKGameKingData::set_kingcount(int index, ::google::protobuf::int32 value) {
  kingcount_.Set(index, value);
}
inline void ProWSKGameKingData::add_kingcount(::google::protobuf::int32 value) {
  kingcount_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameKingData::kingcount() const {
  return kingcount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameKingData::mutable_kingcount() {
  return &kingcount_;
}

// repeated int32 viceking = 6;
inline int ProWSKGameKingData::viceking_size() const {
  return viceking_.size();
}
inline void ProWSKGameKingData::clear_viceking() {
  viceking_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameKingData::viceking(int index) const {
  return viceking_.Get(index);
}
inline void ProWSKGameKingData::set_viceking(int index, ::google::protobuf::int32 value) {
  viceking_.Set(index, value);
}
inline void ProWSKGameKingData::add_viceking(::google::protobuf::int32 value) {
  viceking_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameKingData::viceking() const {
  return viceking_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameKingData::mutable_viceking() {
  return &viceking_;
}

// optional .WSKSEND_TYPE notify_type = 7 [default = WSK_NORMAL_SEND];
inline bool ProWSKGameKingData::has_notify_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProWSKGameKingData::set_has_notify_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProWSKGameKingData::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProWSKGameKingData::clear_notify_type() {
  notify_type_ = 1;
  clear_has_notify_type();
}
inline ::WSKSEND_TYPE ProWSKGameKingData::notify_type() const {
  return static_cast< ::WSKSEND_TYPE >(notify_type_);
}
inline void ProWSKGameKingData::set_notify_type(::WSKSEND_TYPE value) {
  assert(::WSKSEND_TYPE_IsValid(value));
  set_has_notify_type();
  notify_type_ = value;
}

// optional .WSKKING_TYPE king_type = 8 [default = WSK_KING_UP];
inline bool ProWSKGameKingData::has_king_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProWSKGameKingData::set_has_king_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProWSKGameKingData::clear_has_king_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProWSKGameKingData::clear_king_type() {
  king_type_ = 1;
  clear_has_king_type();
}
inline ::WSKKING_TYPE ProWSKGameKingData::king_type() const {
  return static_cast< ::WSKKING_TYPE >(king_type_);
}
inline void ProWSKGameKingData::set_king_type(::WSKKING_TYPE value) {
  assert(::WSKKING_TYPE_IsValid(value));
  set_has_king_type();
  king_type_ = value;
}

// repeated int32 cbChongGuang = 9;
inline int ProWSKGameKingData::cbchongguang_size() const {
  return cbchongguang_.size();
}
inline void ProWSKGameKingData::clear_cbchongguang() {
  cbchongguang_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameKingData::cbchongguang(int index) const {
  return cbchongguang_.Get(index);
}
inline void ProWSKGameKingData::set_cbchongguang(int index, ::google::protobuf::int32 value) {
  cbchongguang_.Set(index, value);
}
inline void ProWSKGameKingData::add_cbchongguang(::google::protobuf::int32 value) {
  cbchongguang_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameKingData::cbchongguang() const {
  return cbchongguang_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameKingData::mutable_cbchongguang() {
  return &cbchongguang_;
}

// repeated int32 cbBaWangKing = 10;
inline int ProWSKGameKingData::cbbawangking_size() const {
  return cbbawangking_.size();
}
inline void ProWSKGameKingData::clear_cbbawangking() {
  cbbawangking_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameKingData::cbbawangking(int index) const {
  return cbbawangking_.Get(index);
}
inline void ProWSKGameKingData::set_cbbawangking(int index, ::google::protobuf::int32 value) {
  cbbawangking_.Set(index, value);
}
inline void ProWSKGameKingData::add_cbbawangking(::google::protobuf::int32 value) {
  cbbawangking_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameKingData::cbbawangking() const {
  return cbbawangking_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameKingData::mutable_cbbawangking() {
  return &cbbawangking_;
}

// -------------------------------------------------------------------

// ProWSKGameOutMahsResponse

// optional int32 seat = 2;
inline bool ProWSKGameOutMahsResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameOutMahsResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameOutMahsResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameOutMahsResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameOutMahsResponse::seat() const {
  return seat_;
}
inline void ProWSKGameOutMahsResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 outMahs = 3;
inline int ProWSKGameOutMahsResponse::outmahs_size() const {
  return outmahs_.size();
}
inline void ProWSKGameOutMahsResponse::clear_outmahs() {
  outmahs_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameOutMahsResponse::outmahs(int index) const {
  return outmahs_.Get(index);
}
inline void ProWSKGameOutMahsResponse::set_outmahs(int index, ::google::protobuf::int32 value) {
  outmahs_.Set(index, value);
}
inline void ProWSKGameOutMahsResponse::add_outmahs(::google::protobuf::int32 value) {
  outmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameOutMahsResponse::outmahs() const {
  return outmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameOutMahsResponse::mutable_outmahs() {
  return &outmahs_;
}

// repeated int32 handmahs = 4;
inline int ProWSKGameOutMahsResponse::handmahs_size() const {
  return handmahs_.size();
}
inline void ProWSKGameOutMahsResponse::clear_handmahs() {
  handmahs_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameOutMahsResponse::handmahs(int index) const {
  return handmahs_.Get(index);
}
inline void ProWSKGameOutMahsResponse::set_handmahs(int index, ::google::protobuf::int32 value) {
  handmahs_.Set(index, value);
}
inline void ProWSKGameOutMahsResponse::add_handmahs(::google::protobuf::int32 value) {
  handmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameOutMahsResponse::handmahs() const {
  return handmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameOutMahsResponse::mutable_handmahs() {
  return &handmahs_;
}

// optional int32 cardCount = 5;
inline bool ProWSKGameOutMahsResponse::has_cardcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProWSKGameOutMahsResponse::set_has_cardcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProWSKGameOutMahsResponse::clear_has_cardcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProWSKGameOutMahsResponse::clear_cardcount() {
  cardcount_ = 0;
  clear_has_cardcount();
}
inline ::google::protobuf::int32 ProWSKGameOutMahsResponse::cardcount() const {
  return cardcount_;
}
inline void ProWSKGameOutMahsResponse::set_cardcount(::google::protobuf::int32 value) {
  set_has_cardcount();
  cardcount_ = value;
}

// optional int32 cardType = 6;
inline bool ProWSKGameOutMahsResponse::has_cardtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProWSKGameOutMahsResponse::set_has_cardtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProWSKGameOutMahsResponse::clear_has_cardtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProWSKGameOutMahsResponse::clear_cardtype() {
  cardtype_ = 0;
  clear_has_cardtype();
}
inline ::google::protobuf::int32 ProWSKGameOutMahsResponse::cardtype() const {
  return cardtype_;
}
inline void ProWSKGameOutMahsResponse::set_cardtype(::google::protobuf::int32 value) {
  set_has_cardtype();
  cardtype_ = value;
}

// optional int32 cardtypeflg = 7;
inline bool ProWSKGameOutMahsResponse::has_cardtypeflg() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProWSKGameOutMahsResponse::set_has_cardtypeflg() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProWSKGameOutMahsResponse::clear_has_cardtypeflg() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProWSKGameOutMahsResponse::clear_cardtypeflg() {
  cardtypeflg_ = 0;
  clear_has_cardtypeflg();
}
inline ::google::protobuf::int32 ProWSKGameOutMahsResponse::cardtypeflg() const {
  return cardtypeflg_;
}
inline void ProWSKGameOutMahsResponse::set_cardtypeflg(::google::protobuf::int32 value) {
  set_has_cardtypeflg();
  cardtypeflg_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameTimerPower

// optional int32 seat = 2;
inline bool ProWSKGameTimerPower::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameTimerPower::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameTimerPower::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameTimerPower::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameTimerPower::seat() const {
  return seat_;
}
inline void ProWSKGameTimerPower::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 time = 3;
inline bool ProWSKGameTimerPower::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameTimerPower::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameTimerPower::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameTimerPower::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProWSKGameTimerPower::time() const {
  return time_;
}
inline void ProWSKGameTimerPower::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 outcardTime = 4;
inline bool ProWSKGameTimerPower::has_outcardtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProWSKGameTimerPower::set_has_outcardtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProWSKGameTimerPower::clear_has_outcardtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProWSKGameTimerPower::clear_outcardtime() {
  outcardtime_ = 0;
  clear_has_outcardtime();
}
inline ::google::protobuf::int32 ProWSKGameTimerPower::outcardtime() const {
  return outcardtime_;
}
inline void ProWSKGameTimerPower::set_outcardtime(::google::protobuf::int32 value) {
  set_has_outcardtime();
  outcardtime_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameOperateNotify

// optional int32 resumeSeat = 2;
inline bool ProWSKGameOperateNotify::has_resumeseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameOperateNotify::set_has_resumeseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameOperateNotify::clear_has_resumeseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameOperateNotify::clear_resumeseat() {
  resumeseat_ = 0;
  clear_has_resumeseat();
}
inline ::google::protobuf::int32 ProWSKGameOperateNotify::resumeseat() const {
  return resumeseat_;
}
inline void ProWSKGameOperateNotify::set_resumeseat(::google::protobuf::int32 value) {
  set_has_resumeseat();
  resumeseat_ = value;
}

// optional int32 ActionMask = 3;
inline bool ProWSKGameOperateNotify::has_actionmask() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameOperateNotify::set_has_actionmask() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameOperateNotify::clear_has_actionmask() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameOperateNotify::clear_actionmask() {
  actionmask_ = 0;
  clear_has_actionmask();
}
inline ::google::protobuf::int32 ProWSKGameOperateNotify::actionmask() const {
  return actionmask_;
}
inline void ProWSKGameOperateNotify::set_actionmask(::google::protobuf::int32 value) {
  set_has_actionmask();
  actionmask_ = value;
}

// optional int32 ActionCard = 4;
inline bool ProWSKGameOperateNotify::has_actioncard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProWSKGameOperateNotify::set_has_actioncard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProWSKGameOperateNotify::clear_has_actioncard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProWSKGameOperateNotify::clear_actioncard() {
  actioncard_ = 0;
  clear_has_actioncard();
}
inline ::google::protobuf::int32 ProWSKGameOperateNotify::actioncard() const {
  return actioncard_;
}
inline void ProWSKGameOperateNotify::set_actioncard(::google::protobuf::int32 value) {
  set_has_actioncard();
  actioncard_ = value;
}

// optional int32 time = 5;
inline bool ProWSKGameOperateNotify::has_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProWSKGameOperateNotify::set_has_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProWSKGameOperateNotify::clear_has_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProWSKGameOperateNotify::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProWSKGameOperateNotify::time() const {
  return time_;
}
inline void ProWSKGameOperateNotify::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// optional int32 operateseat = 6;
inline bool ProWSKGameOperateNotify::has_operateseat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProWSKGameOperateNotify::set_has_operateseat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProWSKGameOperateNotify::clear_has_operateseat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProWSKGameOperateNotify::clear_operateseat() {
  operateseat_ = 0;
  clear_has_operateseat();
}
inline ::google::protobuf::int32 ProWSKGameOperateNotify::operateseat() const {
  return operateseat_;
}
inline void ProWSKGameOperateNotify::set_operateseat(::google::protobuf::int32 value) {
  set_has_operateseat();
  operateseat_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameOperateResult

// optional int32 wOperateUser = 2;
inline bool ProWSKGameOperateResult::has_woperateuser() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameOperateResult::set_has_woperateuser() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameOperateResult::clear_has_woperateuser() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameOperateResult::clear_woperateuser() {
  woperateuser_ = 0;
  clear_has_woperateuser();
}
inline ::google::protobuf::int32 ProWSKGameOperateResult::woperateuser() const {
  return woperateuser_;
}
inline void ProWSKGameOperateResult::set_woperateuser(::google::protobuf::int32 value) {
  set_has_woperateuser();
  woperateuser_ = value;
}

// optional int32 wProvideUser = 3;
inline bool ProWSKGameOperateResult::has_wprovideuser() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameOperateResult::set_has_wprovideuser() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameOperateResult::clear_has_wprovideuser() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameOperateResult::clear_wprovideuser() {
  wprovideuser_ = 0;
  clear_has_wprovideuser();
}
inline ::google::protobuf::int32 ProWSKGameOperateResult::wprovideuser() const {
  return wprovideuser_;
}
inline void ProWSKGameOperateResult::set_wprovideuser(::google::protobuf::int32 value) {
  set_has_wprovideuser();
  wprovideuser_ = value;
}

// optional int32 wOperateCode = 4;
inline bool ProWSKGameOperateResult::has_woperatecode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProWSKGameOperateResult::set_has_woperatecode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProWSKGameOperateResult::clear_has_woperatecode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProWSKGameOperateResult::clear_woperatecode() {
  woperatecode_ = 0;
  clear_has_woperatecode();
}
inline ::google::protobuf::int32 ProWSKGameOperateResult::woperatecode() const {
  return woperatecode_;
}
inline void ProWSKGameOperateResult::set_woperatecode(::google::protobuf::int32 value) {
  set_has_woperatecode();
  woperatecode_ = value;
}

// optional int32 cbOperateCard = 5;
inline bool ProWSKGameOperateResult::has_cboperatecard() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProWSKGameOperateResult::set_has_cboperatecard() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProWSKGameOperateResult::clear_has_cboperatecard() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProWSKGameOperateResult::clear_cboperatecard() {
  cboperatecard_ = 0;
  clear_has_cboperatecard();
}
inline ::google::protobuf::int32 ProWSKGameOperateResult::cboperatecard() const {
  return cboperatecard_;
}
inline void ProWSKGameOperateResult::set_cboperatecard(::google::protobuf::int32 value) {
  set_has_cboperatecard();
  cboperatecard_ = value;
}

// repeated int32 handmahs = 6;
inline int ProWSKGameOperateResult::handmahs_size() const {
  return handmahs_.size();
}
inline void ProWSKGameOperateResult::clear_handmahs() {
  handmahs_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameOperateResult::handmahs(int index) const {
  return handmahs_.Get(index);
}
inline void ProWSKGameOperateResult::set_handmahs(int index, ::google::protobuf::int32 value) {
  handmahs_.Set(index, value);
}
inline void ProWSKGameOperateResult::add_handmahs(::google::protobuf::int32 value) {
  handmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameOperateResult::handmahs() const {
  return handmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameOperateResult::mutable_handmahs() {
  return &handmahs_;
}

// optional int32 handcount = 7;
inline bool ProWSKGameOperateResult::has_handcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProWSKGameOperateResult::set_has_handcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProWSKGameOperateResult::clear_has_handcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProWSKGameOperateResult::clear_handcount() {
  handcount_ = 0;
  clear_has_handcount();
}
inline ::google::protobuf::int32 ProWSKGameOperateResult::handcount() const {
  return handcount_;
}
inline void ProWSKGameOperateResult::set_handcount(::google::protobuf::int32 value) {
  set_has_handcount();
  handcount_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameOperateRequest

// optional int32 seat = 2;
inline bool ProWSKGameOperateRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameOperateRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameOperateRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameOperateRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameOperateRequest::seat() const {
  return seat_;
}
inline void ProWSKGameOperateRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 wOperateCode = 3;
inline bool ProWSKGameOperateRequest::has_woperatecode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameOperateRequest::set_has_woperatecode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameOperateRequest::clear_has_woperatecode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameOperateRequest::clear_woperatecode() {
  woperatecode_ = 0;
  clear_has_woperatecode();
}
inline ::google::protobuf::int32 ProWSKGameOperateRequest::woperatecode() const {
  return woperatecode_;
}
inline void ProWSKGameOperateRequest::set_woperatecode(::google::protobuf::int32 value) {
  set_has_woperatecode();
  woperatecode_ = value;
}

// optional int32 cbOperateCard = 4;
inline bool ProWSKGameOperateRequest::has_cboperatecard() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProWSKGameOperateRequest::set_has_cboperatecard() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProWSKGameOperateRequest::clear_has_cboperatecard() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProWSKGameOperateRequest::clear_cboperatecard() {
  cboperatecard_ = 0;
  clear_has_cboperatecard();
}
inline ::google::protobuf::int32 ProWSKGameOperateRequest::cboperatecard() const {
  return cboperatecard_;
}
inline void ProWSKGameOperateRequest::set_cboperatecard(::google::protobuf::int32 value) {
  set_has_cboperatecard();
  cboperatecard_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameTrust

// optional int32 seat = 2;
inline bool ProWSKGameTrust::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameTrust::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameTrust::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameTrust::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameTrust::seat() const {
  return seat_;
}
inline void ProWSKGameTrust::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool isTrust = 3;
inline bool ProWSKGameTrust::has_istrust() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameTrust::set_has_istrust() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameTrust::clear_has_istrust() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameTrust::clear_istrust() {
  istrust_ = false;
  clear_has_istrust();
}
inline bool ProWSKGameTrust::istrust() const {
  return istrust_;
}
inline void ProWSKGameTrust::set_istrust(bool value) {
  set_has_istrust();
  istrust_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameOutMahRequest

// optional int32 seat = 2;
inline bool ProWSKGameOutMahRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameOutMahRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameOutMahRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameOutMahRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameOutMahRequest::seat() const {
  return seat_;
}
inline void ProWSKGameOutMahRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 outMahs = 3;
inline int ProWSKGameOutMahRequest::outmahs_size() const {
  return outmahs_.size();
}
inline void ProWSKGameOutMahRequest::clear_outmahs() {
  outmahs_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameOutMahRequest::outmahs(int index) const {
  return outmahs_.Get(index);
}
inline void ProWSKGameOutMahRequest::set_outmahs(int index, ::google::protobuf::int32 value) {
  outmahs_.Set(index, value);
}
inline void ProWSKGameOutMahRequest::add_outmahs(::google::protobuf::int32 value) {
  outmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameOutMahRequest::outmahs() const {
  return outmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameOutMahRequest::mutable_outmahs() {
  return &outmahs_;
}

// -------------------------------------------------------------------

// ProWSKGameCatchCard

// optional int32 seat = 2;
inline bool ProWSKGameCatchCard::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameCatchCard::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameCatchCard::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameCatchCard::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameCatchCard::seat() const {
  return seat_;
}
inline void ProWSKGameCatchCard::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional int32 cbCardData = 3;
inline bool ProWSKGameCatchCard::has_cbcarddata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameCatchCard::set_has_cbcarddata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameCatchCard::clear_has_cbcarddata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameCatchCard::clear_cbcarddata() {
  cbcarddata_ = 0;
  clear_has_cbcarddata();
}
inline ::google::protobuf::int32 ProWSKGameCatchCard::cbcarddata() const {
  return cbcarddata_;
}
inline void ProWSKGameCatchCard::set_cbcarddata(::google::protobuf::int32 value) {
  set_has_cbcarddata();
  cbcarddata_ = value;
}

// optional int32 wActionMask = 4;
inline bool ProWSKGameCatchCard::has_wactionmask() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProWSKGameCatchCard::set_has_wactionmask() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProWSKGameCatchCard::clear_has_wactionmask() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProWSKGameCatchCard::clear_wactionmask() {
  wactionmask_ = 0;
  clear_has_wactionmask();
}
inline ::google::protobuf::int32 ProWSKGameCatchCard::wactionmask() const {
  return wactionmask_;
}
inline void ProWSKGameCatchCard::set_wactionmask(::google::protobuf::int32 value) {
  set_has_wactionmask();
  wactionmask_ = value;
}

// optional bool cbIsNotGang = 5;
inline bool ProWSKGameCatchCard::has_cbisnotgang() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProWSKGameCatchCard::set_has_cbisnotgang() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProWSKGameCatchCard::clear_has_cbisnotgang() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProWSKGameCatchCard::clear_cbisnotgang() {
  cbisnotgang_ = false;
  clear_has_cbisnotgang();
}
inline bool ProWSKGameCatchCard::cbisnotgang() const {
  return cbisnotgang_;
}
inline void ProWSKGameCatchCard::set_cbisnotgang(bool value) {
  set_has_cbisnotgang();
  cbisnotgang_ = value;
}

// optional int32 cbLeftCount = 6;
inline bool ProWSKGameCatchCard::has_cbleftcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProWSKGameCatchCard::set_has_cbleftcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProWSKGameCatchCard::clear_has_cbleftcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProWSKGameCatchCard::clear_cbleftcount() {
  cbleftcount_ = 0;
  clear_has_cbleftcount();
}
inline ::google::protobuf::int32 ProWSKGameCatchCard::cbleftcount() const {
  return cbleftcount_;
}
inline void ProWSKGameCatchCard::set_cbleftcount(::google::protobuf::int32 value) {
  set_has_cbleftcount();
  cbleftcount_ = value;
}

// -------------------------------------------------------------------

// WSKMahList

// repeated int32 Mahs = 1;
inline int WSKMahList::mahs_size() const {
  return mahs_.size();
}
inline void WSKMahList::clear_mahs() {
  mahs_.Clear();
}
inline ::google::protobuf::int32 WSKMahList::mahs(int index) const {
  return mahs_.Get(index);
}
inline void WSKMahList::set_mahs(int index, ::google::protobuf::int32 value) {
  mahs_.Set(index, value);
}
inline void WSKMahList::add_mahs(::google::protobuf::int32 value) {
  mahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WSKMahList::mahs() const {
  return mahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WSKMahList::mutable_mahs() {
  return &mahs_;
}

// -------------------------------------------------------------------

// WSKScoreList

// repeated int32 roundScore = 1;
inline int WSKScoreList::roundscore_size() const {
  return roundscore_.size();
}
inline void WSKScoreList::clear_roundscore() {
  roundscore_.Clear();
}
inline ::google::protobuf::int32 WSKScoreList::roundscore(int index) const {
  return roundscore_.Get(index);
}
inline void WSKScoreList::set_roundscore(int index, ::google::protobuf::int32 value) {
  roundscore_.Set(index, value);
}
inline void WSKScoreList::add_roundscore(::google::protobuf::int32 value) {
  roundscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WSKScoreList::roundscore() const {
  return roundscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WSKScoreList::mutable_roundscore() {
  return &roundscore_;
}

// -------------------------------------------------------------------

// WSKAwardList

// optional int32 seat = 1;
inline bool WSKAwardList::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSKAwardList::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSKAwardList::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSKAwardList::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 WSKAwardList::seat() const {
  return seat_;
}
inline void WSKAwardList::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 CardsData = 2;
inline int WSKAwardList::cardsdata_size() const {
  return cardsdata_.size();
}
inline void WSKAwardList::clear_cardsdata() {
  cardsdata_.Clear();
}
inline ::google::protobuf::int32 WSKAwardList::cardsdata(int index) const {
  return cardsdata_.Get(index);
}
inline void WSKAwardList::set_cardsdata(int index, ::google::protobuf::int32 value) {
  cardsdata_.Set(index, value);
}
inline void WSKAwardList::add_cardsdata(::google::protobuf::int32 value) {
  cardsdata_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WSKAwardList::cardsdata() const {
  return cardsdata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WSKAwardList::mutable_cardsdata() {
  return &cardsdata_;
}

// optional int32 awardScore = 3;
inline bool WSKAwardList::has_awardscore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WSKAwardList::set_has_awardscore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WSKAwardList::clear_has_awardscore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WSKAwardList::clear_awardscore() {
  awardscore_ = 0;
  clear_has_awardscore();
}
inline ::google::protobuf::int32 WSKAwardList::awardscore() const {
  return awardscore_;
}
inline void WSKAwardList::set_awardscore(::google::protobuf::int32 value) {
  set_has_awardscore();
  awardscore_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameEnd

// optional int32 lGameTax = 2;
inline bool ProWSKGameEnd::has_lgametax() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameEnd::set_has_lgametax() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameEnd::clear_has_lgametax() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameEnd::clear_lgametax() {
  lgametax_ = 0;
  clear_has_lgametax();
}
inline ::google::protobuf::int32 ProWSKGameEnd::lgametax() const {
  return lgametax_;
}
inline void ProWSKGameEnd::set_lgametax(::google::protobuf::int32 value) {
  set_has_lgametax();
  lgametax_ = value;
}

// repeated int32 cbChongGuang = 3;
inline int ProWSKGameEnd::cbchongguang_size() const {
  return cbchongguang_.size();
}
inline void ProWSKGameEnd::clear_cbchongguang() {
  cbchongguang_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameEnd::cbchongguang(int index) const {
  return cbchongguang_.Get(index);
}
inline void ProWSKGameEnd::set_cbchongguang(int index, ::google::protobuf::int32 value) {
  cbchongguang_.Set(index, value);
}
inline void ProWSKGameEnd::add_cbchongguang(::google::protobuf::int32 value) {
  cbchongguang_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameEnd::cbchongguang() const {
  return cbchongguang_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameEnd::mutable_cbchongguang() {
  return &cbchongguang_;
}

// repeated int32 cbBaWangKing = 4;
inline int ProWSKGameEnd::cbbawangking_size() const {
  return cbbawangking_.size();
}
inline void ProWSKGameEnd::clear_cbbawangking() {
  cbbawangking_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameEnd::cbbawangking(int index) const {
  return cbbawangking_.Get(index);
}
inline void ProWSKGameEnd::set_cbbawangking(int index, ::google::protobuf::int32 value) {
  cbbawangking_.Set(index, value);
}
inline void ProWSKGameEnd::add_cbbawangking(::google::protobuf::int32 value) {
  cbbawangking_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameEnd::cbbawangking() const {
  return cbbawangking_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameEnd::mutable_cbbawangking() {
  return &cbbawangking_;
}

// optional int32 wProvideUser = 5;
inline bool ProWSKGameEnd::has_wprovideuser() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProWSKGameEnd::set_has_wprovideuser() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProWSKGameEnd::clear_has_wprovideuser() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProWSKGameEnd::clear_wprovideuser() {
  wprovideuser_ = 0;
  clear_has_wprovideuser();
}
inline ::google::protobuf::int32 ProWSKGameEnd::wprovideuser() const {
  return wprovideuser_;
}
inline void ProWSKGameEnd::set_wprovideuser(::google::protobuf::int32 value) {
  set_has_wprovideuser();
  wprovideuser_ = value;
}

// optional int32 cbChiHuCard = 6;
inline bool ProWSKGameEnd::has_cbchihucard() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProWSKGameEnd::set_has_cbchihucard() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProWSKGameEnd::clear_has_cbchihucard() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProWSKGameEnd::clear_cbchihucard() {
  cbchihucard_ = 0;
  clear_has_cbchihucard();
}
inline ::google::protobuf::int32 ProWSKGameEnd::cbchihucard() const {
  return cbchihucard_;
}
inline void ProWSKGameEnd::set_cbchihucard(::google::protobuf::int32 value) {
  set_has_cbchihucard();
  cbchihucard_ = value;
}

// repeated int32 dwChiHuKind = 7;
inline int ProWSKGameEnd::dwchihukind_size() const {
  return dwchihukind_.size();
}
inline void ProWSKGameEnd::clear_dwchihukind() {
  dwchihukind_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameEnd::dwchihukind(int index) const {
  return dwchihukind_.Get(index);
}
inline void ProWSKGameEnd::set_dwchihukind(int index, ::google::protobuf::int32 value) {
  dwchihukind_.Set(index, value);
}
inline void ProWSKGameEnd::add_dwchihukind(::google::protobuf::int32 value) {
  dwchihukind_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameEnd::dwchihukind() const {
  return dwchihukind_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameEnd::mutable_dwchihukind() {
  return &dwchihukind_;
}

// repeated int32 dwChiHuRight = 8;
inline int ProWSKGameEnd::dwchihuright_size() const {
  return dwchihuright_.size();
}
inline void ProWSKGameEnd::clear_dwchihuright() {
  dwchihuright_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameEnd::dwchihuright(int index) const {
  return dwchihuright_.Get(index);
}
inline void ProWSKGameEnd::set_dwchihuright(int index, ::google::protobuf::int32 value) {
  dwchihuright_.Set(index, value);
}
inline void ProWSKGameEnd::add_dwchihuright(::google::protobuf::int32 value) {
  dwchihuright_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameEnd::dwchihuright() const {
  return dwchihuright_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameEnd::mutable_dwchihuright() {
  return &dwchihuright_;
}

// repeated int32 lTotaslGameScore = 9;
inline int ProWSKGameEnd::ltotaslgamescore_size() const {
  return ltotaslgamescore_.size();
}
inline void ProWSKGameEnd::clear_ltotaslgamescore() {
  ltotaslgamescore_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameEnd::ltotaslgamescore(int index) const {
  return ltotaslgamescore_.Get(index);
}
inline void ProWSKGameEnd::set_ltotaslgamescore(int index, ::google::protobuf::int32 value) {
  ltotaslgamescore_.Set(index, value);
}
inline void ProWSKGameEnd::add_ltotaslgamescore(::google::protobuf::int32 value) {
  ltotaslgamescore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameEnd::ltotaslgamescore() const {
  return ltotaslgamescore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameEnd::mutable_ltotaslgamescore() {
  return &ltotaslgamescore_;
}

// repeated int32 lCurrentGameScore = 10;
inline int ProWSKGameEnd::lcurrentgamescore_size() const {
  return lcurrentgamescore_.size();
}
inline void ProWSKGameEnd::clear_lcurrentgamescore() {
  lcurrentgamescore_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameEnd::lcurrentgamescore(int index) const {
  return lcurrentgamescore_.Get(index);
}
inline void ProWSKGameEnd::set_lcurrentgamescore(int index, ::google::protobuf::int32 value) {
  lcurrentgamescore_.Set(index, value);
}
inline void ProWSKGameEnd::add_lcurrentgamescore(::google::protobuf::int32 value) {
  lcurrentgamescore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameEnd::lcurrentgamescore() const {
  return lcurrentgamescore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameEnd::mutable_lcurrentgamescore() {
  return &lcurrentgamescore_;
}

// repeated int32 lCurrentPointScore = 11;
inline int ProWSKGameEnd::lcurrentpointscore_size() const {
  return lcurrentpointscore_.size();
}
inline void ProWSKGameEnd::clear_lcurrentpointscore() {
  lcurrentpointscore_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameEnd::lcurrentpointscore(int index) const {
  return lcurrentpointscore_.Get(index);
}
inline void ProWSKGameEnd::set_lcurrentpointscore(int index, ::google::protobuf::int32 value) {
  lcurrentpointscore_.Set(index, value);
}
inline void ProWSKGameEnd::add_lcurrentpointscore(::google::protobuf::int32 value) {
  lcurrentpointscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameEnd::lcurrentpointscore() const {
  return lcurrentpointscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameEnd::mutable_lcurrentpointscore() {
  return &lcurrentpointscore_;
}

// repeated int32 lAttachScore = 12;
inline int ProWSKGameEnd::lattachscore_size() const {
  return lattachscore_.size();
}
inline void ProWSKGameEnd::clear_lattachscore() {
  lattachscore_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameEnd::lattachscore(int index) const {
  return lattachscore_.Get(index);
}
inline void ProWSKGameEnd::set_lattachscore(int index, ::google::protobuf::int32 value) {
  lattachscore_.Set(index, value);
}
inline void ProWSKGameEnd::add_lattachscore(::google::protobuf::int32 value) {
  lattachscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameEnd::lattachscore() const {
  return lattachscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameEnd::mutable_lattachscore() {
  return &lattachscore_;
}

// repeated .WSKMahList cbHandCardData = 13;
inline int ProWSKGameEnd::cbhandcarddata_size() const {
  return cbhandcarddata_.size();
}
inline void ProWSKGameEnd::clear_cbhandcarddata() {
  cbhandcarddata_.Clear();
}
inline const ::WSKMahList& ProWSKGameEnd::cbhandcarddata(int index) const {
  return cbhandcarddata_.Get(index);
}
inline ::WSKMahList* ProWSKGameEnd::mutable_cbhandcarddata(int index) {
  return cbhandcarddata_.Mutable(index);
}
inline ::WSKMahList* ProWSKGameEnd::add_cbhandcarddata() {
  return cbhandcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WSKMahList >&
ProWSKGameEnd::cbhandcarddata() const {
  return cbhandcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::WSKMahList >*
ProWSKGameEnd::mutable_cbhandcarddata() {
  return &cbhandcarddata_;
}

// repeated .WSKAwardList cbAwardCardData = 14;
inline int ProWSKGameEnd::cbawardcarddata_size() const {
  return cbawardcarddata_.size();
}
inline void ProWSKGameEnd::clear_cbawardcarddata() {
  cbawardcarddata_.Clear();
}
inline const ::WSKAwardList& ProWSKGameEnd::cbawardcarddata(int index) const {
  return cbawardcarddata_.Get(index);
}
inline ::WSKAwardList* ProWSKGameEnd::mutable_cbawardcarddata(int index) {
  return cbawardcarddata_.Mutable(index);
}
inline ::WSKAwardList* ProWSKGameEnd::add_cbawardcarddata() {
  return cbawardcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WSKAwardList >&
ProWSKGameEnd::cbawardcarddata() const {
  return cbawardcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::WSKAwardList >*
ProWSKGameEnd::mutable_cbawardcarddata() {
  return &cbawardcarddata_;
}

// repeated int32 lOnlyWinScore = 15;
inline int ProWSKGameEnd::lonlywinscore_size() const {
  return lonlywinscore_.size();
}
inline void ProWSKGameEnd::clear_lonlywinscore() {
  lonlywinscore_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameEnd::lonlywinscore(int index) const {
  return lonlywinscore_.Get(index);
}
inline void ProWSKGameEnd::set_lonlywinscore(int index, ::google::protobuf::int32 value) {
  lonlywinscore_.Set(index, value);
}
inline void ProWSKGameEnd::add_lonlywinscore(::google::protobuf::int32 value) {
  lonlywinscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameEnd::lonlywinscore() const {
  return lonlywinscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameEnd::mutable_lonlywinscore() {
  return &lonlywinscore_;
}

// optional bool bRoundEnd = 16;
inline bool ProWSKGameEnd::has_broundend() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ProWSKGameEnd::set_has_broundend() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ProWSKGameEnd::clear_has_broundend() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ProWSKGameEnd::clear_broundend() {
  broundend_ = false;
  clear_has_broundend();
}
inline bool ProWSKGameEnd::broundend() const {
  return broundend_;
}
inline void ProWSKGameEnd::set_broundend(bool value) {
  set_has_broundend();
  broundend_ = value;
}

// repeated int32 lHuiTouScore = 17;
inline int ProWSKGameEnd::lhuitouscore_size() const {
  return lhuitouscore_.size();
}
inline void ProWSKGameEnd::clear_lhuitouscore() {
  lhuitouscore_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameEnd::lhuitouscore(int index) const {
  return lhuitouscore_.Get(index);
}
inline void ProWSKGameEnd::set_lhuitouscore(int index, ::google::protobuf::int32 value) {
  lhuitouscore_.Set(index, value);
}
inline void ProWSKGameEnd::add_lhuitouscore(::google::protobuf::int32 value) {
  lhuitouscore_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameEnd::lhuitouscore() const {
  return lhuitouscore_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameEnd::mutable_lhuitouscore() {
  return &lhuitouscore_;
}

// optional bool bZhuangWin = 18;
inline bool ProWSKGameEnd::has_bzhuangwin() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ProWSKGameEnd::set_has_bzhuangwin() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ProWSKGameEnd::clear_has_bzhuangwin() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ProWSKGameEnd::clear_bzhuangwin() {
  bzhuangwin_ = false;
  clear_has_bzhuangwin();
}
inline bool ProWSKGameEnd::bzhuangwin() const {
  return bzhuangwin_;
}
inline void ProWSKGameEnd::set_bzhuangwin(bool value) {
  set_has_bzhuangwin();
  bzhuangwin_ = value;
}

// repeated int32 cbJiangMaCardData = 19;
inline int ProWSKGameEnd::cbjiangmacarddata_size() const {
  return cbjiangmacarddata_.size();
}
inline void ProWSKGameEnd::clear_cbjiangmacarddata() {
  cbjiangmacarddata_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameEnd::cbjiangmacarddata(int index) const {
  return cbjiangmacarddata_.Get(index);
}
inline void ProWSKGameEnd::set_cbjiangmacarddata(int index, ::google::protobuf::int32 value) {
  cbjiangmacarddata_.Set(index, value);
}
inline void ProWSKGameEnd::add_cbjiangmacarddata(::google::protobuf::int32 value) {
  cbjiangmacarddata_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameEnd::cbjiangmacarddata() const {
  return cbjiangmacarddata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameEnd::mutable_cbjiangmacarddata() {
  return &cbjiangmacarddata_;
}

// repeated .WSKScoreList detailedScores = 20;
inline int ProWSKGameEnd::detailedscores_size() const {
  return detailedscores_.size();
}
inline void ProWSKGameEnd::clear_detailedscores() {
  detailedscores_.Clear();
}
inline const ::WSKScoreList& ProWSKGameEnd::detailedscores(int index) const {
  return detailedscores_.Get(index);
}
inline ::WSKScoreList* ProWSKGameEnd::mutable_detailedscores(int index) {
  return detailedscores_.Mutable(index);
}
inline ::WSKScoreList* ProWSKGameEnd::add_detailedscores() {
  return detailedscores_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WSKScoreList >&
ProWSKGameEnd::detailedscores() const {
  return detailedscores_;
}
inline ::google::protobuf::RepeatedPtrField< ::WSKScoreList >*
ProWSKGameEnd::mutable_detailedscores() {
  return &detailedscores_;
}

// optional bool bIsDaTu = 21;
inline bool ProWSKGameEnd::has_bisdatu() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ProWSKGameEnd::set_has_bisdatu() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ProWSKGameEnd::clear_has_bisdatu() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ProWSKGameEnd::clear_bisdatu() {
  bisdatu_ = false;
  clear_has_bisdatu();
}
inline bool ProWSKGameEnd::bisdatu() const {
  return bisdatu_;
}
inline void ProWSKGameEnd::set_bisdatu(bool value) {
  set_has_bisdatu();
  bisdatu_ = value;
}

// optional bool bIsKuTong = 22;
inline bool ProWSKGameEnd::has_biskutong() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ProWSKGameEnd::set_has_biskutong() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ProWSKGameEnd::clear_has_biskutong() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ProWSKGameEnd::clear_biskutong() {
  biskutong_ = false;
  clear_has_biskutong();
}
inline bool ProWSKGameEnd::biskutong() const {
  return biskutong_;
}
inline void ProWSKGameEnd::set_biskutong(bool value) {
  set_has_biskutong();
  biskutong_ = value;
}

// optional int32 nNo1Seat = 23;
inline bool ProWSKGameEnd::has_nno1seat() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ProWSKGameEnd::set_has_nno1seat() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ProWSKGameEnd::clear_has_nno1seat() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ProWSKGameEnd::clear_nno1seat() {
  nno1seat_ = 0;
  clear_has_nno1seat();
}
inline ::google::protobuf::int32 ProWSKGameEnd::nno1seat() const {
  return nno1seat_;
}
inline void ProWSKGameEnd::set_nno1seat(::google::protobuf::int32 value) {
  set_has_nno1seat();
  nno1seat_ = value;
}

// optional int32 nWinerSeat = 24;
inline bool ProWSKGameEnd::has_nwinerseat() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ProWSKGameEnd::set_has_nwinerseat() {
  _has_bits_[0] |= 0x00400000u;
}
inline void ProWSKGameEnd::clear_has_nwinerseat() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void ProWSKGameEnd::clear_nwinerseat() {
  nwinerseat_ = 0;
  clear_has_nwinerseat();
}
inline ::google::protobuf::int32 ProWSKGameEnd::nwinerseat() const {
  return nwinerseat_;
}
inline void ProWSKGameEnd::set_nwinerseat(::google::protobuf::int32 value) {
  set_has_nwinerseat();
  nwinerseat_ = value;
}

// optional int32 nWinersMate = 25;
inline bool ProWSKGameEnd::has_nwinersmate() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void ProWSKGameEnd::set_has_nwinersmate() {
  _has_bits_[0] |= 0x00800000u;
}
inline void ProWSKGameEnd::clear_has_nwinersmate() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void ProWSKGameEnd::clear_nwinersmate() {
  nwinersmate_ = 0;
  clear_has_nwinersmate();
}
inline ::google::protobuf::int32 ProWSKGameEnd::nwinersmate() const {
  return nwinersmate_;
}
inline void ProWSKGameEnd::set_nwinersmate(::google::protobuf::int32 value) {
  set_has_nwinersmate();
  nwinersmate_ = value;
}

// optional int32 nNo2Seat = 26;
inline bool ProWSKGameEnd::has_nno2seat() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void ProWSKGameEnd::set_has_nno2seat() {
  _has_bits_[0] |= 0x01000000u;
}
inline void ProWSKGameEnd::clear_has_nno2seat() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void ProWSKGameEnd::clear_nno2seat() {
  nno2seat_ = 0;
  clear_has_nno2seat();
}
inline ::google::protobuf::int32 ProWSKGameEnd::nno2seat() const {
  return nno2seat_;
}
inline void ProWSKGameEnd::set_nno2seat(::google::protobuf::int32 value) {
  set_has_nno2seat();
  nno2seat_ = value;
}

// optional int32 nNo3Seat = 27;
inline bool ProWSKGameEnd::has_nno3seat() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void ProWSKGameEnd::set_has_nno3seat() {
  _has_bits_[0] |= 0x02000000u;
}
inline void ProWSKGameEnd::clear_has_nno3seat() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void ProWSKGameEnd::clear_nno3seat() {
  nno3seat_ = 0;
  clear_has_nno3seat();
}
inline ::google::protobuf::int32 ProWSKGameEnd::nno3seat() const {
  return nno3seat_;
}
inline void ProWSKGameEnd::set_nno3seat(::google::protobuf::int32 value) {
  set_has_nno3seat();
  nno3seat_ = value;
}

// optional int32 nNo4Seat = 28;
inline bool ProWSKGameEnd::has_nno4seat() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void ProWSKGameEnd::set_has_nno4seat() {
  _has_bits_[0] |= 0x04000000u;
}
inline void ProWSKGameEnd::clear_has_nno4seat() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void ProWSKGameEnd::clear_nno4seat() {
  nno4seat_ = 0;
  clear_has_nno4seat();
}
inline ::google::protobuf::int32 ProWSKGameEnd::nno4seat() const {
  return nno4seat_;
}
inline void ProWSKGameEnd::set_nno4seat(::google::protobuf::int32 value) {
  set_has_nno4seat();
  nno4seat_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameQuickSoundRequest

// optional int32 desk_id = 2;
inline bool ProWSKGameQuickSoundRequest::has_desk_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameQuickSoundRequest::set_has_desk_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameQuickSoundRequest::clear_has_desk_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameQuickSoundRequest::clear_desk_id() {
  desk_id_ = 0;
  clear_has_desk_id();
}
inline ::google::protobuf::int32 ProWSKGameQuickSoundRequest::desk_id() const {
  return desk_id_;
}
inline void ProWSKGameQuickSoundRequest::set_desk_id(::google::protobuf::int32 value) {
  set_has_desk_id();
  desk_id_ = value;
}

// optional int32 seat_id = 3;
inline bool ProWSKGameQuickSoundRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameQuickSoundRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameQuickSoundRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameQuickSoundRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProWSKGameQuickSoundRequest::seat_id() const {
  return seat_id_;
}
inline void ProWSKGameQuickSoundRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional int32 sound_id = 4;
inline bool ProWSKGameQuickSoundRequest::has_sound_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProWSKGameQuickSoundRequest::set_has_sound_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProWSKGameQuickSoundRequest::clear_has_sound_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProWSKGameQuickSoundRequest::clear_sound_id() {
  sound_id_ = 0;
  clear_has_sound_id();
}
inline ::google::protobuf::int32 ProWSKGameQuickSoundRequest::sound_id() const {
  return sound_id_;
}
inline void ProWSKGameQuickSoundRequest::set_sound_id(::google::protobuf::int32 value) {
  set_has_sound_id();
  sound_id_ = value;
}

// optional bytes text = 5;
inline bool ProWSKGameQuickSoundRequest::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProWSKGameQuickSoundRequest::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProWSKGameQuickSoundRequest::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProWSKGameQuickSoundRequest::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& ProWSKGameQuickSoundRequest::text() const {
  return *text_;
}
inline void ProWSKGameQuickSoundRequest::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProWSKGameQuickSoundRequest::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProWSKGameQuickSoundRequest::set_text(const void* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProWSKGameQuickSoundRequest::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* ProWSKGameQuickSoundRequest::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProWSKGameQuickSoundRequest::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProWSKGameQuickSoundResponse

// optional int32 desk_id = 2;
inline bool ProWSKGameQuickSoundResponse::has_desk_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameQuickSoundResponse::set_has_desk_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameQuickSoundResponse::clear_has_desk_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameQuickSoundResponse::clear_desk_id() {
  desk_id_ = 0;
  clear_has_desk_id();
}
inline ::google::protobuf::int32 ProWSKGameQuickSoundResponse::desk_id() const {
  return desk_id_;
}
inline void ProWSKGameQuickSoundResponse::set_desk_id(::google::protobuf::int32 value) {
  set_has_desk_id();
  desk_id_ = value;
}

// optional int32 seat_id = 3;
inline bool ProWSKGameQuickSoundResponse::has_seat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameQuickSoundResponse::set_has_seat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameQuickSoundResponse::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameQuickSoundResponse::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProWSKGameQuickSoundResponse::seat_id() const {
  return seat_id_;
}
inline void ProWSKGameQuickSoundResponse::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional int32 sound_id = 4;
inline bool ProWSKGameQuickSoundResponse::has_sound_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProWSKGameQuickSoundResponse::set_has_sound_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProWSKGameQuickSoundResponse::clear_has_sound_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProWSKGameQuickSoundResponse::clear_sound_id() {
  sound_id_ = 0;
  clear_has_sound_id();
}
inline ::google::protobuf::int32 ProWSKGameQuickSoundResponse::sound_id() const {
  return sound_id_;
}
inline void ProWSKGameQuickSoundResponse::set_sound_id(::google::protobuf::int32 value) {
  set_has_sound_id();
  sound_id_ = value;
}

// optional bytes text = 5;
inline bool ProWSKGameQuickSoundResponse::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProWSKGameQuickSoundResponse::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProWSKGameQuickSoundResponse::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProWSKGameQuickSoundResponse::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& ProWSKGameQuickSoundResponse::text() const {
  return *text_;
}
inline void ProWSKGameQuickSoundResponse::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProWSKGameQuickSoundResponse::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProWSKGameQuickSoundResponse::set_text(const void* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProWSKGameQuickSoundResponse::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* ProWSKGameQuickSoundResponse::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProWSKGameQuickSoundResponse::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProWSKGameSendDiscardMahs

// optional int32 seat_id = 2;
inline bool ProWSKGameSendDiscardMahs::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameSendDiscardMahs::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameSendDiscardMahs::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameSendDiscardMahs::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProWSKGameSendDiscardMahs::seat_id() const {
  return seat_id_;
}
inline void ProWSKGameSendDiscardMahs::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// repeated .WSKMahList cbCardData = 3;
inline int ProWSKGameSendDiscardMahs::cbcarddata_size() const {
  return cbcarddata_.size();
}
inline void ProWSKGameSendDiscardMahs::clear_cbcarddata() {
  cbcarddata_.Clear();
}
inline const ::WSKMahList& ProWSKGameSendDiscardMahs::cbcarddata(int index) const {
  return cbcarddata_.Get(index);
}
inline ::WSKMahList* ProWSKGameSendDiscardMahs::mutable_cbcarddata(int index) {
  return cbcarddata_.Mutable(index);
}
inline ::WSKMahList* ProWSKGameSendDiscardMahs::add_cbcarddata() {
  return cbcarddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WSKMahList >&
ProWSKGameSendDiscardMahs::cbcarddata() const {
  return cbcarddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::WSKMahList >*
ProWSKGameSendDiscardMahs::mutable_cbcarddata() {
  return &cbcarddata_;
}

// optional int32 deskCount = 4;
inline bool ProWSKGameSendDiscardMahs::has_deskcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProWSKGameSendDiscardMahs::set_has_deskcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProWSKGameSendDiscardMahs::clear_has_deskcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProWSKGameSendDiscardMahs::clear_deskcount() {
  deskcount_ = 0;
  clear_has_deskcount();
}
inline ::google::protobuf::int32 ProWSKGameSendDiscardMahs::deskcount() const {
  return deskcount_;
}
inline void ProWSKGameSendDiscardMahs::set_deskcount(::google::protobuf::int32 value) {
  set_has_deskcount();
  deskcount_ = value;
}

// -------------------------------------------------------------------

// WSKWeaveItem

// optional int32 weaveKind = 1;
inline bool WSKWeaveItem::has_weavekind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WSKWeaveItem::set_has_weavekind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WSKWeaveItem::clear_has_weavekind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WSKWeaveItem::clear_weavekind() {
  weavekind_ = 0;
  clear_has_weavekind();
}
inline ::google::protobuf::int32 WSKWeaveItem::weavekind() const {
  return weavekind_;
}
inline void WSKWeaveItem::set_weavekind(::google::protobuf::int32 value) {
  set_has_weavekind();
  weavekind_ = value;
}

// optional int32 centercard = 2;
inline bool WSKWeaveItem::has_centercard() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WSKWeaveItem::set_has_centercard() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WSKWeaveItem::clear_has_centercard() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WSKWeaveItem::clear_centercard() {
  centercard_ = 0;
  clear_has_centercard();
}
inline ::google::protobuf::int32 WSKWeaveItem::centercard() const {
  return centercard_;
}
inline void WSKWeaveItem::set_centercard(::google::protobuf::int32 value) {
  set_has_centercard();
  centercard_ = value;
}

// optional int32 provideUser = 3;
inline bool WSKWeaveItem::has_provideuser() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WSKWeaveItem::set_has_provideuser() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WSKWeaveItem::clear_has_provideuser() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WSKWeaveItem::clear_provideuser() {
  provideuser_ = 0;
  clear_has_provideuser();
}
inline ::google::protobuf::int32 WSKWeaveItem::provideuser() const {
  return provideuser_;
}
inline void WSKWeaveItem::set_provideuser(::google::protobuf::int32 value) {
  set_has_provideuser();
  provideuser_ = value;
}

// optional int32 cardsize = 4;
inline bool WSKWeaveItem::has_cardsize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WSKWeaveItem::set_has_cardsize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WSKWeaveItem::clear_has_cardsize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WSKWeaveItem::clear_cardsize() {
  cardsize_ = 0;
  clear_has_cardsize();
}
inline ::google::protobuf::int32 WSKWeaveItem::cardsize() const {
  return cardsize_;
}
inline void WSKWeaveItem::set_cardsize(::google::protobuf::int32 value) {
  set_has_cardsize();
  cardsize_ = value;
}

// -------------------------------------------------------------------

// WSKWeaveItems

// repeated .WSKWeaveItem items = 1;
inline int WSKWeaveItems::items_size() const {
  return items_.size();
}
inline void WSKWeaveItems::clear_items() {
  items_.Clear();
}
inline const ::WSKWeaveItem& WSKWeaveItems::items(int index) const {
  return items_.Get(index);
}
inline ::WSKWeaveItem* WSKWeaveItems::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::WSKWeaveItem* WSKWeaveItems::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WSKWeaveItem >&
WSKWeaveItems::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::WSKWeaveItem >*
WSKWeaveItems::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// ProWSKGameSendActionMahs

// optional int32 seat_id = 2;
inline bool ProWSKGameSendActionMahs::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameSendActionMahs::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameSendActionMahs::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameSendActionMahs::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProWSKGameSendActionMahs::seat_id() const {
  return seat_id_;
}
inline void ProWSKGameSendActionMahs::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// repeated .WSKWeaveItems weaves = 3;
inline int ProWSKGameSendActionMahs::weaves_size() const {
  return weaves_.size();
}
inline void ProWSKGameSendActionMahs::clear_weaves() {
  weaves_.Clear();
}
inline const ::WSKWeaveItems& ProWSKGameSendActionMahs::weaves(int index) const {
  return weaves_.Get(index);
}
inline ::WSKWeaveItems* ProWSKGameSendActionMahs::mutable_weaves(int index) {
  return weaves_.Mutable(index);
}
inline ::WSKWeaveItems* ProWSKGameSendActionMahs::add_weaves() {
  return weaves_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::WSKWeaveItems >&
ProWSKGameSendActionMahs::weaves() const {
  return weaves_;
}
inline ::google::protobuf::RepeatedPtrField< ::WSKWeaveItems >*
ProWSKGameSendActionMahs::mutable_weaves() {
  return &weaves_;
}

// -------------------------------------------------------------------

// ProWSKGameBrokenRequest

// optional int32 seat_id = 2;
inline bool ProWSKGameBrokenRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameBrokenRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameBrokenRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameBrokenRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProWSKGameBrokenRequest::seat_id() const {
  return seat_id_;
}
inline void ProWSKGameBrokenRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional .WSKBROKEN_TYPE type = 3;
inline bool ProWSKGameBrokenRequest::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameBrokenRequest::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameBrokenRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameBrokenRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::WSKBROKEN_TYPE ProWSKGameBrokenRequest::type() const {
  return static_cast< ::WSKBROKEN_TYPE >(type_);
}
inline void ProWSKGameBrokenRequest::set_type(::WSKBROKEN_TYPE value) {
  assert(::WSKBROKEN_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional int32 time = 4;
inline bool ProWSKGameBrokenRequest::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProWSKGameBrokenRequest::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProWSKGameBrokenRequest::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProWSKGameBrokenRequest::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 ProWSKGameBrokenRequest::time() const {
  return time_;
}
inline void ProWSKGameBrokenRequest::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameBrokenOperate

// optional int32 seat_id = 2;
inline bool ProWSKGameBrokenOperate::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameBrokenOperate::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameBrokenOperate::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameBrokenOperate::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProWSKGameBrokenOperate::seat_id() const {
  return seat_id_;
}
inline void ProWSKGameBrokenOperate::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional .WSKBROKEN_OPERATE result = 3 [default = WSK_BO_DISAGREE];
inline bool ProWSKGameBrokenOperate::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameBrokenOperate::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameBrokenOperate::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameBrokenOperate::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::WSKBROKEN_OPERATE ProWSKGameBrokenOperate::result() const {
  return static_cast< ::WSKBROKEN_OPERATE >(result_);
}
inline void ProWSKGameBrokenOperate::set_result(::WSKBROKEN_OPERATE value) {
  assert(::WSKBROKEN_OPERATE_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameBrokenNotify

// optional int32 seat_id = 2;
inline bool ProWSKGameBrokenNotify::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameBrokenNotify::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameBrokenNotify::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameBrokenNotify::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProWSKGameBrokenNotify::seat_id() const {
  return seat_id_;
}
inline void ProWSKGameBrokenNotify::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional .WSKBROKEN_CODE operate_code = 3 [default = WSK_BC_SUCCESS];
inline bool ProWSKGameBrokenNotify::has_operate_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameBrokenNotify::set_has_operate_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameBrokenNotify::clear_has_operate_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameBrokenNotify::clear_operate_code() {
  operate_code_ = 0;
  clear_has_operate_code();
}
inline ::WSKBROKEN_CODE ProWSKGameBrokenNotify::operate_code() const {
  return static_cast< ::WSKBROKEN_CODE >(operate_code_);
}
inline void ProWSKGameBrokenNotify::set_operate_code(::WSKBROKEN_CODE value) {
  assert(::WSKBROKEN_CODE_IsValid(value));
  set_has_operate_code();
  operate_code_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameRuleConfig

// optional int32 game_round = 1;
inline bool ProWSKGameRuleConfig::has_game_round() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameRuleConfig::set_has_game_round() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameRuleConfig::clear_has_game_round() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameRuleConfig::clear_game_round() {
  game_round_ = 0;
  clear_has_game_round();
}
inline ::google::protobuf::int32 ProWSKGameRuleConfig::game_round() const {
  return game_round_;
}
inline void ProWSKGameRuleConfig::set_game_round(::google::protobuf::int32 value) {
  set_has_game_round();
  game_round_ = value;
}

// optional int32 need_card = 2;
inline bool ProWSKGameRuleConfig::has_need_card() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameRuleConfig::set_has_need_card() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameRuleConfig::clear_has_need_card() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameRuleConfig::clear_need_card() {
  need_card_ = 0;
  clear_has_need_card();
}
inline ::google::protobuf::int32 ProWSKGameRuleConfig::need_card() const {
  return need_card_;
}
inline void ProWSKGameRuleConfig::set_need_card(::google::protobuf::int32 value) {
  set_has_need_card();
  need_card_ = value;
}

// optional bool have_bottom_king = 3;
inline bool ProWSKGameRuleConfig::has_have_bottom_king() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProWSKGameRuleConfig::set_has_have_bottom_king() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProWSKGameRuleConfig::clear_has_have_bottom_king() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProWSKGameRuleConfig::clear_have_bottom_king() {
  have_bottom_king_ = false;
  clear_has_have_bottom_king();
}
inline bool ProWSKGameRuleConfig::have_bottom_king() const {
  return have_bottom_king_;
}
inline void ProWSKGameRuleConfig::set_have_bottom_king(bool value) {
  set_has_have_bottom_king();
  have_bottom_king_ = value;
}

// optional bool have_mai_lei = 4;
inline bool ProWSKGameRuleConfig::has_have_mai_lei() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProWSKGameRuleConfig::set_has_have_mai_lei() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProWSKGameRuleConfig::clear_has_have_mai_lei() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProWSKGameRuleConfig::clear_have_mai_lei() {
  have_mai_lei_ = false;
  clear_has_have_mai_lei();
}
inline bool ProWSKGameRuleConfig::have_mai_lei() const {
  return have_mai_lei_;
}
inline void ProWSKGameRuleConfig::set_have_mai_lei(bool value) {
  set_has_have_mai_lei();
  have_mai_lei_ = value;
}

// optional bool hava_hui_tou = 5;
inline bool ProWSKGameRuleConfig::has_hava_hui_tou() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProWSKGameRuleConfig::set_has_hava_hui_tou() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProWSKGameRuleConfig::clear_has_hava_hui_tou() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProWSKGameRuleConfig::clear_hava_hui_tou() {
  hava_hui_tou_ = false;
  clear_has_hava_hui_tou();
}
inline bool ProWSKGameRuleConfig::hava_hui_tou() const {
  return hava_hui_tou_;
}
inline void ProWSKGameRuleConfig::set_hava_hui_tou(bool value) {
  set_has_hava_hui_tou();
  hava_hui_tou_ = value;
}

// optional int32 nMasterSeat = 6;
inline bool ProWSKGameRuleConfig::has_nmasterseat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProWSKGameRuleConfig::set_has_nmasterseat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProWSKGameRuleConfig::clear_has_nmasterseat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProWSKGameRuleConfig::clear_nmasterseat() {
  nmasterseat_ = 0;
  clear_has_nmasterseat();
}
inline ::google::protobuf::int32 ProWSKGameRuleConfig::nmasterseat() const {
  return nmasterseat_;
}
inline void ProWSKGameRuleConfig::set_nmasterseat(::google::protobuf::int32 value) {
  set_has_nmasterseat();
  nmasterseat_ = value;
}

// optional int32 current_game_count = 7;
inline bool ProWSKGameRuleConfig::has_current_game_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProWSKGameRuleConfig::set_has_current_game_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProWSKGameRuleConfig::clear_has_current_game_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProWSKGameRuleConfig::clear_current_game_count() {
  current_game_count_ = 0;
  clear_has_current_game_count();
}
inline ::google::protobuf::int32 ProWSKGameRuleConfig::current_game_count() const {
  return current_game_count_;
}
inline void ProWSKGameRuleConfig::set_current_game_count(::google::protobuf::int32 value) {
  set_has_current_game_count();
  current_game_count_ = value;
}

// optional bool have_jianma = 8;
inline bool ProWSKGameRuleConfig::has_have_jianma() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ProWSKGameRuleConfig::set_has_have_jianma() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ProWSKGameRuleConfig::clear_has_have_jianma() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ProWSKGameRuleConfig::clear_have_jianma() {
  have_jianma_ = false;
  clear_has_have_jianma();
}
inline bool ProWSKGameRuleConfig::have_jianma() const {
  return have_jianma_;
}
inline void ProWSKGameRuleConfig::set_have_jianma(bool value) {
  set_has_have_jianma();
  have_jianma_ = value;
}

// optional int32 nChongguanNum = 9;
inline bool ProWSKGameRuleConfig::has_nchongguannum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ProWSKGameRuleConfig::set_has_nchongguannum() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ProWSKGameRuleConfig::clear_has_nchongguannum() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ProWSKGameRuleConfig::clear_nchongguannum() {
  nchongguannum_ = 0;
  clear_has_nchongguannum();
}
inline ::google::protobuf::int32 ProWSKGameRuleConfig::nchongguannum() const {
  return nchongguannum_;
}
inline void ProWSKGameRuleConfig::set_nchongguannum(::google::protobuf::int32 value) {
  set_has_nchongguannum();
  nchongguannum_ = value;
}

// optional bool bbawangfanbei = 10;
inline bool ProWSKGameRuleConfig::has_bbawangfanbei() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ProWSKGameRuleConfig::set_has_bbawangfanbei() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ProWSKGameRuleConfig::clear_has_bbawangfanbei() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ProWSKGameRuleConfig::clear_bbawangfanbei() {
  bbawangfanbei_ = false;
  clear_has_bbawangfanbei();
}
inline bool ProWSKGameRuleConfig::bbawangfanbei() const {
  return bbawangfanbei_;
}
inline void ProWSKGameRuleConfig::set_bbawangfanbei(bool value) {
  set_has_bbawangfanbei();
  bbawangfanbei_ = value;
}

// optional int32 nPlayerNum = 11;
inline bool ProWSKGameRuleConfig::has_nplayernum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ProWSKGameRuleConfig::set_has_nplayernum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ProWSKGameRuleConfig::clear_has_nplayernum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ProWSKGameRuleConfig::clear_nplayernum() {
  nplayernum_ = 0;
  clear_has_nplayernum();
}
inline ::google::protobuf::int32 ProWSKGameRuleConfig::nplayernum() const {
  return nplayernum_;
}
inline void ProWSKGameRuleConfig::set_nplayernum(::google::protobuf::int32 value) {
  set_has_nplayernum();
  nplayernum_ = value;
}

// optional bytes sRoomNum = 12;
inline bool ProWSKGameRuleConfig::has_sroomnum() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ProWSKGameRuleConfig::set_has_sroomnum() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ProWSKGameRuleConfig::clear_has_sroomnum() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ProWSKGameRuleConfig::clear_sroomnum() {
  if (sroomnum_ != &::google::protobuf::internal::kEmptyString) {
    sroomnum_->clear();
  }
  clear_has_sroomnum();
}
inline const ::std::string& ProWSKGameRuleConfig::sroomnum() const {
  return *sroomnum_;
}
inline void ProWSKGameRuleConfig::set_sroomnum(const ::std::string& value) {
  set_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    sroomnum_ = new ::std::string;
  }
  sroomnum_->assign(value);
}
inline void ProWSKGameRuleConfig::set_sroomnum(const char* value) {
  set_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    sroomnum_ = new ::std::string;
  }
  sroomnum_->assign(value);
}
inline void ProWSKGameRuleConfig::set_sroomnum(const void* value, size_t size) {
  set_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    sroomnum_ = new ::std::string;
  }
  sroomnum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProWSKGameRuleConfig::mutable_sroomnum() {
  set_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    sroomnum_ = new ::std::string;
  }
  return sroomnum_;
}
inline ::std::string* ProWSKGameRuleConfig::release_sroomnum() {
  clear_has_sroomnum();
  if (sroomnum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sroomnum_;
    sroomnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProWSKGameRuleConfig::set_allocated_sroomnum(::std::string* sroomnum) {
  if (sroomnum_ != &::google::protobuf::internal::kEmptyString) {
    delete sroomnum_;
  }
  if (sroomnum) {
    set_has_sroomnum();
    sroomnum_ = sroomnum;
  } else {
    clear_has_sroomnum();
    sroomnum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes sPlayTime = 13;
inline bool ProWSKGameRuleConfig::has_splaytime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ProWSKGameRuleConfig::set_has_splaytime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ProWSKGameRuleConfig::clear_has_splaytime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ProWSKGameRuleConfig::clear_splaytime() {
  if (splaytime_ != &::google::protobuf::internal::kEmptyString) {
    splaytime_->clear();
  }
  clear_has_splaytime();
}
inline const ::std::string& ProWSKGameRuleConfig::splaytime() const {
  return *splaytime_;
}
inline void ProWSKGameRuleConfig::set_splaytime(const ::std::string& value) {
  set_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    splaytime_ = new ::std::string;
  }
  splaytime_->assign(value);
}
inline void ProWSKGameRuleConfig::set_splaytime(const char* value) {
  set_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    splaytime_ = new ::std::string;
  }
  splaytime_->assign(value);
}
inline void ProWSKGameRuleConfig::set_splaytime(const void* value, size_t size) {
  set_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    splaytime_ = new ::std::string;
  }
  splaytime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProWSKGameRuleConfig::mutable_splaytime() {
  set_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    splaytime_ = new ::std::string;
  }
  return splaytime_;
}
inline ::std::string* ProWSKGameRuleConfig::release_splaytime() {
  clear_has_splaytime();
  if (splaytime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = splaytime_;
    splaytime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProWSKGameRuleConfig::set_allocated_splaytime(::std::string* splaytime) {
  if (splaytime_ != &::google::protobuf::internal::kEmptyString) {
    delete splaytime_;
  }
  if (splaytime) {
    set_has_splaytime();
    splaytime_ = splaytime;
  } else {
    clear_has_splaytime();
    splaytime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 gametype = 14;
inline bool ProWSKGameRuleConfig::has_gametype() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ProWSKGameRuleConfig::set_has_gametype() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ProWSKGameRuleConfig::clear_has_gametype() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ProWSKGameRuleConfig::clear_gametype() {
  gametype_ = 0;
  clear_has_gametype();
}
inline ::google::protobuf::int32 ProWSKGameRuleConfig::gametype() const {
  return gametype_;
}
inline void ProWSKGameRuleConfig::set_gametype(::google::protobuf::int32 value) {
  set_has_gametype();
  gametype_ = value;
}

// optional bool isOpenTeammate = 15;
inline bool ProWSKGameRuleConfig::has_isopenteammate() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ProWSKGameRuleConfig::set_has_isopenteammate() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ProWSKGameRuleConfig::clear_has_isopenteammate() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ProWSKGameRuleConfig::clear_isopenteammate() {
  isopenteammate_ = false;
  clear_has_isopenteammate();
}
inline bool ProWSKGameRuleConfig::isopenteammate() const {
  return isopenteammate_;
}
inline void ProWSKGameRuleConfig::set_isopenteammate(bool value) {
  set_has_isopenteammate();
  isopenteammate_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameBrokenStatus

// optional int32 broken_seat = 1;
inline bool ProWSKGameBrokenStatus::has_broken_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameBrokenStatus::set_has_broken_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameBrokenStatus::clear_has_broken_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameBrokenStatus::clear_broken_seat() {
  broken_seat_ = 0;
  clear_has_broken_seat();
}
inline ::google::protobuf::int32 ProWSKGameBrokenStatus::broken_seat() const {
  return broken_seat_;
}
inline void ProWSKGameBrokenStatus::set_broken_seat(::google::protobuf::int32 value) {
  set_has_broken_seat();
  broken_seat_ = value;
}

// repeated bool broken_status = 2;
inline int ProWSKGameBrokenStatus::broken_status_size() const {
  return broken_status_.size();
}
inline void ProWSKGameBrokenStatus::clear_broken_status() {
  broken_status_.Clear();
}
inline bool ProWSKGameBrokenStatus::broken_status(int index) const {
  return broken_status_.Get(index);
}
inline void ProWSKGameBrokenStatus::set_broken_status(int index, bool value) {
  broken_status_.Set(index, value);
}
inline void ProWSKGameBrokenStatus::add_broken_status(bool value) {
  broken_status_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
ProWSKGameBrokenStatus::broken_status() const {
  return broken_status_;
}
inline ::google::protobuf::RepeatedField< bool >*
ProWSKGameBrokenStatus::mutable_broken_status() {
  return &broken_status_;
}

// optional int32 left_time = 3;
inline bool ProWSKGameBrokenStatus::has_left_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProWSKGameBrokenStatus::set_has_left_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProWSKGameBrokenStatus::clear_has_left_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProWSKGameBrokenStatus::clear_left_time() {
  left_time_ = 0;
  clear_has_left_time();
}
inline ::google::protobuf::int32 ProWSKGameBrokenStatus::left_time() const {
  return left_time_;
}
inline void ProWSKGameBrokenStatus::set_left_time(::google::protobuf::int32 value) {
  set_has_left_time();
  left_time_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameDataResp

// repeated int32 total_score = 1;
inline int ProWSKGameDataResp::total_score_size() const {
  return total_score_.size();
}
inline void ProWSKGameDataResp::clear_total_score() {
  total_score_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameDataResp::total_score(int index) const {
  return total_score_.Get(index);
}
inline void ProWSKGameDataResp::set_total_score(int index, ::google::protobuf::int32 value) {
  total_score_.Set(index, value);
}
inline void ProWSKGameDataResp::add_total_score(::google::protobuf::int32 value) {
  total_score_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameDataResp::total_score() const {
  return total_score_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameDataResp::mutable_total_score() {
  return &total_score_;
}

// optional int32 type = 2;
inline bool ProWSKGameDataResp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameDataResp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameDataResp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameDataResp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ProWSKGameDataResp::type() const {
  return type_;
}
inline void ProWSKGameDataResp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameRecordRequest

// optional int32 seat_id = 1;
inline bool ProWSKGameRecordRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameRecordRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameRecordRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameRecordRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProWSKGameRecordRequest::seat_id() const {
  return seat_id_;
}
inline void ProWSKGameRecordRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional bytes url = 2;
inline bool ProWSKGameRecordRequest::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameRecordRequest::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameRecordRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameRecordRequest::clear_url() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& ProWSKGameRecordRequest::url() const {
  return *url_;
}
inline void ProWSKGameRecordRequest::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ProWSKGameRecordRequest::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ProWSKGameRecordRequest::set_url(const void* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProWSKGameRecordRequest::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  return url_;
}
inline ::std::string* ProWSKGameRecordRequest::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProWSKGameRecordRequest::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProWSKGameRecordResponse

// optional int32 seat_id = 1;
inline bool ProWSKGameRecordResponse::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameRecordResponse::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameRecordResponse::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameRecordResponse::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProWSKGameRecordResponse::seat_id() const {
  return seat_id_;
}
inline void ProWSKGameRecordResponse::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional bytes url = 2;
inline bool ProWSKGameRecordResponse::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameRecordResponse::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameRecordResponse::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameRecordResponse::clear_url() {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    url_->clear();
  }
  clear_has_url();
}
inline const ::std::string& ProWSKGameRecordResponse::url() const {
  return *url_;
}
inline void ProWSKGameRecordResponse::set_url(const ::std::string& value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ProWSKGameRecordResponse::set_url(const char* value) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(value);
}
inline void ProWSKGameRecordResponse::set_url(const void* value, size_t size) {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProWSKGameRecordResponse::mutable_url() {
  set_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    url_ = new ::std::string;
  }
  return url_;
}
inline ::std::string* ProWSKGameRecordResponse::release_url() {
  clear_has_url();
  if (url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = url_;
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProWSKGameRecordResponse::set_allocated_url(::std::string* url) {
  if (url_ != &::google::protobuf::internal::kEmptyString) {
    delete url_;
  }
  if (url) {
    set_has_url();
    url_ = url;
  } else {
    clear_has_url();
    url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProWSKGameUserLocationRequest

// optional int32 seat_id = 1;
inline bool ProWSKGameUserLocationRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameUserLocationRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameUserLocationRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameUserLocationRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProWSKGameUserLocationRequest::seat_id() const {
  return seat_id_;
}
inline void ProWSKGameUserLocationRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional double dwlongitude = 2;
inline bool ProWSKGameUserLocationRequest::has_dwlongitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameUserLocationRequest::set_has_dwlongitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameUserLocationRequest::clear_has_dwlongitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameUserLocationRequest::clear_dwlongitude() {
  dwlongitude_ = 0;
  clear_has_dwlongitude();
}
inline double ProWSKGameUserLocationRequest::dwlongitude() const {
  return dwlongitude_;
}
inline void ProWSKGameUserLocationRequest::set_dwlongitude(double value) {
  set_has_dwlongitude();
  dwlongitude_ = value;
}

// optional double dwlatitude = 3;
inline bool ProWSKGameUserLocationRequest::has_dwlatitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProWSKGameUserLocationRequest::set_has_dwlatitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProWSKGameUserLocationRequest::clear_has_dwlatitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProWSKGameUserLocationRequest::clear_dwlatitude() {
  dwlatitude_ = 0;
  clear_has_dwlatitude();
}
inline double ProWSKGameUserLocationRequest::dwlatitude() const {
  return dwlatitude_;
}
inline void ProWSKGameUserLocationRequest::set_dwlatitude(double value) {
  set_has_dwlatitude();
  dwlatitude_ = value;
}

// optional bytes strDistrict = 4;
inline bool ProWSKGameUserLocationRequest::has_strdistrict() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProWSKGameUserLocationRequest::set_has_strdistrict() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProWSKGameUserLocationRequest::clear_has_strdistrict() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProWSKGameUserLocationRequest::clear_strdistrict() {
  if (strdistrict_ != &::google::protobuf::internal::kEmptyString) {
    strdistrict_->clear();
  }
  clear_has_strdistrict();
}
inline const ::std::string& ProWSKGameUserLocationRequest::strdistrict() const {
  return *strdistrict_;
}
inline void ProWSKGameUserLocationRequest::set_strdistrict(const ::std::string& value) {
  set_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    strdistrict_ = new ::std::string;
  }
  strdistrict_->assign(value);
}
inline void ProWSKGameUserLocationRequest::set_strdistrict(const char* value) {
  set_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    strdistrict_ = new ::std::string;
  }
  strdistrict_->assign(value);
}
inline void ProWSKGameUserLocationRequest::set_strdistrict(const void* value, size_t size) {
  set_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    strdistrict_ = new ::std::string;
  }
  strdistrict_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProWSKGameUserLocationRequest::mutable_strdistrict() {
  set_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    strdistrict_ = new ::std::string;
  }
  return strdistrict_;
}
inline ::std::string* ProWSKGameUserLocationRequest::release_strdistrict() {
  clear_has_strdistrict();
  if (strdistrict_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strdistrict_;
    strdistrict_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProWSKGameUserLocationRequest::set_allocated_strdistrict(::std::string* strdistrict) {
  if (strdistrict_ != &::google::protobuf::internal::kEmptyString) {
    delete strdistrict_;
  }
  if (strdistrict) {
    set_has_strdistrict();
    strdistrict_ = strdistrict;
  } else {
    clear_has_strdistrict();
    strdistrict_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes strStreetName = 5;
inline bool ProWSKGameUserLocationRequest::has_strstreetname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProWSKGameUserLocationRequest::set_has_strstreetname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProWSKGameUserLocationRequest::clear_has_strstreetname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProWSKGameUserLocationRequest::clear_strstreetname() {
  if (strstreetname_ != &::google::protobuf::internal::kEmptyString) {
    strstreetname_->clear();
  }
  clear_has_strstreetname();
}
inline const ::std::string& ProWSKGameUserLocationRequest::strstreetname() const {
  return *strstreetname_;
}
inline void ProWSKGameUserLocationRequest::set_strstreetname(const ::std::string& value) {
  set_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    strstreetname_ = new ::std::string;
  }
  strstreetname_->assign(value);
}
inline void ProWSKGameUserLocationRequest::set_strstreetname(const char* value) {
  set_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    strstreetname_ = new ::std::string;
  }
  strstreetname_->assign(value);
}
inline void ProWSKGameUserLocationRequest::set_strstreetname(const void* value, size_t size) {
  set_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    strstreetname_ = new ::std::string;
  }
  strstreetname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProWSKGameUserLocationRequest::mutable_strstreetname() {
  set_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    strstreetname_ = new ::std::string;
  }
  return strstreetname_;
}
inline ::std::string* ProWSKGameUserLocationRequest::release_strstreetname() {
  clear_has_strstreetname();
  if (strstreetname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strstreetname_;
    strstreetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ProWSKGameUserLocationRequest::set_allocated_strstreetname(::std::string* strstreetname) {
  if (strstreetname_ != &::google::protobuf::internal::kEmptyString) {
    delete strstreetname_;
  }
  if (strstreetname) {
    set_has_strstreetname();
    strstreetname_ = strstreetname;
  } else {
    clear_has_strstreetname();
    strstreetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ProWSKGameSyncCardResponse

// optional int32 seat = 2;
inline bool ProWSKGameSyncCardResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameSyncCardResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameSyncCardResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameSyncCardResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameSyncCardResponse::seat() const {
  return seat_;
}
inline void ProWSKGameSyncCardResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// repeated int32 handmahs = 3;
inline int ProWSKGameSyncCardResponse::handmahs_size() const {
  return handmahs_.size();
}
inline void ProWSKGameSyncCardResponse::clear_handmahs() {
  handmahs_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameSyncCardResponse::handmahs(int index) const {
  return handmahs_.Get(index);
}
inline void ProWSKGameSyncCardResponse::set_handmahs(int index, ::google::protobuf::int32 value) {
  handmahs_.Set(index, value);
}
inline void ProWSKGameSyncCardResponse::add_handmahs(::google::protobuf::int32 value) {
  handmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameSyncCardResponse::handmahs() const {
  return handmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameSyncCardResponse::mutable_handmahs() {
  return &handmahs_;
}

// -------------------------------------------------------------------

// ProWSKGameUserPhoneStatusRequest

// optional int32 seat_id = 1;
inline bool ProWSKGameUserPhoneStatusRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameUserPhoneStatusRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameUserPhoneStatusRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameUserPhoneStatusRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProWSKGameUserPhoneStatusRequest::seat_id() const {
  return seat_id_;
}
inline void ProWSKGameUserPhoneStatusRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// optional int32 userstatus = 2;
inline bool ProWSKGameUserPhoneStatusRequest::has_userstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameUserPhoneStatusRequest::set_has_userstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameUserPhoneStatusRequest::clear_has_userstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameUserPhoneStatusRequest::clear_userstatus() {
  userstatus_ = 0;
  clear_has_userstatus();
}
inline ::google::protobuf::int32 ProWSKGameUserPhoneStatusRequest::userstatus() const {
  return userstatus_;
}
inline void ProWSKGameUserPhoneStatusRequest::set_userstatus(::google::protobuf::int32 value) {
  set_has_userstatus();
  userstatus_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameUserGiveUpRequest

// optional int32 seat_id = 1;
inline bool ProWSKGameUserGiveUpRequest::has_seat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameUserGiveUpRequest::set_has_seat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameUserGiveUpRequest::clear_has_seat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameUserGiveUpRequest::clear_seat_id() {
  seat_id_ = 0;
  clear_has_seat_id();
}
inline ::google::protobuf::int32 ProWSKGameUserGiveUpRequest::seat_id() const {
  return seat_id_;
}
inline void ProWSKGameUserGiveUpRequest::set_seat_id(::google::protobuf::int32 value) {
  set_has_seat_id();
  seat_id_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameUserHintRequest

// -------------------------------------------------------------------

// ProWSKGameUserHintResponse

// optional int32 lenth = 1;
inline bool ProWSKGameUserHintResponse::has_lenth() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameUserHintResponse::set_has_lenth() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameUserHintResponse::clear_has_lenth() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameUserHintResponse::clear_lenth() {
  lenth_ = 0;
  clear_has_lenth();
}
inline ::google::protobuf::int32 ProWSKGameUserHintResponse::lenth() const {
  return lenth_;
}
inline void ProWSKGameUserHintResponse::set_lenth(::google::protobuf::int32 value) {
  set_has_lenth();
  lenth_ = value;
}

// repeated int32 outMahs = 2;
inline int ProWSKGameUserHintResponse::outmahs_size() const {
  return outmahs_.size();
}
inline void ProWSKGameUserHintResponse::clear_outmahs() {
  outmahs_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameUserHintResponse::outmahs(int index) const {
  return outmahs_.Get(index);
}
inline void ProWSKGameUserHintResponse::set_outmahs(int index, ::google::protobuf::int32 value) {
  outmahs_.Set(index, value);
}
inline void ProWSKGameUserHintResponse::add_outmahs(::google::protobuf::int32 value) {
  outmahs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameUserHintResponse::outmahs() const {
  return outmahs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameUserHintResponse::mutable_outmahs() {
  return &outmahs_;
}

// -------------------------------------------------------------------

// ProWSKGameUserDaTuNotify

// optional int32 seat = 1;
inline bool ProWSKGameUserDaTuNotify::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameUserDaTuNotify::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameUserDaTuNotify::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameUserDaTuNotify::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameUserDaTuNotify::seat() const {
  return seat_;
}
inline void ProWSKGameUserDaTuNotify::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameUserTeammateRequest

// optional int32 bankerMateSeat = 1;
inline bool ProWSKGameUserTeammateRequest::has_bankermateseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameUserTeammateRequest::set_has_bankermateseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameUserTeammateRequest::clear_has_bankermateseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameUserTeammateRequest::clear_bankermateseat() {
  bankermateseat_ = 0;
  clear_has_bankermateseat();
}
inline ::google::protobuf::int32 ProWSKGameUserTeammateRequest::bankermateseat() const {
  return bankermateseat_;
}
inline void ProWSKGameUserTeammateRequest::set_bankermateseat(::google::protobuf::int32 value) {
  set_has_bankermateseat();
  bankermateseat_ = value;
}

// optional int32 mateCard = 2;
inline bool ProWSKGameUserTeammateRequest::has_matecard() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameUserTeammateRequest::set_has_matecard() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameUserTeammateRequest::clear_has_matecard() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameUserTeammateRequest::clear_matecard() {
  matecard_ = 0;
  clear_has_matecard();
}
inline ::google::protobuf::int32 ProWSKGameUserTeammateRequest::matecard() const {
  return matecard_;
}
inline void ProWSKGameUserTeammateRequest::set_matecard(::google::protobuf::int32 value) {
  set_has_matecard();
  matecard_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameUserDaTuRequest

// optional int32 seat = 1;
inline bool ProWSKGameUserDaTuRequest::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameUserDaTuRequest::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameUserDaTuRequest::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameUserDaTuRequest::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameUserDaTuRequest::seat() const {
  return seat_;
}
inline void ProWSKGameUserDaTuRequest::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool bIsDaTu = 2;
inline bool ProWSKGameUserDaTuRequest::has_bisdatu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameUserDaTuRequest::set_has_bisdatu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameUserDaTuRequest::clear_has_bisdatu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameUserDaTuRequest::clear_bisdatu() {
  bisdatu_ = false;
  clear_has_bisdatu();
}
inline bool ProWSKGameUserDaTuRequest::bisdatu() const {
  return bisdatu_;
}
inline void ProWSKGameUserDaTuRequest::set_bisdatu(bool value) {
  set_has_bisdatu();
  bisdatu_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameUserDaTuResponse

// optional int32 seat = 1;
inline bool ProWSKGameUserDaTuResponse::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameUserDaTuResponse::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameUserDaTuResponse::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameUserDaTuResponse::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameUserDaTuResponse::seat() const {
  return seat_;
}
inline void ProWSKGameUserDaTuResponse::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool bIsDaTu = 2;
inline bool ProWSKGameUserDaTuResponse::has_bisdatu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameUserDaTuResponse::set_has_bisdatu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameUserDaTuResponse::clear_has_bisdatu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameUserDaTuResponse::clear_bisdatu() {
  bisdatu_ = false;
  clear_has_bisdatu();
}
inline bool ProWSKGameUserDaTuResponse::bisdatu() const {
  return bisdatu_;
}
inline void ProWSKGameUserDaTuResponse::set_bisdatu(bool value) {
  set_has_bisdatu();
  bisdatu_ = value;
}

// optional int32 nextSeat = 3;
inline bool ProWSKGameUserDaTuResponse::has_nextseat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProWSKGameUserDaTuResponse::set_has_nextseat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProWSKGameUserDaTuResponse::clear_has_nextseat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProWSKGameUserDaTuResponse::clear_nextseat() {
  nextseat_ = 0;
  clear_has_nextseat();
}
inline ::google::protobuf::int32 ProWSKGameUserDaTuResponse::nextseat() const {
  return nextseat_;
}
inline void ProWSKGameUserDaTuResponse::set_nextseat(::google::protobuf::int32 value) {
  set_has_nextseat();
  nextseat_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameUserDaTuResult

// optional int32 seat = 1;
inline bool ProWSKGameUserDaTuResult::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameUserDaTuResult::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameUserDaTuResult::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameUserDaTuResult::clear_seat() {
  seat_ = 0;
  clear_has_seat();
}
inline ::google::protobuf::int32 ProWSKGameUserDaTuResult::seat() const {
  return seat_;
}
inline void ProWSKGameUserDaTuResult::set_seat(::google::protobuf::int32 value) {
  set_has_seat();
  seat_ = value;
}

// optional bool bIsDaTu = 2;
inline bool ProWSKGameUserDaTuResult::has_bisdatu() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameUserDaTuResult::set_has_bisdatu() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameUserDaTuResult::clear_has_bisdatu() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameUserDaTuResult::clear_bisdatu() {
  bisdatu_ = false;
  clear_has_bisdatu();
}
inline bool ProWSKGameUserDaTuResult::bisdatu() const {
  return bisdatu_;
}
inline void ProWSKGameUserDaTuResult::set_bisdatu(bool value) {
  set_has_bisdatu();
  bisdatu_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameShangYouResult

// repeated int32 shangyouSeat = 1;
inline int ProWSKGameShangYouResult::shangyouseat_size() const {
  return shangyouseat_.size();
}
inline void ProWSKGameShangYouResult::clear_shangyouseat() {
  shangyouseat_.Clear();
}
inline ::google::protobuf::int32 ProWSKGameShangYouResult::shangyouseat(int index) const {
  return shangyouseat_.Get(index);
}
inline void ProWSKGameShangYouResult::set_shangyouseat(int index, ::google::protobuf::int32 value) {
  shangyouseat_.Set(index, value);
}
inline void ProWSKGameShangYouResult::add_shangyouseat(::google::protobuf::int32 value) {
  shangyouseat_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProWSKGameShangYouResult::shangyouseat() const {
  return shangyouseat_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProWSKGameShangYouResult::mutable_shangyouseat() {
  return &shangyouseat_;
}

// -------------------------------------------------------------------

// ProWSKGameShowFriendNotify

// optional bool bShow = 1;
inline bool ProWSKGameShowFriendNotify::has_bshow() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameShowFriendNotify::set_has_bshow() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameShowFriendNotify::clear_has_bshow() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameShowFriendNotify::clear_bshow() {
  bshow_ = false;
  clear_has_bshow();
}
inline bool ProWSKGameShowFriendNotify::bshow() const {
  return bshow_;
}
inline void ProWSKGameShowFriendNotify::set_bshow(bool value) {
  set_has_bshow();
  bshow_ = value;
}

// -------------------------------------------------------------------

// ProWSKGameBoomNumNotify

// optional int32 nSeat = 1;
inline bool ProWSKGameBoomNumNotify::has_nseat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProWSKGameBoomNumNotify::set_has_nseat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProWSKGameBoomNumNotify::clear_has_nseat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProWSKGameBoomNumNotify::clear_nseat() {
  nseat_ = 0;
  clear_has_nseat();
}
inline ::google::protobuf::int32 ProWSKGameBoomNumNotify::nseat() const {
  return nseat_;
}
inline void ProWSKGameBoomNumNotify::set_nseat(::google::protobuf::int32 value) {
  set_has_nseat();
  nseat_ = value;
}

// optional int32 nBoomNum = 2;
inline bool ProWSKGameBoomNumNotify::has_nboomnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProWSKGameBoomNumNotify::set_has_nboomnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProWSKGameBoomNumNotify::clear_has_nboomnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProWSKGameBoomNumNotify::clear_nboomnum() {
  nboomnum_ = 0;
  clear_has_nboomnum();
}
inline ::google::protobuf::int32 ProWSKGameBoomNumNotify::nboomnum() const {
  return nboomnum_;
}
inline void ProWSKGameBoomNumNotify::set_nboomnum(::google::protobuf::int32 value) {
  set_has_nboomnum();
  nboomnum_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameStatusResponse_MSGID>() {
  return ::ProWSKGameStatusResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameDeskInfoResponse_MSGID>() {
  return ::ProWSKGameDeskInfoResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameReadyNotify_MSGID>() {
  return ::ProWSKGameReadyNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameReadyRequest_MSGID>() {
  return ::ProWSKGameReadyRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameReadyResponse_MSGID>() {
  return ::ProWSKGameReadyResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameStart_MSGID>() {
  return ::ProWSKGameStart_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameDiceNotify_MSGID>() {
  return ::ProWSKGameDiceNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameDiceRequest_MSGID>() {
  return ::ProWSKGameDiceRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameDiceResult_MSGID>() {
  return ::ProWSKGameDiceResult_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameSendMahs_MSGID>() {
  return ::ProWSKGameSendMahs_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameKingData_MSGID>() {
  return ::ProWSKGameKingData_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameOutMahsResponse_MSGID>() {
  return ::ProWSKGameOutMahsResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameTimerPower_MSGID>() {
  return ::ProWSKGameTimerPower_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameOperateNotify_MSGID>() {
  return ::ProWSKGameOperateNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameOperateResult_MSGID>() {
  return ::ProWSKGameOperateResult_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameOperateRequest_MSGID>() {
  return ::ProWSKGameOperateRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameTrust_MSGID>() {
  return ::ProWSKGameTrust_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameOutMahRequest_MSGID>() {
  return ::ProWSKGameOutMahRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameCatchCard_MSGID>() {
  return ::ProWSKGameCatchCard_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameEnd_MSGID>() {
  return ::ProWSKGameEnd_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameQuickSoundRequest_MSGID>() {
  return ::ProWSKGameQuickSoundRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameQuickSoundResponse_MSGID>() {
  return ::ProWSKGameQuickSoundResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameSendDiscardMahs_MSGID>() {
  return ::ProWSKGameSendDiscardMahs_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameSendActionMahs_MSGID>() {
  return ::ProWSKGameSendActionMahs_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameBrokenRequest_MSGID>() {
  return ::ProWSKGameBrokenRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameBrokenOperate_MSGID>() {
  return ::ProWSKGameBrokenOperate_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameBrokenNotify_MSGID>() {
  return ::ProWSKGameBrokenNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameRuleConfig_MSGID>() {
  return ::ProWSKGameRuleConfig_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameBrokenStatus_MSGID>() {
  return ::ProWSKGameBrokenStatus_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameDataResp_MSGID>() {
  return ::ProWSKGameDataResp_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameRecordRequest_MSGID>() {
  return ::ProWSKGameRecordRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameRecordResponse_MSGID>() {
  return ::ProWSKGameRecordResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameUserLocationRequest_MSGID>() {
  return ::ProWSKGameUserLocationRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameSyncCardResponse_MSGID>() {
  return ::ProWSKGameSyncCardResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameUserPhoneStatusRequest_MSGID>() {
  return ::ProWSKGameUserPhoneStatusRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameUserGiveUpRequest_MSGID>() {
  return ::ProWSKGameUserGiveUpRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameUserHintRequest_MSGID>() {
  return ::ProWSKGameUserHintRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameUserHintResponse_MSGID>() {
  return ::ProWSKGameUserHintResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameUserDaTuNotify_MSGID>() {
  return ::ProWSKGameUserDaTuNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameUserTeammateRequest_MSGID>() {
  return ::ProWSKGameUserTeammateRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameUserDaTuRequest_MSGID>() {
  return ::ProWSKGameUserDaTuRequest_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameUserDaTuResponse_MSGID>() {
  return ::ProWSKGameUserDaTuResponse_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameUserDaTuResult_MSGID>() {
  return ::ProWSKGameUserDaTuResult_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameShangYouResult_MSGID>() {
  return ::ProWSKGameShangYouResult_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameShowFriendNotify_MSGID>() {
  return ::ProWSKGameShowFriendNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProWSKGameBoomNumNotify_MSGID>() {
  return ::ProWSKGameBoomNumNotify_MSGID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WSKGameState>() {
  return ::WSKGameState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WSKSEND_TYPE>() {
  return ::WSKSEND_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WSKKING_TYPE>() {
  return ::WSKKING_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WSKBROKEN_TYPE>() {
  return ::WSKBROKEN_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WSKBROKEN_OPERATE>() {
  return ::WSKBROKEN_OPERATE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::WSKBROKEN_CODE>() {
  return ::WSKBROKEN_CODE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_kkpk_2eproto__INCLUDED
